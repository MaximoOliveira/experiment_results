15:59:57.083 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
15:59:57.086 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-317aa7055d3b7337ab43b73863692d1288ca246c473f9fd176bc737a7c3e1e08c37a15603cfb7bfc86f7bc2dcc239967b79b605aec11f86ae3ab90dc140b540f-004/Nopol_IntroClassJava_digits_317aa7055d3b7337ab43b73863692d1288ca246c473f9fd176bc737a7c3e1e08c37a15603cfb7bfc86f7bc2dcc239967b79b605aec11f86ae3ab90dc140b540f-004/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-317aa7055d3b7337ab43b73863692d1288ca246c473f9fd176bc737a7c3e1e08c37a15603cfb7bfc86f7bc2dcc239967b79b605aec11f86ae3ab90dc140b540f-004/Nopol_IntroClassJava_digits_317aa7055d3b7337ab43b73863692d1288ca246c473f9fd176bc737a7c3e1e08c37a15603cfb7bfc86f7bc2dcc239967b79b605aec11f86ae3ab90dc140b540f-004/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
15:59:57.086 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
15:59:57.086 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_317aa705_004BlackboxTest, introclassJava.digits_317aa705_004WhiteboxTest]
15:59:57.088 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_317aa705_004BlackboxTest, introclassJava.digits_317aa705_004WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
15:59:57.089 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
15:59:57.092 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
15:59:57.092 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
15:59:57.092 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
15:59:57.092 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
15:59:57.096 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
15:59:57.097 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:00.651 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:00.652 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:68 which is executed by 2 tests
16:00:00.966 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:02.120 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[000000000]That'sall,haveaniced...>]
16:00:02.120 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:02.121 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:68.
16:00:02.122 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:02.122 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:67 which is executed by 2 tests
16:00:02.244 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:02.931 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
16:00:03.027 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:03.142 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:03.287 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:03.563 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:13.943 f.i.l.c.s.ConstraintBasedSynthesis - Failed code synthesis, returning NullCodeGenesis
16:00:13.945 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:13.945 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:74 which is executed by 15 tests
16:00:14.036 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:14.312 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:14.312 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:14.312 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:74.
16:00:14.313 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:14.569 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:14.569 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:14.569 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:74.
16:00:14.570 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:14.570 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:73 which is executed by 15 tests
16:00:14.645 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:14.925 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[8]That'sall,haveaniced...>]
16:00:14.925 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:14.925 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:73.
16:00:14.926 fr.inria.lille.repair.nopol.NoPol - statement #5
16:00:14.927 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:71 which is executed by 15 tests
16:00:15.024 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:15.293 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>[8]That'sall,haveaniced...> but was:<Enteraninteger>[0]That'sall,haveaniced...>]
16:00:15.293 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:15.293 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:71.
16:00:15.299 fr.inria.lille.repair.nopol.NoPol - statement #6
16:00:15.299 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:70 which is executed by 15 tests
16:00:15.390 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:15.677 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:15.677 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:15.677 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:70.
16:00:15.677 fr.inria.lille.repair.nopol.NoPol - statement #7
16:00:15.677 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:69 which is executed by 15 tests
16:00:15.761 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:16.031 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>[8]That'sall,haveaniced...> but was:<Enteraninteger>[0]That'sall,haveaniced...>]
16:00:16.031 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:16.031 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:69.
16:00:16.031 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:16.239 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>[8]That'sall,haveaniced...> but was:<Enteraninteger>[0]That'sall,haveaniced...>]
16:00:16.239 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:16.239 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:69.
16:00:16.239 fr.inria.lille.repair.nopol.NoPol - statement #8
16:00:16.239 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:81 which is executed by 16 tests
16:00:16.323 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:16.576 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:16.576 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:16.576 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:81.
16:00:16.576 fr.inria.lille.repair.nopol.NoPol - statement #9
16:00:16.576 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:79 which is executed by 16 tests
16:00:16.653 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:16.980 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[0]>]
16:00:16.980 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:16.981 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:79.
16:00:16.981 fr.inria.lille.repair.nopol.NoPol - statement #10
16:00:16.981 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:66 which is executed by 16 tests
16:00:17.053 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:17.294 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>[8]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:17.295 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:17.295 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:66.
16:00:17.295 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:17.576 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[000000000]That'sall,haveaniced...>]
16:00:17.576 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>[8]That'sall,haveaniced...> but was:<Enteraninteger>[0]That'sall,haveaniced...>]
16:00:17.577 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:66.
16:00:17.577 fr.inria.lille.repair.nopol.NoPol - statement #11
16:00:17.577 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:65 which is executed by 16 tests
16:00:17.658 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:17.879 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>[8]That'sall,haveaniced...> but was:<Enteraninteger>[00]That'sall,haveaniced...>]
16:00:17.879 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:17.879 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:65.
16:00:17.879 fr.inria.lille.repair.nopol.NoPol - statement #12
16:00:17.879 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:64 which is executed by 16 tests
16:00:17.953 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:18.193 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>[8]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:18.194 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:18.194 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:64.
16:00:18.195 fr.inria.lille.repair.nopol.NoPol - statement #13
16:00:18.196 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:63 which is executed by 16 tests
16:00:18.265 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:18.520 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:18.520 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:18.520 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:63.
16:00:18.521 fr.inria.lille.repair.nopol.NoPol - statement #14
16:00:18.521 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:62 which is executed by 16 tests
16:00:18.596 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:18.838 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>[8]That'sall,haveaniced...> but was:<Enteraninteger>[0]That'sall,haveaniced...>]
16:00:18.839 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:18.839 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:62.
16:00:18.839 fr.inria.lille.repair.nopol.NoPol - statement #15
16:00:18.839 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:61 which is executed by 16 tests
16:00:18.902 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:19.076 tests.output - Failing tests with false: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<[Enteraninteger>8]That'sall,haveaniced...> but was:<[80]That'sall,haveaniced...>]
16:00:19.076 tests.output - Failing tests with true: 
[test4(introclassJava.digits_317aa705_004BlackboxTest): expected:<Enteraninteger>8[]That'sall,haveaniced...> but was:<Enteraninteger>8[0]That'sall,haveaniced...>]
16:00:19.076 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_317aa705_004:61.
16:00:19.076 fr.inria.lille.repair.nopol.NoPol - statement #16
16:00:19.076 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_317aa705_004:60 which is executed by 16 tests
16:00:19.150 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:19.165 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:19.165 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:19.165 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 18
16:00:19.165 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
16:00:19.165 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
16:00:19.165 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 5
16:00:19.165 fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [14] [== of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2, == of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2]
16:00:19.165 fr.inria.lille.repair.nopol.NoPol -                   class java.lang.Boolean: 14
16:00:19.165 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
16:00:19.166 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 22069ms
16:00:19.166 fr.inria.lille.repair.nopol.NoPol - 
