15:59:54.194 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
15:59:54.196 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-6e464f2b5ba1d5ad3d4fc366e7d7712b424aabd8b41ca36257115a16416d202feb27397a413d04944c9ac76976fa8ff8ae646144855e08791ebf9593d1caaaca-000/Nopol_IntroClassJava_digits_6e464f2b5ba1d5ad3d4fc366e7d7712b424aabd8b41ca36257115a16416d202feb27397a413d04944c9ac76976fa8ff8ae646144855e08791ebf9593d1caaaca-000/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-6e464f2b5ba1d5ad3d4fc366e7d7712b424aabd8b41ca36257115a16416d202feb27397a413d04944c9ac76976fa8ff8ae646144855e08791ebf9593d1caaaca-000/Nopol_IntroClassJava_digits_6e464f2b5ba1d5ad3d4fc366e7d7712b424aabd8b41ca36257115a16416d202feb27397a413d04944c9ac76976fa8ff8ae646144855e08791ebf9593d1caaaca-000/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
15:59:54.197 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
15:59:54.197 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_6e464f2b_000BlackboxTest, introclassJava.digits_6e464f2b_000WhiteboxTest]
15:59:54.199 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_6e464f2b_000BlackboxTest, introclassJava.digits_6e464f2b_000WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
15:59:54.199 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
15:59:54.202 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
15:59:54.202 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
15:59:54.202 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
15:59:54.202 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
15:59:54.206 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
15:59:54.206 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:03.897 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:03.900 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_6e464f2b_000:82 which is executed by 16 tests
16:00:04.171 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:05.244 tests.output - Failing tests with false: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:05.244 tests.output - Failing tests with true: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:05.245 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_6e464f2b_000:82.
16:00:05.245 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:05.245 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_6e464f2b_000:80 which is executed by 16 tests
16:00:05.329 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:05.639 tests.output - Failing tests with false: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
16:00:05.639 tests.output - Failing tests with true: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:05.639 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_6e464f2b_000:80.
16:00:05.640 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:05.640 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_6e464f2b_000:75 which is executed by 16 tests
16:00:05.739 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:06.082 tests.output - Failing tests with false: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:06.082 tests.output - Failing tests with true: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:06.083 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_6e464f2b_000:75.
16:00:06.083 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:06.083 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_6e464f2b_000:65 which is executed by 16 tests
16:00:06.159 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:06.406 tests.output - Failing tests with false: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:06.406 tests.output - Failing tests with true: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:06.407 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_6e464f2b_000:65.
16:00:06.407 fr.inria.lille.repair.nopol.NoPol - statement #5
16:00:06.407 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_6e464f2b_000:64 which is executed by 16 tests
16:00:06.482 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:06.739 tests.output - Failing tests with false: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:06.740 tests.output - Failing tests with true: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:06.740 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_6e464f2b_000:64.
16:00:06.740 fr.inria.lille.repair.nopol.NoPol - statement #6
16:00:06.740 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_6e464f2b_000:63 which is executed by 16 tests
16:00:06.817 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:07.158 tests.output - Failing tests with false: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:07.158 tests.output - Failing tests with true: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:07.158 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_6e464f2b_000:63.
16:00:07.159 fr.inria.lille.repair.nopol.NoPol - statement #7
16:00:07.159 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_6e464f2b_000:62 which is executed by 16 tests
16:00:07.278 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:07.573 tests.output - Failing tests with false: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:07.573 tests.output - Failing tests with true: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:07.573 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_6e464f2b_000:62.
16:00:07.573 fr.inria.lille.repair.nopol.NoPol - statement #8
16:00:07.573 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_6e464f2b_000:61 which is executed by 16 tests
16:00:07.646 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:07.924 tests.output - Failing tests with false: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<[Enteraninteger>0]That'sall,haveaniced...> but was:<[]That'sall,haveaniced...>]
16:00:07.924 tests.output - Failing tests with true: 
[test1(introclassJava.digits_6e464f2b_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:07.924 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_6e464f2b_000:61.
16:00:07.925 fr.inria.lille.repair.nopol.NoPol - statement #9
16:00:07.925 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_6e464f2b_000:60 which is executed by 16 tests
16:00:07.987 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:08.002 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:08.003 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:08.003 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 8
16:00:08.003 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
16:00:08.004 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
16:00:08.005 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
16:00:08.005 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
16:00:08.005 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 13795ms
16:00:08.005 fr.inria.lille.repair.nopol.NoPol - 
