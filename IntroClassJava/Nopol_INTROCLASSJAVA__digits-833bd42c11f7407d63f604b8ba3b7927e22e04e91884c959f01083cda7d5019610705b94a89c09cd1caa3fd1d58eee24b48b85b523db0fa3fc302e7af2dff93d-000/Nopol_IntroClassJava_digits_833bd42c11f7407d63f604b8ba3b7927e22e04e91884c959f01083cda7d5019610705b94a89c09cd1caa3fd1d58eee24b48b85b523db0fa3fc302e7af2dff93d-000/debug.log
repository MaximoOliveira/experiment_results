16:00:00.206 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
16:00:00.208 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-833bd42c11f7407d63f604b8ba3b7927e22e04e91884c959f01083cda7d5019610705b94a89c09cd1caa3fd1d58eee24b48b85b523db0fa3fc302e7af2dff93d-000/Nopol_IntroClassJava_digits_833bd42c11f7407d63f604b8ba3b7927e22e04e91884c959f01083cda7d5019610705b94a89c09cd1caa3fd1d58eee24b48b85b523db0fa3fc302e7af2dff93d-000/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-833bd42c11f7407d63f604b8ba3b7927e22e04e91884c959f01083cda7d5019610705b94a89c09cd1caa3fd1d58eee24b48b85b523db0fa3fc302e7af2dff93d-000/Nopol_IntroClassJava_digits_833bd42c11f7407d63f604b8ba3b7927e22e04e91884c959f01083cda7d5019610705b94a89c09cd1caa3fd1d58eee24b48b85b523db0fa3fc302e7af2dff93d-000/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
16:00:00.209 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
16:00:00.209 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_833bd42c_000BlackboxTest, introclassJava.digits_833bd42c_000WhiteboxTest]
16:00:00.211 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_833bd42c_000BlackboxTest, introclassJava.digits_833bd42c_000WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
16:00:00.211 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
16:00:00.214 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
16:00:00.214 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
16:00:00.215 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
16:00:00.215 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
16:00:00.218 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
16:00:00.218 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:21.913 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:21.916 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_833bd42c_000:75 which is executed by 16 tests
16:00:22.232 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:23.222 tests.output - Failing tests with false: 
[test1(introclassJava.digits_833bd42c_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:23.222 tests.output - Failing tests with true: 
[test1(introclassJava.digits_833bd42c_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:23.223 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_833bd42c_000:75.
16:00:23.223 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:23.223 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_833bd42c_000:73 which is executed by 16 tests
16:00:23.352 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:23.735 tests.output - Failing tests with false: 
[test1(introclassJava.digits_833bd42c_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
16:00:23.736 tests.output - Failing tests with true: 
[test1(introclassJava.digits_833bd42c_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:23.736 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_833bd42c_000:73.
16:00:23.736 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:23.736 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_833bd42c_000:65 which is executed by 16 tests
16:00:23.834 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:24.157 tests.output - Failing tests with false: 
[test1(introclassJava.digits_833bd42c_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:24.157 tests.output - Failing tests with true: 
[test1(introclassJava.digits_833bd42c_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:24.157 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_833bd42c_000:65.
16:00:24.157 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:24.157 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_833bd42c_000:64 which is executed by 16 tests
16:00:24.242 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:24.516 tests.output - Failing tests with false: 
[test1(introclassJava.digits_833bd42c_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:24.516 tests.output - Failing tests with true: 
[test1(introclassJava.digits_833bd42c_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:24.516 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_833bd42c_000:64.
16:00:24.516 fr.inria.lille.repair.nopol.NoPol - statement #5
16:00:24.516 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_833bd42c_000:63 which is executed by 16 tests
16:00:24.612 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:24.917 tests.output - Failing tests with false: 
[test1(introclassJava.digits_833bd42c_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:24.917 tests.output - Failing tests with true: 
[test1(introclassJava.digits_833bd42c_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:24.917 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_833bd42c_000:63.
16:00:24.917 fr.inria.lille.repair.nopol.NoPol - statement #6
16:00:24.917 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_833bd42c_000:62 which is executed by 16 tests
16:00:25.013 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:25.343 tests.output - Failing tests with false: 
[test1(introclassJava.digits_833bd42c_000WhiteboxTest): expected:<[Enteraninteger>0]That'sall,haveaniced...> but was:<[]That'sall,haveaniced...>]
16:00:25.344 tests.output - Failing tests with true: 
[test1(introclassJava.digits_833bd42c_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:25.344 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_833bd42c_000:62.
16:00:25.344 fr.inria.lille.repair.nopol.NoPol - statement #7
16:00:25.344 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_833bd42c_000:60 which is executed by 16 tests
16:00:25.441 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:25.463 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:25.463 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:25.463 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 6
16:00:25.463 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
16:00:25.464 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
16:00:25.465 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
16:00:25.465 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
16:00:25.465 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 25237ms
16:00:25.465 fr.inria.lille.repair.nopol.NoPol - 
