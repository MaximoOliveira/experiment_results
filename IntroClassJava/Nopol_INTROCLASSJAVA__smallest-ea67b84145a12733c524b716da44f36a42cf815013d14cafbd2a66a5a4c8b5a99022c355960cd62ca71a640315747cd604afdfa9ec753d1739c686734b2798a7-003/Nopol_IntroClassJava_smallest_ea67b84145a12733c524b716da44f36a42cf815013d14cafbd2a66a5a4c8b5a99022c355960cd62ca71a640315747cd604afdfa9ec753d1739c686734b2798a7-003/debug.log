16:00:33.963 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
16:00:33.966 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__smallest-ea67b84145a12733c524b716da44f36a42cf815013d14cafbd2a66a5a4c8b5a99022c355960cd62ca71a640315747cd604afdfa9ec753d1739c686734b2798a7-003/Nopol_IntroClassJava_smallest_ea67b84145a12733c524b716da44f36a42cf815013d14cafbd2a66a5a4c8b5a99022c355960cd62ca71a640315747cd604afdfa9ec753d1739c686734b2798a7-003/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__smallest-ea67b84145a12733c524b716da44f36a42cf815013d14cafbd2a66a5a4c8b5a99022c355960cd62ca71a640315747cd604afdfa9ec753d1739c686734b2798a7-003/Nopol_IntroClassJava_smallest_ea67b84145a12733c524b716da44f36a42cf815013d14cafbd2a66a5a4c8b5a99022c355960cd62ca71a640315747cd604afdfa9ec753d1739c686734b2798a7-003/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
16:00:33.966 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
16:00:33.966 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.smallest_ea67b841_003BlackboxTest, introclassJava.smallest_ea67b841_003WhiteboxTest]
16:00:33.969 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.smallest_ea67b841_003BlackboxTest, introclassJava.smallest_ea67b841_003WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
16:00:33.969 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
16:00:33.973 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
16:00:33.973 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
16:00:33.973 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
16:00:33.973 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
16:00:33.977 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
16:00:33.978 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:37.611 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:37.613 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.smallest_ea67b841_003:77 which is executed by 12 tests
16:00:37.967 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:39.284 tests.output - Failing tests with false: 
[test6(introclassJava.smallest_ea67b841_003BlackboxTest): expected:<...rsseparatedbyspaces>[2]isthesmallest> but was:<...rsseparatedbyspaces>[0]isthesmallest>]
16:00:39.284 tests.output - Failing tests with true: 
[test6(introclassJava.smallest_ea67b841_003BlackboxTest): expected:<...rsseparatedbyspaces>[2]isthesmallest> but was:<...rsseparatedbyspaces>[3]isthesmallest>, test4(introclassJava.smallest_ea67b841_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0]isthesmallest> but was:<...rsseparatedbyspaces>[1]isthesmallest>, test2(introclassJava.smallest_ea67b841_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0]isthesmallest> but was:<...rsseparatedbyspaces>[2]isthesmallest>]
16:00:39.285 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.smallest_ea67b841_003:77.
16:00:39.285 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:39.285 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.smallest_ea67b841_003:73 which is executed by 12 tests
16:00:39.403 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:39.891 tests.output - Failing tests with false: 
[test6(introclassJava.smallest_ea67b841_003BlackboxTest): expected:<...rsseparatedbyspaces>[2]isthesmallest> but was:<...rsseparatedbyspaces>[0]isthesmallest>]
16:00:39.891 tests.output - Failing tests with true: 
[test6(introclassJava.smallest_ea67b841_003BlackboxTest): expected:<...rsseparatedbyspaces>[2]isthesmallest> but was:<...rsseparatedbyspaces>[3]isthesmallest>, test4(introclassJava.smallest_ea67b841_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0]isthesmallest> but was:<...rsseparatedbyspaces>[1]isthesmallest>, test2(introclassJava.smallest_ea67b841_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0]isthesmallest> but was:<...rsseparatedbyspaces>[2]isthesmallest>]
16:00:39.891 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.smallest_ea67b841_003:73.
16:00:39.891 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:40.360 tests.output - Failing tests with false: 
[test6(introclassJava.smallest_ea67b841_003BlackboxTest): expected:<...rsseparatedbyspaces>[2]isthesmallest> but was:<...rsseparatedbyspaces>[3]isthesmallest>, test4(introclassJava.smallest_ea67b841_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0]isthesmallest> but was:<...rsseparatedbyspaces>[1]isthesmallest>, test2(introclassJava.smallest_ea67b841_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0]isthesmallest> but was:<...rsseparatedbyspaces>[2]isthesmallest>]
16:00:40.361 tests.output - Failing tests with true: 
[test4(introclassJava.smallest_ea67b841_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0]isthesmallest> but was:<...rsseparatedbyspaces>[3]isthesmallest>, test2(introclassJava.smallest_ea67b841_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0]isthesmallest> but was:<...rsseparatedbyspaces>[1]isthesmallest>]
16:00:40.361 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.smallest_ea67b841_003:73.
16:00:40.361 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:40.361 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.smallest_ea67b841_003:70 which is executed by 13 tests
16:00:40.456 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:40.891 tests.output - Failing tests with false: 
[test6(introclassJava.smallest_ea67b841_003BlackboxTest): expected:<...rsseparatedbyspaces>[2]isthesmallest> but was:<...rsseparatedbyspaces>[0]isthesmallest>]
16:00:40.891 tests.output - Failing tests with true: 
[test6(introclassJava.smallest_ea67b841_003BlackboxTest): expected:<...rsseparatedbyspaces>[2]isthesmallest> but was:<...rsseparatedbyspaces>[3]isthesmallest>, test4(introclassJava.smallest_ea67b841_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0]isthesmallest> but was:<...rsseparatedbyspaces>[1]isthesmallest>, test2(introclassJava.smallest_ea67b841_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0]isthesmallest> but was:<...rsseparatedbyspaces>[2]isthesmallest>]
16:00:40.891 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.smallest_ea67b841_003:70.
16:00:40.892 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:41.456 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
16:00:41.544 f.i.l.c.s.ConstraintBasedSynthesis - Successful code synthesis: (b.value < d.value)
16:00:41.544 f.i.l.repair.nopol.patch.TestPatch - Applying patch: introclassJava.smallest_ea67b841_003:70: CONDITIONAL (b.value < d.value)
16:00:41.707 f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "(b.value < d.value)" is working
16:00:41.814 fr.inria.lille.repair.nopol.NoPol - Skipped -9 patches for sake of performance
16:00:41.814 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:41.817 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:41.817 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:41.817 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 5
16:00:41.817 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
16:00:41.817 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 6
16:00:41.817 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 1
16:00:41.817 fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [0] []
16:00:41.817 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 19
16:00:41.817 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 7852ms
16:00:41.817 fr.inria.lille.repair.nopol.NoPol - 
16:00:41.817 fr.inria.lille.repair.nopol.NoPol - ----PATCH FOUND----
16:00:41.818 fr.inria.lille.repair.nopol.NoPol - (b.value < d.value)
16:00:41.822 fr.inria.lille.repair.nopol.NoPol - Nb test that executes the patch: 13
16:00:41.822 fr.inria.lille.repair.nopol.NoPol - introclassJava.smallest_ea67b841_003:70: CONDITIONAL
16:00:41.838 fr.inria.lille.repair.nopol.NoPol - --- a/src/main/java/introclassJava/smallest_ea67b841_003.java
+++ b/src/main/java/introclassJava/smallest_ea67b841_003.java
@@ -69,7 +69,6 @@
             SN.value = a.value;
-        } else if ((b.value < a.value) && (b.value < c.value)
-                   && (b.value < d.value)) {
+        } else if ((b.value < d.value)) {
             SN.value = b.value;
         } else if ((c.value < a.value) && (c.value < b.value)
-                   && (c.value < d.value)) {
+        && (c.value < d.value)) {
             SN.value = c.value;

