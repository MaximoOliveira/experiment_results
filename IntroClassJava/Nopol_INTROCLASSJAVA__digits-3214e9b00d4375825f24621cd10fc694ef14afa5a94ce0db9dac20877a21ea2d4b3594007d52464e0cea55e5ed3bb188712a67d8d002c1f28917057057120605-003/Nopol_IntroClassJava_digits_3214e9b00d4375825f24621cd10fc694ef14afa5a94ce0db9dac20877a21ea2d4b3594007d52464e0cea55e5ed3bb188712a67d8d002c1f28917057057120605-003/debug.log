15:59:52.423 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
15:59:52.426 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-3214e9b00d4375825f24621cd10fc694ef14afa5a94ce0db9dac20877a21ea2d4b3594007d52464e0cea55e5ed3bb188712a67d8d002c1f28917057057120605-003/Nopol_IntroClassJava_digits_3214e9b00d4375825f24621cd10fc694ef14afa5a94ce0db9dac20877a21ea2d4b3594007d52464e0cea55e5ed3bb188712a67d8d002c1f28917057057120605-003/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-3214e9b00d4375825f24621cd10fc694ef14afa5a94ce0db9dac20877a21ea2d4b3594007d52464e0cea55e5ed3bb188712a67d8d002c1f28917057057120605-003/Nopol_IntroClassJava_digits_3214e9b00d4375825f24621cd10fc694ef14afa5a94ce0db9dac20877a21ea2d4b3594007d52464e0cea55e5ed3bb188712a67d8d002c1f28917057057120605-003/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
15:59:52.426 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
15:59:52.426 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_3214e9b0_003BlackboxTest, introclassJava.digits_3214e9b0_003WhiteboxTest]
15:59:52.428 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_3214e9b0_003BlackboxTest, introclassJava.digits_3214e9b0_003WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
15:59:52.429 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
15:59:52.432 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
15:59:52.432 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
15:59:52.432 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
15:59:52.432 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
15:59:52.436 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
15:59:52.436 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
15:59:56.559 fr.inria.lille.repair.nopol.NoPol - statement #1
15:59:56.563 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_3214e9b0_003:74 which is executed by 16 tests
15:59:56.825 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
15:59:57.904 tests.output - Failing tests with false: 
[test1(introclassJava.digits_3214e9b0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
15:59:57.904 tests.output - Failing tests with true: 
[test1(introclassJava.digits_3214e9b0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
15:59:57.904 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_3214e9b0_003:74.
15:59:57.905 fr.inria.lille.repair.nopol.NoPol - statement #2
15:59:57.906 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_3214e9b0_003:72 which is executed by 16 tests
15:59:57.989 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
15:59:58.298 tests.output - Failing tests with false: 
[test1(introclassJava.digits_3214e9b0_003WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
15:59:58.298 tests.output - Failing tests with true: 
[test1(introclassJava.digits_3214e9b0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
15:59:58.298 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_3214e9b0_003:72.
15:59:58.298 fr.inria.lille.repair.nopol.NoPol - statement #3
15:59:58.298 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_3214e9b0_003:64 which is executed by 16 tests
15:59:58.387 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
15:59:58.645 tests.output - Failing tests with false: 
[test1(introclassJava.digits_3214e9b0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
15:59:58.645 tests.output - Failing tests with true: 
[test1(introclassJava.digits_3214e9b0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
15:59:58.646 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_3214e9b0_003:64.
15:59:58.650 fr.inria.lille.repair.nopol.NoPol - statement #4
15:59:58.650 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_3214e9b0_003:63 which is executed by 16 tests
15:59:58.726 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
15:59:58.965 tests.output - Failing tests with false: 
[test1(introclassJava.digits_3214e9b0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
15:59:58.965 tests.output - Failing tests with true: 
[test1(introclassJava.digits_3214e9b0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
15:59:58.965 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_3214e9b0_003:63.
15:59:58.966 fr.inria.lille.repair.nopol.NoPol - statement #5
15:59:58.966 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_3214e9b0_003:62 which is executed by 16 tests
15:59:59.053 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
15:59:59.268 tests.output - Failing tests with false: 
[test1(introclassJava.digits_3214e9b0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
15:59:59.268 tests.output - Failing tests with true: 
[test1(introclassJava.digits_3214e9b0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
15:59:59.268 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_3214e9b0_003:62.
15:59:59.268 fr.inria.lille.repair.nopol.NoPol - statement #6
15:59:59.268 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_3214e9b0_003:61 which is executed by 16 tests
15:59:59.352 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
15:59:59.641 tests.output - Failing tests with false: 
[test1(introclassJava.digits_3214e9b0_003WhiteboxTest): expected:<[Enteraninteger>0]That'sall,haveaniced...> but was:<[]That'sall,haveaniced...>]
15:59:59.641 tests.output - Failing tests with true: 
[test1(introclassJava.digits_3214e9b0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
15:59:59.641 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_3214e9b0_003:61.
15:59:59.642 fr.inria.lille.repair.nopol.NoPol - statement #7
15:59:59.642 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_3214e9b0_003:60 which is executed by 16 tests
15:59:59.706 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
15:59:59.724 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
15:59:59.724 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
15:59:59.724 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 6
15:59:59.724 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
15:59:59.725 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
15:59:59.737 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
15:59:59.737 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
15:59:59.737 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 7284ms
15:59:59.737 fr.inria.lille.repair.nopol.NoPol - 
