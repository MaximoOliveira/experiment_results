16:00:04.760 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
16:00:04.763 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-0cea42f9680f35f5a84c724c396d4d588b65c303453f9585562f2e2af8db74f5096a83a70b17c5126538222b111a0795a34e9fb6db95d62d771d01592abe3ff6-002/Nopol_IntroClassJava_digits_0cea42f9680f35f5a84c724c396d4d588b65c303453f9585562f2e2af8db74f5096a83a70b17c5126538222b111a0795a34e9fb6db95d62d771d01592abe3ff6-002/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-0cea42f9680f35f5a84c724c396d4d588b65c303453f9585562f2e2af8db74f5096a83a70b17c5126538222b111a0795a34e9fb6db95d62d771d01592abe3ff6-002/Nopol_IntroClassJava_digits_0cea42f9680f35f5a84c724c396d4d588b65c303453f9585562f2e2af8db74f5096a83a70b17c5126538222b111a0795a34e9fb6db95d62d771d01592abe3ff6-002/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
16:00:04.763 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
16:00:04.763 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_0cea42f9_002BlackboxTest, introclassJava.digits_0cea42f9_002WhiteboxTest]
16:00:04.765 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_0cea42f9_002BlackboxTest, introclassJava.digits_0cea42f9_002WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
16:00:04.766 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
16:00:04.769 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
16:00:04.769 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
16:00:04.769 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
16:00:04.769 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
16:00:04.773 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
16:00:04.774 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:08.498 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:08.500 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_0cea42f9_002:69 which is executed by 16 tests
16:00:08.792 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:09.888 tests.output - Failing tests with false: 
[test1(introclassJava.digits_0cea42f9_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_0cea42f9_002BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:09.888 tests.output - Failing tests with true: 
[test1(introclassJava.digits_0cea42f9_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_0cea42f9_002BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:09.889 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_0cea42f9_002:69.
16:00:09.889 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:09.889 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_0cea42f9_002:67 which is executed by 16 tests
16:00:09.985 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:10.306 tests.output - Failing tests with false: 
[test1(introclassJava.digits_0cea42f9_002WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test2(introclassJava.digits_0cea42f9_002BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[-6-7-8-9]>]
16:00:10.307 tests.output - Failing tests with true: 
[test1(introclassJava.digits_0cea42f9_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_0cea42f9_002BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:10.307 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_0cea42f9_002:67.
16:00:10.307 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:10.307 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_0cea42f9_002:63 which is executed by 16 tests
16:00:10.386 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:10.659 tests.output - Failing tests with false: 
[test1(introclassJava.digits_0cea42f9_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_0cea42f9_002BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:10.659 tests.output - Failing tests with true: 
[test1(introclassJava.digits_0cea42f9_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_0cea42f9_002BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:10.659 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_0cea42f9_002:63.
16:00:10.660 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:10.660 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_0cea42f9_002:62 which is executed by 16 tests
16:00:10.731 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:11.031 tests.output - Failing tests with false: 
[test1(introclassJava.digits_0cea42f9_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_0cea42f9_002BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:11.031 tests.output - Failing tests with true: 
[test1(introclassJava.digits_0cea42f9_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_0cea42f9_002BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:11.031 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_0cea42f9_002:62.
16:00:11.031 fr.inria.lille.repair.nopol.NoPol - statement #5
16:00:11.031 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_0cea42f9_002:61 which is executed by 16 tests
16:00:11.118 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:11.473 tests.output - Failing tests with false: 
[test1(introclassJava.digits_0cea42f9_002WhiteboxTest): expected:<[Enteraninteger>0]That'sall,haveaniced...> but was:<[]That'sall,haveaniced...>, test2(introclassJava.digits_0cea42f9_002BlackboxTest): expected:<[Enteraninteger>67]8-9That'sall,haveani...> but was:<[-6-7-]8-9That'sall,haveani...>]
16:00:11.473 tests.output - Failing tests with true: 
[test1(introclassJava.digits_0cea42f9_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_0cea42f9_002BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:11.474 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_0cea42f9_002:61.
16:00:11.474 fr.inria.lille.repair.nopol.NoPol - statement #6
16:00:11.474 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_0cea42f9_002:60 which is executed by 16 tests
16:00:11.557 fr.inria.lille.repair.nopol.NoPol - statement #7
16:00:11.557 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_0cea42f9_002:65 which is executed by 15 tests
16:00:11.635 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:12.922 tests.output - Failing tests with false: 
[test2(introclassJava.digits_0cea42f9_002BlackboxTest): test timed out after 1000 milliseconds]
16:00:12.922 tests.output - Failing tests with true: 
[test2(introclassJava.digits_0cea42f9_002BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:12.922 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_0cea42f9_002:65.
16:00:12.922 fr.inria.lille.repair.nopol.NoPol - statement #8
16:00:12.922 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_0cea42f9_002:64 which is executed by 15 tests
16:00:12.997 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:13.245 tests.output - Failing tests with false: 
[test2(introclassJava.digits_0cea42f9_002BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:13.245 tests.output - Failing tests with true: 
[test2(introclassJava.digits_0cea42f9_002BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:13.245 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_0cea42f9_002:64.
16:00:13.246 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:13.251 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:13.251 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:13.251 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 7
16:00:13.251 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
16:00:13.251 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
16:00:13.252 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
16:00:13.253 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
16:00:13.256 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 8488ms
16:00:13.256 fr.inria.lille.repair.nopol.NoPol - 
