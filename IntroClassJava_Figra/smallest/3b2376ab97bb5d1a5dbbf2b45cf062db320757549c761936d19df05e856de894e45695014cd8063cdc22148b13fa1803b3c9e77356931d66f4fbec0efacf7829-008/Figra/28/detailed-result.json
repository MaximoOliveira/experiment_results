{"general":{"NR_RIGHT_COMPILATIONS":83,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"smallest-3b2376ab97bb5d1a5dbbf2b45cf062db320757549c761936d19df05e856de894e45695014cd8063cdc22148b13fa1803b3c9e77356931d66f4fbec0efacf7829-008","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":21,"NR_GENERATIONS":104,"TOTAL_TIME":67.661,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"208","VALIDATION":"|true|0|16|[]|","patchhunks":[{"LOCATION":"introclassJava.smallest_3b2376ab_008","PATH":"\\\/tmp\\\/Figra_IntroClassJava_smallest_3b2376ab97bb5d1a5dbbf2b45cf062db320757549c761936d19df05e856de894e45695014cd8063cdc22148b13fa1803b3c9e77356931d66f4fbec0efacf7829-008\\\/src\\\/main\\\/java\\\/introclassJava\\\/smallest_3b2376ab_008.java","INGREDIENT_SCOPE":"-","SUSPICIOUNESS":"0.48","INGREDIENT_PARENT":"true","PATCH_HUNK_TYPE":"CtLiteralImpl|CtBinaryOperatorImpl","ORIGINAL_CODE":"((n2.value < n1.value) && (n2.value < n3.value))","BUGGY_CODE_TYPE":"CtBinaryOperatorImpl|CtBinaryOperatorImpl","OPERATOR":"ExpressionReplaceOperator","MODIFIED_FILE_PATH":"\\\/tmp\\\/Figra_IntroClassJava_smallest_3b2376ab97bb5d1a5dbbf2b45cf062db320757549c761936d19df05e856de894e45695014cd8063cdc22148b13fa1803b3c9e77356931d66f4fbec0efacf7829-008\\\/.\\\/output_astor\\\/AstorMain-smallest-3b2376ab97bb5d1a5dbbf2b45cf062db320757549c761936d19df05e856de894e45695014cd8063cdc22148b13fa1803b3c9e77356931d66f4fbec0efacf7829-008\\\/\\\/src\\\/\\\/variant-208\\\/introclassJava\\\/smallest_3b2376ab_008.java","LINE":"70","MP_RANKING":"22","PATCH_HUNK_CODE":"true"}],"TIME":"67","GENERATION":"104","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/Figra_IntroClassJava_smallest_3b2376ab97bb5d1a5dbbf2b45cf062db320757549c761936d19df05e856de894e45695014cd8063cdc22148b13fa1803b3c9e77356931d66f4fbec0efacf7829-008\\\/.\\\/output_astor\\\/AstorMain-smallest-3b2376ab97bb5d1a5dbbf2b45cf062db320757549c761936d19df05e856de894e45695014cd8063cdc22148b13fa1803b3c9e77356931d66f4fbec0efacf7829-008\\\/\\\/src\\\/\\\/variant-208","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/Figra_IntroClassJava_smallest_3b2376ab97bb5d1a5dbbf2b45cf062db320757549c761936d19df05e856de894e45695014cd8063cdc22148b13fa1803b3c9e77356931d66f4fbec0efacf7829-008\\\/src\\\/main\\\/java\\\/introclassJava\\\/smallest_3b2376ab_008java\\n+++ \\\/tmp\\\/Figra_IntroClassJava_smallest_3b2376ab97bb5d1a5dbbf2b45cf062db320757549c761936d19df05e856de894e45695014cd8063cdc22148b13fa1803b3c9e77356931d66f4fbec0efacf7829-008\\\/src\\\/main\\\/java\\\/introclassJava\\\/smallest_3b2376ab_008java\\n@@ -70,10 +70,10 @@\\n-\\t\\t} else if (((n2.value < n1.value) && (n2.value < n3.value)) && \\n-\\t\\t(n2.value < n4.value)) {\\n-\\t\\t\\toutput += java.lang.String.format(\\\"%d is the smallest\\\", n2.value);\\n-\\t\\t} else if (((n3.value < n1.value) && (n3.value < n2.value)) && \\n-\\t\\t(n3.value < n4.value)) {\\n-\\t\\t\\toutput += java.lang.String.format(\\\"%d is the smallest\\\", n3.value);\\n-\\t\\t} else {\\n-\\t\\t\\toutput += java.lang.String.format(\\\"%d is the smallest\\\", n4.value);\\n-\\t\\t}\\n-\\t\\tif (true)\\n+\\t\\t} else if (\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\ttrue && (n2.value < n4.value)) { \\t\\t\\toutput += java.lang.String.format(\\\"%d is the smallest\\\", n2.value);} else if (((n3.value < n1.value) && (n3.value < n2.value)) && (n3.value < n4.value)) { \\t\\t\\toutput += java.lang.String.format(\\\"%d is the smallest\\\", n3.value);} else { \\t\\t\\toutput += java.lang.String.format(\\\"%d is the smallest\\\", n4.value);} \\t\\tif (true)\\n\\n"}]}