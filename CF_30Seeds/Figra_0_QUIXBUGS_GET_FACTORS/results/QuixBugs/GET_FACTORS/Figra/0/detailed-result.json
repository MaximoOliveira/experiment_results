{"general":{"NR_RIGHT_COMPILATIONS":949,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"GET_FACTORS-","OUTPUT_STATUS":"TIME_OUT","NR_FAILLING_COMPILATIONS":17,"NR_GENERATIONS":966,"TOTAL_TIME":7204.914,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"36","VALIDATION":"|true|0|11|[]|","patchhunks":[{"LOCATION":"java_programs.GET_FACTORS","PATH":"\\\/users2\\\/cpca56132020\\\/moliveira\\\/folders\\\/Figra_0_QUIXBUGS_GET_FACTORS\\\/Figra_QuixBugs_GET_FACTORS_\\\/src\\\/main\\\/java\\\/GET_FACTORS.java","INGREDIENT_SCOPE":"-","SUSPICIOUNESS":"1","INGREDIENT_PARENT":"_int_0 - _int_1","PATCH_HUNK_TYPE":"CtBinaryOperatorImpl|CtBinaryOperatorImpl","ORIGINAL_CODE":"i","BUGGY_CODE_TYPE":"CtVariableReadImpl|CtBinaryOperatorImpl","OPERATOR":"ExpressionReplaceOperator","MODIFIED_FILE_PATH":"\\\/users2\\\/cpca56132020\\\/moliveira\\\/folders\\\/Figra_0_QUIXBUGS_GET_FACTORS\\\/Figra_QuixBugs_GET_FACTORS_\\\/.\\\/output_astor\\\/AstorMain-GET_FACTORS-\\\/\\\/src\\\/\\\/variant-36\\\/java_programs\\\/GET_FACTORS.java","LINE":"19","MP_RANKING":"5","PATCH_HUNK_CODE":"(n - n)"}],"TIME":"9","GENERATION":"18","FOLDER_SOLUTION_CODE":"\\\/users2\\\/cpca56132020\\\/moliveira\\\/folders\\\/Figra_0_QUIXBUGS_GET_FACTORS\\\/Figra_QuixBugs_GET_FACTORS_\\\/.\\\/output_astor\\\/AstorMain-GET_FACTORS-\\\/\\\/src\\\/\\\/variant-36","PATCH_DIFF_ORIG":"--- \\\/users2\\\/cpca56132020\\\/moliveira\\\/folders\\\/Figra_0_QUIXBUGS_GET_FACTORS\\\/Figra_QuixBugs_GET_FACTORS_\\\/src\\\/main\\\/java\\\/GET_FACTORSjava\\n+++ \\\/users2\\\/cpca56132020\\\/moliveira\\\/folders\\\/Figra_0_QUIXBUGS_GET_FACTORS\\\/Figra_QuixBugs_GET_FACTORS_\\\/src\\\/main\\\/java\\\/GET_FACTORSjava\\n@@ -19,5 +19,5 @@\\n-\\t\\tfor (int i = 2; i < max;) {\\n-\\t\\t\\tif ((n % i) == 0) {\\n-\\t\\t\\t\\tjava.util.ArrayList<java.lang.Integer> prepend = new java.util.ArrayList<java.lang.Integer>(0);\\n-\\t\\t\\t\\tprepend.add(i);\\n-\\t\\t\\t\\tprepend.addAll(java_programs.GET_FACTORS.get_factors(n \\\/ i));\\n+\\t\\tfor (int i = 2; \\n+\\n+\\n+\\n+\\t\\t(n - n) < max; i++) { \\t\\t\\tif ((n % i) == 0) { \\t\\t\\t\\tjava.util.ArrayList<java.lang.Integer> prepend = new java.util.ArrayList<java.lang.Integer>(0); \\t\\t\\t\\tprepend.add(i); \\t\\t\\t\\tprepend.addAll(java_programs.GET_FACTORS.get_factors(n \\\/ i));\\n\\n"}]}