{"general":{"NR_RIGHT_COMPILATIONS":826,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"Math-2","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":181,"NR_GENERATIONS":1007,"TOTAL_TIME":688.853,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"2014","VALIDATION":"|true|0|5195|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math3.distribution.HypergeometricDistribution","PATH":"\\\/tmp\\\/figra_Defects4J_Math_2\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math3\\\/distribution\\\/HypergeometricDistribution.java","INGREDIENT_SCOPE":"-","SUSPICIOUNESS":"0.162","INGREDIENT_PARENT":"org.apache.commons.math3.util.FastMath.min(getSampleSize(), getNumberOfSuccesses())","PATCH_HUNK_TYPE":"CtInvocationImpl|CtBinaryOperatorImpl","ORIGINAL_CODE":"getNumberOfSuccesses()","BUGGY_CODE_TYPE":"CtInvocationImpl|CtBinaryOperatorImpl","OPERATOR":"ExpressionReplaceOperator","MODIFIED_FILE_PATH":"\\\/tmp\\\/figra_Defects4J_Math_2\\\/.\\\/output_astor\\\/AstorMain-Math-2\\\/\\\/src\\\/\\\/variant-2014\\\/org\\\/apache\\\/commons\\\/math3\\\/distribution\\\/HypergeometricDistribution.java","LINE":"268","MP_RANKING":"1","PATCH_HUNK_CODE":"org.apache.commons.math3.util.FastMath.min(getSampleSize(), getNumberOfSuccesses())"}],"TIME":"688","GENERATION":"1007","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/figra_Defects4J_Math_2\\\/.\\\/output_astor\\\/AstorMain-Math-2\\\/\\\/src\\\/\\\/variant-2014","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/figra_Defects4J_Math_2\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math3\\\/distribution\\\/HypergeometricDistributionjava\\n+++ \\\/tmp\\\/figra_Defects4J_Math_2\\\/src\\\/main\\\/java\\\/org\\\/apache\\\/commons\\\/math3\\\/distribution\\\/HypergeometricDistributionjava\\n@@ -268,2 +268 @@\\n-\\t\\treturn ((double) (getSampleSize() * getNumberOfSuccesses())) \\\/ ((double) (getPopulationSize()));\\n-\\t}\\n+\\t\\treturn ((double) (getSampleSize() * \\n@@ -278,7 +276,0 @@\\n-\\tpublic double getNumericalVariance() {\\n-\\t\\tif (!numericalVarianceIsCalculated) {\\n-\\t\\t\\tnumericalVariance = calculateNumericalVariance();\\n-\\t\\t\\tnumericalVarianceIsCalculated = true;\\n-\\t\\t}\\n-\\t\\treturn numericalVariance;\\n-\\t}\\n@@ -291,6 +282,0 @@\\n-\\tprotected double calculateNumericalVariance() {\\n-\\t\\tfinal double N = getPopulationSize();\\n-\\t\\tfinal double m = getNumberOfSuccesses();\\n-\\t\\tfinal double n = getSampleSize();\\n-\\t\\treturn (((n * m) * (N - n)) * (N - m)) \\\/ ((N * N) * (N - 1));\\n-\\t}\\n@@ -307,4 +292,0 @@\\n-\\tpublic int getSupportLowerBound() {\\n-\\t\\treturn org.apache.commons.math3.util.FastMath.max(0, \\n-\\t\\t(getSampleSize() + getNumberOfSuccesses()) - getPopulationSize());\\n-\\t}\\n@@ -320,2 +302,20 @@\\n-\\tpublic int getSupportUpperBound() {\\n-\\t\\treturn org.apache.commons.math3.util.FastMath.min(getNumberOfSuccesses(), getSampleSize());\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\torg.apache.commons.math3.util.FastMath.min(getSampleSize(), getNumberOfSuccesses()))) \\\/ ((double) (getPopulationSize()));} \\tpublic double getNumericalVariance() { \\t\\tif (!numericalVarianceIsCalculated) { \\t\\t\\tnumericalVariance = calculateNumericalVariance(); \\t\\t\\tnumericalVarianceIsCalculated = true;} \\t\\treturn numericalVariance;} \\tprotected double calculateNumericalVariance() { \\t\\tfinal double N = getPopulationSize(); \\t\\tfinal double m = getNumberOfSuccesses(); \\t\\tfinal double n = getSampleSize(); \\t\\treturn (((n * m) * (N - n)) * (N - m)) \\\/ ((N * N) * (N - 1));} \\tpublic int getSupportLowerBound() { \\t\\treturn org.apache.commons.math3.util.FastMath.max(0, (getSampleSize() + getNumberOfSuccesses()) - getPopulationSize());} \\tpublic int getSupportUpperBound() { \\t\\treturn org.apache.commons.math3.util.FastMath.min(getNumberOfSuccesses(), getSampleSize());\\n\\n"}]}