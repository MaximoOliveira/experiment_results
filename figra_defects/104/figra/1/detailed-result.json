{"general":{"NR_RIGHT_COMPILATIONS":220,"NR_ERRONEOUS_VARIANCES":null,"EXECUTION_IDENTIFIER":"Math-104","OUTPUT_STATUS":"STOP_BY_PATCH_FOUND","NR_FAILLING_COMPILATIONS":31,"NR_GENERATIONS":251,"TOTAL_TIME":1161.501,"NR_FAILING_VALIDATION_PROCESS":null},"patches":[{"VARIANT_ID":"502","VALIDATION":"|true|0|1003|[]|","patchhunks":[{"LOCATION":"org.apache.commons.math.special.Gamma","PATH":"\\\/tmp\\\/figra_Defects4J_Math_104\\\/src\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/special\\\/Gamma.java","INGREDIENT_SCOPE":"-","SUSPICIOUNESS":"0.102","INGREDIENT_PARENT":"_int_0 + (_double_1 - _int_0)","PATCH_HUNK_TYPE":"CtBinaryOperatorImpl|CtBinaryOperatorImpl","ORIGINAL_CODE":"epsilon","BUGGY_CODE_TYPE":"CtVariableReadImpl|CtBinaryOperatorImpl","OPERATOR":"ExpressionReplaceOperator","MODIFIED_FILE_PATH":"\\\/tmp\\\/figra_Defects4J_Math_104\\\/.\\\/output_astor\\\/AstorMain-Math-104\\\/\\\/src\\\/\\\/variant-502\\\/org\\\/apache\\\/commons\\\/math\\\/special\\\/Gamma.java","LINE":"171","MP_RANKING":"58","PATCH_HUNK_CODE":"(maxIterations + (epsilon - maxIterations))"}],"TIME":"1161","GENERATION":"251","FOLDER_SOLUTION_CODE":"\\\/tmp\\\/figra_Defects4J_Math_104\\\/.\\\/output_astor\\\/AstorMain-Math-104\\\/\\\/src\\\/\\\/variant-502","PATCH_DIFF_ORIG":"--- \\\/tmp\\\/figra_Defects4J_Math_104\\\/src\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/special\\\/Gammajava\\n+++ \\\/tmp\\\/figra_Defects4J_Math_104\\\/src\\\/java\\\/org\\\/apache\\\/commons\\\/math\\\/special\\\/Gammajava\\n@@ -171 +171 @@\\n-\\t\\t\\twhile ((java.lang.Math.abs(an) > epsilon) && (n < maxIterations)) {\\n+\\t\\t\\twhile ((java.lang.Math.abs(an) > \\n@@ -173,2 +172,0 @@\\n-\\t\\t\\t\\tn = n + 1.0;\\n-\\t\\t\\t\\tan = an * (x \\\/ (a + n));\\n@@ -177,8 +174,0 @@\\n-\\t\\t\\t\\tsum = sum + an;\\n-\\t\\t\\t} \\n-\\t\\t\\tif (n >= maxIterations) {\\n-\\t\\t\\t\\tthrow new org.apache.commons.math.MaxIterationsExceededException(maxIterations);\\n-\\t\\t\\t} else {\\n-\\t\\t\\t\\tret = java.lang.Math.exp(((-x) + (a * java.lang.Math.log(x))) - org.apache.commons.math.special.Gamma.logGamma(a)) * sum;\\n-\\t\\t\\t}\\n-\\t\\t}\\n@@ -186,2 +175,0 @@\\n-\\t\\treturn ret;\\n-\\t}\\n@@ -197,5 +184,0 @@\\n-\\tpublic static double regularizedGammaQ(double a, double x) throws \\n-\\torg.apache.commons.math.MathException \\n-\\t{\\n-\\t\\treturn org.apache.commons.math.special.Gamma.regularizedGammaQ(a, x, org.apache.commons.math.special.Gamma.DEFAULT_EPSILON, java.lang.Integer.MAX_VALUE);\\n-\\t}\\n@@ -225,7 +207,0 @@\\n-\\tpublic static double regularizedGammaQ(final double a, \\n-\\tdouble x, \\n-\\tdouble epsilon, \\n-\\tint maxIterations) throws \\n-\\torg.apache.commons.math.MathException \\n-\\t{\\n-\\t\\tdouble ret;\\n@@ -233,5 +208,0 @@\\n-\\t\\tif (((java.lang.Double.isNaN(a) || java.lang.Double.isNaN(x)) || (a <= 0.0)) || (x < 0.0)) {\\n-\\t\\t\\tret = java.lang.Double.NaN;\\n-\\t\\t} else if (x == 0.0) {\\n-\\t\\t\\tret = 1.0;\\n-\\t\\t} else if ((x < a) || (a < 1.0)) {\\n@@ -240,2 +210,0 @@\\n-\\t\\t\\tret = 1.0 - org.apache.commons.math.special.Gamma.regularizedGammaP(a, x, epsilon, maxIterations);\\n-\\t\\t} else {\\n@@ -243 +211,0 @@\\n-\\t\\t\\torg.apache.commons.math.util.ContinuedFraction cf = new org.apache.commons.math.util.ContinuedFraction() {\\n@@ -245 +212,0 @@\\n-\\t\\t\\t\\tprivate static final long serialVersionUID = 5378525034886164398L;\\n@@ -247,3 +213,0 @@\\n-\\t\\t\\t\\tprotected double getA(int n, double x) {\\n-\\t\\t\\t\\t\\treturn (((2.0 * n) + 1.0) - a) + x;\\n-\\t\\t\\t\\t}\\n@@ -251,2 +215,38 @@\\n-\\t\\t\\t\\tprotected double getB(int n, double x) {\\n-\\t\\t\\t\\t\\treturn n * (a - n);\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\n+\\t\\t\\t(maxIterations + (epsilon - maxIterations))) && (n < maxIterations)) { \\t\\t\\t\\tn = n + 1.0; \\t\\t\\t\\tan = an * (x \\\/ (a + n)); \\t\\t\\t\\tsum = sum + an;} \\t\\t\\tif (n >= maxIterations) { \\t\\t\\t\\tthrow new org.apache.commons.math.MaxIterationsExceededException(maxIterations);} else { \\t\\t\\t\\tret = java.lang.Math.exp(((-x) + (a * java.lang.Math.log(x))) - org.apache.commons.math.special.Gamma.logGamma(a)) * sum;}} \\t\\treturn ret;} \\tpublic static double regularizedGammaQ(double a, double x) throws org.apache.commons.math.MathException { \\t\\treturn org.apache.commons.math.special.Gamma.regularizedGammaQ(a, x, org.apache.commons.math.special.Gamma.DEFAULT_EPSILON, java.lang.Integer.MAX_VALUE);} \\tpublic static double regularizedGammaQ(final double a, double x, double epsilon, int maxIterations) throws org.apache.commons.math.MathException { \\t\\tdouble ret; \\t\\tif (((java.lang.Double.isNaN(a) || java.lang.Double.isNaN(x)) || (a <= 0.0)) || (x < 0.0)) { \\t\\t\\tret = java.lang.Double.NaN;} else if (x == 0.0) { \\t\\t\\tret = 1.0;} else if ((x < a) || (a < 1.0)) { \\t\\t\\tret = 1.0 - org.apache.commons.math.special.Gamma.regularizedGammaP(a, x, epsilon, maxIterations);} else { \\t\\t\\torg.apache.commons.math.util.ContinuedFraction cf = new org.apache.commons.math.util.ContinuedFraction() { \\t\\t\\t\\tprivate static final long serialVersionUID = 5378525034886164398L; \\t\\t\\t\\tprotected double getA(int n, double x) { \\t\\t\\t\\t\\treturn (((2.0 * n) + 1.0) - a) + x;} \\t\\t\\t\\tprotected double getB(int n, double x) { \\t\\t\\t\\t\\treturn n * (a - n);\\n\\n"}]}