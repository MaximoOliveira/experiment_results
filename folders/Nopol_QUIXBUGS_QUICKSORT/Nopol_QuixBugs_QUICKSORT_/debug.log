07:35:48.872 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
07:35:48.875 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_QUICKSORT/Nopol_QuixBugs_QUICKSORT_/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_QUICKSORT/Nopol_QuixBugs_QUICKSORT_/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
07:35:48.875 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
07:35:48.875 fr.inria.lille.repair.nopol.NoPol - Args: [java_testcases.junit.QUICKSORT_Test]
07:35:48.877 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[java_testcases.junit.QUICKSORT_Test], complianceLevel=8, outputFolder=., json=true}
07:35:48.878 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
07:35:48.884 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
07:35:48.884 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
07:35:48.885 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
07:35:48.885 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_282
07:35:48.888 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /users2/cpca56132020/moliveira/deps/jdk-8/bin
07:35:48.888 fr.inria.lille.repair.nopol.NoPol - PATH: /users2/cpca56132020/moliveira/deps/jdk-8/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
07:35:58.436 fr.inria.lille.repair.nopol.NoPol - statement #1
07:35:58.440 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.QUICKSORT:27 which is executed by 12 tests
07:35:58.608 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:35:59.493 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.QUICKSORT_Test): expected:<[1,[1,2,3,3,3,4,5,5,5,6,7,8,9,9,9]]> but was:<[1,[3]]>]
07:35:59.493 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.QUICKSORT_Test): expected:<[1,[1,2,3,3,3,4,5,5,5,6,7,8,9,9],9]> but was:<[1,[2,3,4,5,6,7,8],9]>]
07:35:59.493 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.QUICKSORT:27.
07:35:59.493 fr.inria.lille.repair.nopol.NoPol - statement #2
07:35:59.493 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.QUICKSORT:26 which is executed by 12 tests
07:35:59.559 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:35:59.856 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.QUICKSORT_Test): expected:<[1,[1,2,3,3,3,4,5,5,5,6,7,8,9,9,9]]> but was:<[1,[3]]>]
07:35:59.856 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.QUICKSORT_Test): expected:<[1,[1,2,3,3,3,4,5,5,5,6,7,8,9,9],9]> but was:<[1,[2,3,4,5,6,7,8],9]>]
07:35:59.857 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.QUICKSORT:26.
07:35:59.857 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
07:36:00.591 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
07:36:01.026 f.i.l.c.s.ConstraintBasedSynthesis - Successful code synthesis: lesser!=null
07:36:01.028 f.i.l.repair.nopol.patch.TestPatch - Applying patch: java_programs.QUICKSORT:26: CONDITIONAL lesser!=null
07:36:01.178 f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "lesser!=null" is working
07:36:01.250 fr.inria.lille.repair.nopol.NoPol - Skipped -9 patches for sake of performance
07:36:01.251 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
07:36:01.256 fr.inria.lille.repair.nopol.NoPol - Nb classes : 3
07:36:01.257 fr.inria.lille.repair.nopol.NoPol - Nb methods : 9
07:36:01.257 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 3
07:36:01.257 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
07:36:01.257 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 223
07:36:01.257 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 1
07:36:01.257 fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [0] []
07:36:01.257 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 16
07:36:01.257 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 12380ms
07:36:01.257 fr.inria.lille.repair.nopol.NoPol - 
07:36:01.257 fr.inria.lille.repair.nopol.NoPol - ----PATCH FOUND----
07:36:01.257 fr.inria.lille.repair.nopol.NoPol - lesser!=null
07:36:01.257 fr.inria.lille.repair.nopol.NoPol - Nb test that executes the patch: 12
07:36:01.257 fr.inria.lille.repair.nopol.NoPol - java_programs.QUICKSORT:26: CONDITIONAL
07:36:01.270 fr.inria.lille.repair.nopol.NoPol - --- a/src/main/java/QUICKSORT.java
+++ b/src/main/java/QUICKSORT.java
@@ -25,3 +25,3 @@
                 lesser.add(x);
-            } else if (x > pivot) {
+            } else if (lesser!=null) {
                 greater.add(x);

