07:35:43.514 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
07:35:43.521 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_GET_FACTORS/Nopol_QuixBugs_GET_FACTORS_/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_GET_FACTORS/Nopol_QuixBugs_GET_FACTORS_/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
07:35:43.521 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
07:35:43.522 fr.inria.lille.repair.nopol.NoPol - Args: [java_testcases.junit.GET_FACTORS_Test]
07:35:43.524 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[java_testcases.junit.GET_FACTORS_Test], complianceLevel=8, outputFolder=., json=true}
07:35:43.524 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
07:35:43.527 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
07:35:43.527 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
07:35:43.527 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
07:35:43.527 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_282
07:35:43.531 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /users2/cpca56132020/moliveira/deps/jdk-8/bin
07:35:43.531 fr.inria.lille.repair.nopol.NoPol - PATH: /users2/cpca56132020/moliveira/deps/jdk-8/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
07:36:00.881 fr.inria.lille.repair.nopol.NoPol - statement #1
07:36:00.897 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.GET_FACTORS:27 which is executed by 10 tests
07:36:01.087 fr.inria.lille.repair.nopol.NoPol - statement #2
07:36:01.088 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.GET_FACTORS:19 which is executed by 10 tests
07:36:01.200 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:36:02.143 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,2,5,5]]> but was:<[[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,2,2,13]]> but was:<[[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,7]]> but was:<[[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,1093]]> but was:<[[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,37]]> but was:<[[]]>]
07:36:02.144 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,5[,5]]> but was:<[2,2,5[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,2[,13]]> but was:<[2,2,2[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,7]]> but was:<[3,3[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,1093]]> but was:<[3,3[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[2[,37]]> but was:<[2[]]>]
07:36:02.144 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.GET_FACTORS:19.
07:36:02.144 fr.inria.lille.repair.nopol.NoPol - statement #3
07:36:02.144 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.GET_FACTORS:18 which is executed by 10 tests
07:36:02.217 fr.inria.lille.repair.nopol.NoPol - statement #4
07:36:02.218 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:35 which is executed by 11 tests
07:36:02.218 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:35
07:36:02.218 fr.inria.lille.repair.nopol.NoPol - statement #5
07:36:02.218 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:31 which is executed by 11 tests
07:36:02.218 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:31
07:36:02.218 fr.inria.lille.repair.nopol.NoPol - statement #6
07:36:02.218 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:28 which is executed by 11 tests
07:36:02.218 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:28
07:36:02.226 fr.inria.lille.repair.nopol.NoPol - statement #7
07:36:02.227 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:27 which is executed by 11 tests
07:36:02.227 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:27
07:36:02.227 fr.inria.lille.repair.nopol.NoPol - statement #8
07:36:02.227 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:26 which is executed by 11 tests
07:36:02.227 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:26
07:36:02.227 fr.inria.lille.repair.nopol.NoPol - statement #9
07:36:02.227 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:22 which is executed by 11 tests
07:36:02.227 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:22
07:36:02.227 fr.inria.lille.repair.nopol.NoPol - statement #10
07:36:02.227 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:21 which is executed by 11 tests
07:36:02.227 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:21
07:36:02.228 fr.inria.lille.repair.nopol.NoPol - statement #11
07:36:02.228 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:16 which is executed by 11 tests
07:36:02.228 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:16
07:36:02.228 fr.inria.lille.repair.nopol.NoPol - statement #12
07:36:02.228 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:15 which is executed by 11 tests
07:36:02.228 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:15
07:36:02.228 fr.inria.lille.repair.nopol.NoPol - statement #13
07:36:02.228 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:14 which is executed by 11 tests
07:36:02.228 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:14
07:36:02.228 fr.inria.lille.repair.nopol.NoPol - statement #14
07:36:02.228 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.GET_FACTORS:15 which is executed by 11 tests
07:36:02.298 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:36:02.862 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,5[,5]]> but was:<[2,2,5[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,2[,13]]> but was:<[2,2,2[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,7]]> but was:<[3,3[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,1093]]> but was:<[3,3[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[2[,37]]> but was:<[2[]]>]
07:36:02.862 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,5[,5]]> but was:<[2,2,5[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,2[,13]]> but was:<[2,2,2[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,7]]> but was:<[3,3[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,1093]]> but was:<[3,3[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[2[,37]]> but was:<[2[]]>]
07:36:02.862 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.GET_FACTORS:15.
07:36:02.865 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
07:36:03.293 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,5[,5]]> but was:<[2,2,5[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,2[,13]]> but was:<[2,2,2[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,7]]> but was:<[3,3[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,1093]]> but was:<[3,3[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[2[,37]]> but was:<[2[]]>]
07:36:03.293 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,2,5,5]]> but was:<[[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,2,2,13]]> but was:<[[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,7]]> but was:<[[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,1093]]> but was:<[[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,37]]> but was:<[[]]>]
07:36:03.294 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.GET_FACTORS:15.
07:36:03.294 fr.inria.lille.repair.nopol.NoPol - statement #15
07:36:03.294 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.GET_FACTORS:20 which is executed by 8 tests
07:36:03.366 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:36:03.927 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,2,5,5]]> but was:<[[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,2,2,13]]> but was:<[[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,7]]> but was:<[[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,1093]]> but was:<[[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,37]]> but was:<[[]]>]
07:36:03.928 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,5[,5]]> but was:<[2,2,5[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,2[,13]]> but was:<[2,2,2[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,7]]> but was:<[3,3[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,1093]]> but was:<[3,3[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[2[,37]]> but was:<[2[]]>]
07:36:03.928 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.GET_FACTORS:20.
07:36:03.928 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
07:36:04.212 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,2,5,5]]> but was:<[[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,2,2,13]]> but was:<[[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,7]]> but was:<[[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,1093]]> but was:<[[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,37]]> but was:<[[]]>]
07:36:04.212 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,[5,5]]> but was:<[2,2,[2,2,2]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,2,[13]]> but was:<[2,2,2,[2,2]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[2,2,2,2,2]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,7]]> but was:<[[2,2,2,2]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[2,2,2]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[2,2,2,2,2]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,1093]]> but was:<[[2,2,2,2,2,2,2,2,2,2,2,2]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[2,[37]]> but was:<[2,[2,2,2,2]]>]
07:36:04.212 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.GET_FACTORS:20.
07:36:04.212 fr.inria.lille.repair.nopol.NoPol - statement #16
07:36:04.212 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:44 which is executed by 5 tests
07:36:04.212 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:44
07:36:04.212 fr.inria.lille.repair.nopol.NoPol - statement #17
07:36:04.212 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:41 which is executed by 5 tests
07:36:04.212 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:41
07:36:04.212 fr.inria.lille.repair.nopol.NoPol - statement #18
07:36:04.212 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:38 which is executed by 5 tests
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:38
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - statement #19
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:37 which is executed by 5 tests
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:37
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - statement #20
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:32 which is executed by 5 tests
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:32
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - statement #21
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:30 which is executed by 5 tests
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:30
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - statement #22
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:29 which is executed by 5 tests
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:29
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - statement #23
07:36:04.213 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.GET_FACTORS:24 which is executed by 5 tests
07:36:04.276 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:36:04.523 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,2,5,5]]> but was:<[[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,2,2,13]]> but was:<[[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,7]]> but was:<[[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,1093]]> but was:<[[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,37]]> but was:<[[]]>]
07:36:04.524 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,5[,5]]> but was:<[2,2,5[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,2[,13]]> but was:<[2,2,2[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,7]]> but was:<[3,3[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,1093]]> but was:<[3,3[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[2[,37]]> but was:<[2[]]>]
07:36:04.524 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.GET_FACTORS:24.
07:36:04.524 fr.inria.lille.repair.nopol.NoPol - statement #24
07:36:04.524 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.GET_FACTORS:23 which is executed by 5 tests
07:36:04.575 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:36:04.785 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[2[,2,5,5]]> but was:<[2[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[2[,2,2,13]]> but was:<[2[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[3[,3,7]]> but was:<[3[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[3[,3,1093]]> but was:<[3[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[2[,37]]> but was:<[2[]]>]
07:36:04.785 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,5[,5]]> but was:<[2,2,5[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,2[,13]]> but was:<[2,2,2[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,7]]> but was:<[3,3[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,1093]]> but was:<[3,3[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[2[,37]]> but was:<[2[]]>]
07:36:04.785 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.GET_FACTORS:23.
07:36:04.785 fr.inria.lille.repair.nopol.NoPol - statement #25
07:36:04.786 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.GET_FACTORS:22 which is executed by 5 tests
07:36:04.850 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:36:05.075 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,2,5,5]]> but was:<[[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,2,2,13]]> but was:<[[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,7]]> but was:<[[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[[3,3,1093]]> but was:<[[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[[2,37]]> but was:<[[]]>]
07:36:05.075 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,5[,5]]> but was:<[2,2,5[]]>, test_3(java_testcases.junit.GET_FACTORS_Test): expected:<[2,2,2[,13]]> but was:<[2,2,2[]]>, test_2(java_testcases.junit.GET_FACTORS_Test): expected:<[[101]]> but was:<[[]]>, test_5(java_testcases.junit.GET_FACTORS_Test): expected:<[[3]]> but was:<[[]]>, test_4(java_testcases.junit.GET_FACTORS_Test): expected:<[[2]]> but was:<[[]]>, test_7(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,7]]> but was:<[3,3[]]>, test_6(java_testcases.junit.GET_FACTORS_Test): expected:<[[17]]> but was:<[[]]>, test_9(java_testcases.junit.GET_FACTORS_Test): expected:<[[73]]> but was:<[[]]>, test_10(java_testcases.junit.GET_FACTORS_Test): expected:<[3,3[,1093]]> but was:<[3,3[]]>, test_8(java_testcases.junit.GET_FACTORS_Test): expected:<[2[,37]]> but was:<[2[]]>]
07:36:05.075 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.GET_FACTORS:22.
07:36:05.076 fr.inria.lille.repair.nopol.NoPol - statement #26
07:36:05.076 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.GET_FACTORS:21 which is executed by 5 tests
07:36:05.131 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
07:36:05.151 fr.inria.lille.repair.nopol.NoPol - Nb classes : 3
07:36:05.151 fr.inria.lille.repair.nopol.NoPol - Nb methods : 9
07:36:05.151 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 8
07:36:05.151 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
07:36:05.151 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
07:36:05.152 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
07:36:05.153 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
07:36:05.153 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 21618ms
07:36:05.153 fr.inria.lille.repair.nopol.NoPol - 
