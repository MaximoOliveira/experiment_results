cd /users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_MERGESORT/Nopol_QuixBugs_MERGESORT_;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/users2/cpca56132020/moliveira/deps/jdk-8/bin:$PATH";
export JAVA_HOME="/users2/cpca56132020/moliveira/deps/jdk-8/bin";
time java -Xmx4g -Xms1g -cp /users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar:/users2/cpca56132020/moliveira/deps/jdk-8/bin/../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3 \
	--complianceLevel 8 \
	--source src/main/java \
	--classpath "target/classes:target/test-classes:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
07:35:48.077 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
07:35:48.080 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_MERGESORT/Nopol_QuixBugs_MERGESORT_/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_MERGESORT/Nopol_QuixBugs_MERGESORT_/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
07:35:48.080 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
07:35:48.080 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [java_testcases.junit.MERGESORT_Test]
07:35:48.082 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[java_testcases.junit.MERGESORT_Test], complianceLevel=8, outputFolder=., json=true}
07:35:48.083 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
07:35:48.090 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
07:35:48.090 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
07:35:48.090 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
07:35:48.090 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_282
07:35:48.093 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /users2/cpca56132020/moliveira/deps/jdk-8/bin
07:35:48.094 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /users2/cpca56132020/moliveira/deps/jdk-8/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
07:35:53.089 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
07:35:53.090 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.MERGESORT:47 which is executed by 13 tests
119590327
07:35:53.352 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:36:33.110 [pool-3-thread-1] DEBUG tests.output - Failing tests with false: 
[test_0(java_testcases.junit.MERGESORT_Test): expected:<[1,2,[4,6,7,33,72]]> but was:<[1,2,[6,72,7,33,4]]>, test_11(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,1]9]> but was:<[[4,6,1,10,14,16,18,17,12,3,11,8,13,5,7,19,15,2,]9]>, test_10(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5,6,7]]> but was:<[[3,4,2,5,6,7,1]]>, test_9(java_testcases.junit.MERGESORT_Test): expected:<[1,[2,3,4,5]]> but was:<[1,[3,4,5,2]]>, test_12(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,4,6,9,10,14,15,16,18,19]]> but was:<[[6,1,10,14,16,19,15,2,9,4,18]]>, test_3(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3],4,5]> but was:<[[3,1,2],4,5]>, test_4(java_testcases.junit.MERGESORT_Test): expected:<[1,[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]]> but was:<[1,[8,14,9,15,5,4,3,7,17,11,18,2,12,16,13,6,10]]>, test_1(java_testcases.junit.MERGESORT_Test): expected:<[1,[1,2,3,3,3,4,5,5,5,6,7,8,9,9,9]]> but was:<[1,[3,4,1,5,5,3,5,8,9,2,6,9,7,9,3]]>, test_2(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3],4,5]> but was:<[[3,2,1],4,5]>, test_7(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5,6,7,8,9,10,11,12,13,14],15]> but was:<[[5,7,8,9,12,10,6,2,4,13,1,3,14,11],15]>, test_8(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5,6],7]> but was:<[[3,4,6,5,2,1],7]>, test_5(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]]> but was:<[[4,5,2,9,15,8,12,13,16,3,1,7,11,17,14,10,6]]>, test_6(java_testcases.junit.MERGESORT_Test): expected:<[1,[2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]]> but was:<[1,[13,14,7,15,16,9,5,23,24,21,19,17,12,10,25,11,3,2,6,22,8,20,4,18]]>]
07:36:33.111 [pool-3-thread-1] DEBUG tests.output - Failing tests with true: 
[test_0(java_testcases.junit.MERGESORT_Test): null, test_11(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_10(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_9(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_12(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_3(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_4(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_1(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_2(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_7(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_8(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_5(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_6(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds]
07:36:33.111 [pool-3-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.MERGESORT:47.
07:36:33.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
07:36:33.116 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.MERGESORT:46 which is executed by 13 tests
119590327
07:36:33.487 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:37:32.778 [pool-31-thread-1] DEBUG tests.output - Failing tests with false: 
[test_0(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,4,6,7,33,72]]> but was:<[[]]>, test_11(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19]]> but was:<[[]]>, test_10(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5,6,7]]> but was:<[[]]>, test_9(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5]]> but was:<[[]]>, test_12(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,4,6,9,10,14,15,16,18,19]]> but was:<[[]]>, test_3(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5]]> but was:<[[]]>, test_4(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18]]> but was:<[[]]>, test_1(java_testcases.junit.MERGESORT_Test): expected:<[[1,1,2,3,3,3,4,5,5,5,6,7,8,9,9,9]]> but was:<[[]]>, test_2(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5]]> but was:<[[]]>, test_7(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15]]> but was:<[[]]>, test_8(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5,6,7]]> but was:<[[]]>, test_5(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17]]> but was:<[[]]>, test_6(java_testcases.junit.MERGESORT_Test): expected:<[[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25]]> but was:<[[]]>]
07:37:32.779 [pool-31-thread-1] DEBUG tests.output - Failing tests with true: 
[test_0(java_testcases.junit.MERGESORT_Test): null, test_11(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_10(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_9(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_12(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_3(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_4(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_1(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_2(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_7(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_8(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_5(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_6(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds]
07:37:32.780 [pool-31-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.MERGESORT:46.
07:37:32.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
07:37:32.780 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.MERGESORT:45 which is executed by 13 tests
119590327
07:37:33.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
07:37:33.464 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.MERGESORT:44 which is executed by 13 tests
119590327
07:37:34.245 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:39:27.933 [pool-59-thread-1] DEBUG tests.output - Failing tests with false: 
[test_0(java_testcases.junit.MERGESORT_Test): null, test_11(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_10(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_9(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_12(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_3(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_4(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_1(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_2(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_7(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_8(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_5(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_6(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds]
07:39:27.933 [pool-59-thread-1] DEBUG tests.output - Failing tests with true: 
[test_0(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_11(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_10(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_9(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_12(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_3(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_4(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_1(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_2(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_7(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_8(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_5(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds, test_6(java_testcases.junit.MERGESORT_Test): test timed out after 3000 milliseconds]
07:39:27.933 [pool-59-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.MERGESORT:44.
07:39:27.934 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
07:39:27.935 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.MERGESORT:43 which is executed by 13 tests
119590327
07:39:28.950 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:40:39.415 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: unable to create new native thread
07:40:39.415 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
07:40:39.415 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.MERGESORT:42 which is executed by 13 tests
119590327
07:40:40.556 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
07:40:40.556 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.MERGESORT:41 which is executed by 13 tests
119590327
07:40:42.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
07:40:42.396 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.MERGESORT:39 which is executed by 13 tests
119590327
07:40:43.861 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:40:48.162 [pool-101-thread-1] ERROR x.java.compiler.DynamicClassCompiler - [Compilation errors]
MERGESORT.java:47: error: missing return statement
    }
    ^
07:40:48.189 [pool-101-thread-1] ERROR f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class MERGESORT {
    public static java.util.ArrayList<java.lang.Integer> merge(java.util.ArrayList<java.lang.Integer> left, java.util.ArrayList<java.lang.Integer> right) {
        java.util.ArrayList<java.lang.Integer> result = new java.util.ArrayList<java.lang.Integer>(100);
        int i = 0;
        int j = 0;
        while ((i < left.size()) && (j < right.size())) {
            if (left.get(i) <= right.get(j)) {
                result.add(left.get(i));
                i++;
            } else {
                result.add(right.get(j));
                j++;
            }
        } 
        result.addAll(left.subList(i, left.size()).isEmpty() ? right.subList(j, right.size()) : left.subList(i, left.size()));
        return result;
    }

    public static java.util.ArrayList<java.lang.Integer> mergesort(java.util.ArrayList<java.lang.Integer> arr) {
        if (arr.size() == 0) {
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(4).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectInput("arr",arr);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(4).collectionEnds();
            }
            if (runtimeAngelicValue)
                return arr;

        } else {
            int middle = arr.size() / 2;
            java.util.ArrayList<java.lang.Integer> left = new java.util.ArrayList<java.lang.Integer>(100);
            left.addAll(arr.subList(0, middle));
            left = java_programs.MERGESORT.mergesort(left);
            java.util.ArrayList<java.lang.Integer> right = new java.util.ArrayList<java.lang.Integer>(100);
            right.addAll(arr.subList(middle, arr.size()));
            right = java_programs.MERGESORT.mergesort(right);
            return java_programs.MERGESORT.merge(left, right);
        }
    }
}
07:40:48.190 [pool-2-thread-1] ERROR fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
07:40:48.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
07:40:48.190 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.MERGESORT:38 which is executed by 13 tests
119590327
java.util.concurrent.ExecutionException: java.lang.OutOfMemoryError: Metaspace
	at java.util.concurrent.FutureTask.report(FutureTask.java:122)
	at java.util.concurrent.FutureTask.get(FutureTask.java:206)
	at fr.inria.lille.repair.Main.main(Main.java:106)
Caused by: java.lang.OutOfMemoryError: Metaspace

Usage: java -jar nopol.jar
                          [(-m|--mode) <repair|ranking>] (-e|--type) <condition|precondition|pre_then_cond|loop|arithmetic> [(-o|--oracle) <angelic|symbolic>] [(-y|--synthesis) <smt|dynamoth>] [(-l|--solver) <z3|cvc4>] [(-p|--solver-path) <solverPath>] (-s|--source) source1:source2:...:sourceN  (-c|--classpath) <classpath> [(-t|--test) test1:test2:...:testN ] [--complianceLevel <complianceLevel>] [--maxTime <maxTime>] [--maxTimeType <maxTimeType>] [(-z|--flocal) < cocospoon|dumb|gzoltar>] [--output <outputFolder>] [--json[:<outputJson>]]

Exception in thread "main" java.lang.OutOfMemoryError: Metaspace

real	5m14.412s
user	5m11.095s
sys	0m2.874s
\n\nNode: hpc061.ncg.ingrid.pt\n
\n\nDate: Wed Mar 31 07:41:02 EDT 2021\n
