{
  "repair_end": "2021-03-31 12:36:02.430910", 
  "repair_begin": "2021-03-31 12:35:46.541101", 
  "patches": [
    {
      "nb_test_that_execute_statement": 7, 
      "patchLocation": {
        "line": 17, 
        "class": "java_programs.FIND_IN_SORTED"
      }, 
      "patchType": "CONDITIONAL", 
      "patch": "--- a/src/main/java/FIND_IN_SORTED.java\n+++ b/src/main/java/FIND_IN_SORTED.java\n@@ -16,3 +16,3 @@\n         int mid = start + (end - start) / 2; // check this is floor division\n-        if (x < arr[mid]) {\n+        if ((mid <= 2) || ((!(arr.length < x)) && ((arr[mid]) != (x)))) {\n             return binsearch(arr, x, start, mid);\n"
    }
  ]
}
