07:53:08.630 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
07:53:08.632 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_POWERSET/Nopol_QuixBugs_POWERSET_/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_POWERSET/Nopol_QuixBugs_POWERSET_/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
07:53:08.633 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
07:53:08.633 fr.inria.lille.repair.nopol.NoPol - Args: [java_testcases.junit.POWERSET_Test]
07:53:08.635 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[java_testcases.junit.POWERSET_Test], complianceLevel=8, outputFolder=., json=true}
07:53:08.635 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
07:53:08.638 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
07:53:08.638 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
07:53:08.638 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
07:53:08.638 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_282
07:53:08.642 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /users2/cpca56132020/moliveira/deps/jdk-8/bin
07:53:08.642 fr.inria.lille.repair.nopol.NoPol - PATH: /users2/cpca56132020/moliveira/deps/jdk-8/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
07:53:24.147 fr.inria.lille.repair.nopol.NoPol - statement #1
07:53:24.150 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:57 which is executed by 4 tests
07:53:24.150 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:57
07:53:24.150 fr.inria.lille.repair.nopol.NoPol - statement #2
07:53:24.150 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:52 which is executed by 4 tests
07:53:24.151 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:52
07:53:24.151 fr.inria.lille.repair.nopol.NoPol - statement #3
07:53:24.151 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:50 which is executed by 4 tests
07:53:24.151 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:50
07:53:24.151 fr.inria.lille.repair.nopol.NoPol - statement #4
07:53:24.151 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:44 which is executed by 4 tests
07:53:24.151 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:44
07:53:24.151 fr.inria.lille.repair.nopol.NoPol - statement #5
07:53:24.151 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:39 which is executed by 4 tests
07:53:24.151 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:39
07:53:24.151 fr.inria.lille.repair.nopol.NoPol - statement #6
07:53:24.151 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:38 which is executed by 4 tests
07:53:24.152 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:38
07:53:24.152 fr.inria.lille.repair.nopol.NoPol - statement #7
07:53:24.152 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:37 which is executed by 4 tests
07:53:24.152 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:37
07:53:24.152 fr.inria.lille.repair.nopol.NoPol - statement #8
07:53:24.152 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:29 which is executed by 4 tests
07:53:24.337 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:25.086 x.java.compiler.DynamicClassCompiler - [Compilation errors]
POWERSET.java:41: error: missing return statement
    }
    ^
Note: POWERSET.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
07:53:25.093 f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class POWERSET {
    public static java.util.ArrayList<java.util.ArrayList> powerset(java.util.ArrayList arr) {
        if (!arr.isEmpty()) {
            java.lang.Object first = arr.get(0);
            arr.remove(0);
            java.util.ArrayList rest = arr;
            java.util.ArrayList<java.util.ArrayList> rest_subsets = java_programs.POWERSET.powerset(rest);
            java.util.ArrayList<java.util.ArrayList> output = new java.util.ArrayList<java.util.ArrayList>(100);
            java.util.ArrayList to_add = new java.util.ArrayList(100);
            to_add.add(first);
            for (java.util.ArrayList subset : rest_subsets) {
                to_add.addAll(subset);
            }
            output.add(to_add);
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("output",output);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("arr",arr);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rest",rest);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rest_subsets",rest_subsets);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("to_add",to_add);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("first",first);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
            }
            if (runtimeAngelicValue)
                return output;

        } else {
            java.util.ArrayList empty_set = new java.util.ArrayList<java.util.ArrayList>();
            empty_set.add(new java.util.ArrayList());
            return empty_set;
        }
    }
}
07:53:25.094 fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
07:53:25.094 fr.inria.lille.repair.nopol.NoPol - statement #9
07:53:25.094 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:27 which is executed by 4 tests
07:53:25.162 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:25.514 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[x,df,z,m]]]> but was:<[[]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[a]]]> but was:<[[]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[a,b,c]]]> but was:<[[]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[a,b]]]> but was:<[[]]>]
07:53:25.514 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[]x,df,z,m]]> but was:<[[[]x,df,z,m]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[]a,b,c]]> but was:<[[[]a,b,c]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[]a,b]]> but was:<[[[]a,b]]>]
07:53:25.514 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:27.
07:53:25.514 fr.inria.lille.repair.nopol.NoPol - statement #10
07:53:25.514 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:26 which is executed by 4 tests
07:53:25.570 fr.inria.lille.repair.nopol.NoPol - statement #11
07:53:25.571 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:25 which is executed by 4 tests
07:53:25.634 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:25.932 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[x,df,z,m]]]> but was:<[[[x]]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[a,b,c]]]> but was:<[[[a]]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[a,b]]]> but was:<[[[a]]]>]
07:53:25.932 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[]x,df,z,m]]> but was:<[[[]x,df,z,m]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[]a,b,c]]> but was:<[[[]a,b,c]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[]a,b]]> but was:<[[[]a,b]]>]
07:53:25.933 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:25.
07:53:25.933 fr.inria.lille.repair.nopol.NoPol - statement #12
07:53:25.933 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:24 which is executed by 4 tests
07:53:25.991 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:26.360 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[x,df,z,m]]]> but was:<[[[x]]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[a,b,c]]]> but was:<[[[a]]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[a,b]]]> but was:<[[[a]]]>]
07:53:26.361 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[]x,df,z,m]]> but was:<[[[]x,df,z,m]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[]a,b,c]]> but was:<[[[]a,b,c]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[]a,b]]> but was:<[[[]a,b]]>]
07:53:26.361 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:24.
07:53:26.361 fr.inria.lille.repair.nopol.NoPol - statement #13
07:53:26.361 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:23 which is executed by 4 tests
07:53:26.426 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:26.794 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[][,[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[x,df,z,m]]]> but was:<[[][]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[][,[a]]]> but was:<[[][]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[][,[c],[b],[b,c],[a],[a,c],[a,b],[a,b,c]]]> but was:<[[][]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[][,[b],[a],[a,b]]]> but was:<[[][]]>]
07:53:26.794 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[]x,df,z,m]]> but was:<[[[]x,df,z,m]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[]a,b,c]]> but was:<[[[]a,b,c]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[]a,b]]> but was:<[[[]a,b]]>]
07:53:26.795 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:23.
07:53:26.795 fr.inria.lille.repair.nopol.NoPol - statement #14
07:53:26.795 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:22 which is executed by 4 tests
07:53:26.847 fr.inria.lille.repair.nopol.NoPol - statement #15
07:53:26.848 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:21 which is executed by 4 tests
07:53:26.946 fr.inria.lille.repair.nopol.NoPol - statement #16
07:53:26.947 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:19 which is executed by 4 tests
07:53:27.004 fr.inria.lille.repair.nopol.NoPol - statement #17
07:53:27.010 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:18 which is executed by 4 tests
07:53:27.108 fr.inria.lille.repair.nopol.NoPol - statement #18
07:53:27.109 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:17 which is executed by 4 tests
07:53:27.163 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:48.829 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): null, test_2(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds, test_0(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds, test_1(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds]
07:53:48.830 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds, test_2(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds, test_0(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds, test_1(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds]
07:53:48.830 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:17.
07:53:48.830 fr.inria.lille.repair.nopol.NoPol - statement #19
07:53:48.830 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:16 which is executed by 4 tests
07:53:49.003 fr.inria.lille.repair.nopol.NoPol - statement #20
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:35 which is executed by 5 tests
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:35
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - statement #21
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:32 which is executed by 5 tests
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:32
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - statement #22
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:31 which is executed by 5 tests
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:31
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - statement #23
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:30 which is executed by 5 tests
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:30
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - statement #24
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:29 which is executed by 5 tests
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:29
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - statement #25
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:28 which is executed by 5 tests
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:28
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - statement #26
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:27 which is executed by 5 tests
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:27
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - statement #27
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:26 which is executed by 5 tests
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:26
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - statement #28
07:53:49.004 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:22 which is executed by 5 tests
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:22
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - statement #29
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:21 which is executed by 5 tests
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:21
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - statement #30
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:16 which is executed by 5 tests
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:16
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - statement #31
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:15 which is executed by 5 tests
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:15
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - statement #32
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:14 which is executed by 5 tests
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:14
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - statement #33
07:53:49.005 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:33 which is executed by 5 tests
07:53:49.362 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:51.220 x.java.compiler.DynamicClassCompiler - [Compilation errors]
POWERSET.java:37: error: missing return statement
    }
    ^
Note: POWERSET.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
07:53:51.233 f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class POWERSET {
    public static java.util.ArrayList<java.util.ArrayList> powerset(java.util.ArrayList arr) {
        if (!arr.isEmpty()) {
            java.lang.Object first = arr.get(0);
            arr.remove(0);
            java.util.ArrayList rest = arr;
            java.util.ArrayList<java.util.ArrayList> rest_subsets = java_programs.POWERSET.powerset(rest);
            java.util.ArrayList<java.util.ArrayList> output = new java.util.ArrayList<java.util.ArrayList>(100);
            java.util.ArrayList to_add = new java.util.ArrayList(100);
            to_add.add(first);
            for (java.util.ArrayList subset : rest_subsets) {
                to_add.addAll(subset);
            }
            output.add(to_add);
            return output;
        } else {
            java.util.ArrayList empty_set = new java.util.ArrayList<java.util.ArrayList>();
            empty_set.add(new java.util.ArrayList());
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(6).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("arr",arr);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("empty_set",empty_set);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectionEnds();
            }
            if (runtimeAngelicValue)
                return empty_set;

        }
    }
}
07:53:51.234 fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
07:53:51.234 fr.inria.lille.repair.nopol.NoPol - statement #34
07:53:51.234 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:32 which is executed by 5 tests
07:53:51.491 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:53.944 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[]x,df,z,m]]> but was:<[[[]x,df,z,m]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[]a,b,c]]> but was:<[[[]a,b,c]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[]a,b]]> but was:<[[[]a,b]]>]
07:53:53.945 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[]x,df,z,m]]> but was:<[[[]x,df,z,m]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[]a,b,c]]> but was:<[[[]a,b,c]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[]a,b]]> but was:<[[[]a,b]]>]
07:53:53.945 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:32.
07:53:53.950 fr.inria.lille.repair.nopol.NoPol - statement #35
07:53:53.951 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:31 which is executed by 5 tests
07:53:54.288 fr.inria.lille.repair.nopol.NoPol - statement #36
07:53:54.288 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:15 which is executed by 5 tests
07:53:54.745 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
07:53:57.429 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[][,[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[x,df,z,m]]]> but was:<[[][]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[][,[a]]]> but was:<[[][]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[][,[c],[b],[b,c],[a],[a,c],[a,b],[a,b,c]]]> but was:<[[][]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[][,[b],[a],[a,b]]]> but was:<[[][]]>]
07:53:57.429 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): Index: 0, Size: 0, test_2(java_testcases.junit.POWERSET_Test): Index: 0, Size: 0, test_0(java_testcases.junit.POWERSET_Test): Index: 0, Size: 0, test_1(java_testcases.junit.POWERSET_Test): Index: 0, Size: 0]
07:53:57.429 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:15.
07:53:57.431 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
07:53:57.456 fr.inria.lille.repair.nopol.NoPol - Nb classes : 3
07:53:57.456 fr.inria.lille.repair.nopol.NoPol - Nb methods : 9
07:53:57.456 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 9
07:53:57.456 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
07:53:57.456 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
07:53:57.458 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
07:53:57.458 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
07:53:57.458 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 48803ms
07:53:57.458 fr.inria.lille.repair.nopol.NoPol - 
