07:35:46.942 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
07:35:46.945 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_TO_BASE/Nopol_QuixBugs_TO_BASE_/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_TO_BASE/Nopol_QuixBugs_TO_BASE_/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
07:35:46.945 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
07:35:46.945 fr.inria.lille.repair.nopol.NoPol - Args: [java_testcases.junit.TO_BASE_Test]
07:35:46.947 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[java_testcases.junit.TO_BASE_Test], complianceLevel=8, outputFolder=., json=true}
07:35:46.948 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
07:35:46.950 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
07:35:46.951 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
07:35:46.951 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
07:35:46.951 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_282
07:35:46.954 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /users2/cpca56132020/moliveira/deps/jdk-8/bin
07:35:46.954 fr.inria.lille.repair.nopol.NoPol - PATH: /users2/cpca56132020/moliveira/deps/jdk-8/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
07:35:51.447 fr.inria.lille.repair.nopol.NoPol - statement #1
07:35:51.449 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:57 which is executed by 7 tests
07:35:51.449 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:57
07:35:51.449 fr.inria.lille.repair.nopol.NoPol - statement #2
07:35:51.449 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:52 which is executed by 7 tests
07:35:51.449 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:52
07:35:51.449 fr.inria.lille.repair.nopol.NoPol - statement #3
07:35:51.450 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:50 which is executed by 7 tests
07:35:51.450 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:50
07:35:51.450 fr.inria.lille.repair.nopol.NoPol - statement #4
07:35:51.450 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:44 which is executed by 7 tests
07:35:51.450 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:44
07:35:51.450 fr.inria.lille.repair.nopol.NoPol - statement #5
07:35:51.450 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:38 which is executed by 7 tests
07:35:51.450 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:38
07:35:51.450 fr.inria.lille.repair.nopol.NoPol - statement #6
07:35:51.450 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:37 which is executed by 7 tests
07:35:51.450 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:37
07:35:51.450 fr.inria.lille.repair.nopol.NoPol - statement #7
07:35:51.451 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:26 which is executed by 7 tests
07:35:51.451 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:26
07:35:51.451 fr.inria.lille.repair.nopol.NoPol - statement #8
07:35:51.451 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:22 which is executed by 7 tests
07:35:51.451 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:22
07:35:51.451 fr.inria.lille.repair.nopol.NoPol - statement #9
07:35:51.451 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:21 which is executed by 7 tests
07:35:51.451 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:21
07:35:51.451 fr.inria.lille.repair.nopol.NoPol - statement #10
07:35:51.451 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:16 which is executed by 7 tests
07:35:51.451 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:16
07:35:51.451 fr.inria.lille.repair.nopol.NoPol - statement #11
07:35:51.452 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:15 which is executed by 7 tests
07:35:51.452 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:15
07:35:51.452 fr.inria.lille.repair.nopol.NoPol - statement #12
07:35:51.452 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:14 which is executed by 7 tests
07:35:51.452 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:14
07:35:51.452 fr.inria.lille.repair.nopol.NoPol - statement #13
07:35:51.452 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.TO_BASE:24 which is executed by 7 tests
07:35:51.599 fr.inria.lille.repair.nopol.NoPol - statement #14
07:35:51.600 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.TO_BASE:21 which is executed by 7 tests
07:35:51.690 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:35:52.525 tests.output - Failing tests with false: 
[test_6(java_testcases.junit.TO_BASE_Test): expected:<[749]> but was:<[]>, test_3(java_testcases.junit.TO_BASE_Test): expected:<[14]> but was:<[]>, test_2(java_testcases.junit.TO_BASE_Test): expected:<[134]> but was:<[]>, test_5(java_testcases.junit.TO_BASE_Test): expected:<[E75]> but was:<[]>, test_4(java_testcases.junit.TO_BASE_Test): expected:<[2A]> but was:<[]>, test_1(java_testcases.junit.TO_BASE_Test): expected:<[101001]> but was:<[]>, test_0(java_testcases.junit.TO_BASE_Test): expected:<[1F]> but was:<[]>]
07:35:52.525 tests.output - Failing tests with true: 
[test_6(java_testcases.junit.TO_BASE_Test): expected:<[749]> but was:<[947]>, test_3(java_testcases.junit.TO_BASE_Test): expected:<[14]> but was:<[41]>, test_2(java_testcases.junit.TO_BASE_Test): expected:<[134]> but was:<[431]>, test_5(java_testcases.junit.TO_BASE_Test): expected:<[E75]> but was:<[57E]>, test_4(java_testcases.junit.TO_BASE_Test): expected:<[2A]> but was:<[A2]>, test_1(java_testcases.junit.TO_BASE_Test): expected:<10[10]01> but was:<10[01]01>, test_0(java_testcases.junit.TO_BASE_Test): expected:<[1F]> but was:<[F1]>]
07:35:52.525 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.TO_BASE:21.
07:35:52.525 fr.inria.lille.repair.nopol.NoPol - statement #15
07:35:52.525 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.TO_BASE:20 which is executed by 7 tests
07:35:52.617 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:36:14.663 tests.output - Failing tests with false: 
[test_6(java_testcases.junit.TO_BASE_Test): test timed out after 3000 milliseconds, test_3(java_testcases.junit.TO_BASE_Test): test timed out after 3000 milliseconds, test_2(java_testcases.junit.TO_BASE_Test): test timed out after 3000 milliseconds, test_5(java_testcases.junit.TO_BASE_Test): test timed out after 3000 milliseconds, test_4(java_testcases.junit.TO_BASE_Test): test timed out after 3000 milliseconds, test_1(java_testcases.junit.TO_BASE_Test): test timed out after 3000 milliseconds, test_0(java_testcases.junit.TO_BASE_Test): test timed out after 3000 milliseconds]
07:36:14.663 tests.output - Failing tests with true: 
[test_6(java_testcases.junit.TO_BASE_Test): expected:<[749]> but was:<[947]>, test_3(java_testcases.junit.TO_BASE_Test): expected:<[14]> but was:<[41]>, test_2(java_testcases.junit.TO_BASE_Test): expected:<[134]> but was:<[431]>, test_5(java_testcases.junit.TO_BASE_Test): expected:<[E75]> but was:<[57E]>, test_4(java_testcases.junit.TO_BASE_Test): expected:<[2A]> but was:<[A2]>, test_1(java_testcases.junit.TO_BASE_Test): expected:<10[10]01> but was:<10[01]01>, test_0(java_testcases.junit.TO_BASE_Test): expected:<[1F]> but was:<[F1]>]
07:36:14.664 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.TO_BASE:20.
07:36:14.664 fr.inria.lille.repair.nopol.NoPol - statement #16
07:36:14.664 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.TO_BASE:19 which is executed by 7 tests
07:36:14.716 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:36:14.860 x.java.compiler.DynamicClassCompiler - [Compilation errors]
TO_BASE.java:27: error: variable i might not have been initialized
            result = result + java.lang.String.valueOf(alphabet.charAt(i));
                                                                       ^
07:36:14.862 f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class TO_BASE {
    public static java.lang.String to_base(int num, int b) {
        java.lang.String result = "";
        java.lang.String alphabet = "0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ";
        int i;
        while (num > 0) {
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(2).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("result",result);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("b",b);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("alphabet",alphabet);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectInput("num",num);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(2).collectionEnds();
            }
            if (runtimeAngelicValue)
                i = num % b;

            num = num / b;
            result = result + java.lang.String.valueOf(alphabet.charAt(i));
        } 
        return result;
    }
}
07:36:14.870 fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
07:36:14.870 fr.inria.lille.repair.nopol.NoPol - statement #17
07:36:14.870 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.TO_BASE:18 which is executed by 7 tests
07:36:14.914 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:36:15.310 tests.output - Failing tests with false: 
[test_6(java_testcases.junit.TO_BASE_Test): expected:<[749]> but was:<[]>, test_3(java_testcases.junit.TO_BASE_Test): expected:<[14]> but was:<[]>, test_2(java_testcases.junit.TO_BASE_Test): expected:<[134]> but was:<[]>, test_5(java_testcases.junit.TO_BASE_Test): expected:<[E75]> but was:<[]>, test_4(java_testcases.junit.TO_BASE_Test): expected:<[2A]> but was:<[]>, test_1(java_testcases.junit.TO_BASE_Test): expected:<[101001]> but was:<[]>, test_0(java_testcases.junit.TO_BASE_Test): expected:<[1F]> but was:<[]>]
07:36:15.311 tests.output - Failing tests with true: 
[test_6(java_testcases.junit.TO_BASE_Test): expected:<[749]> but was:<[947]>, test_3(java_testcases.junit.TO_BASE_Test): expected:<[14]> but was:<[41]>, test_2(java_testcases.junit.TO_BASE_Test): expected:<[134]> but was:<[431]>, test_5(java_testcases.junit.TO_BASE_Test): expected:<[E75]> but was:<[57E]>, test_4(java_testcases.junit.TO_BASE_Test): expected:<[2A]> but was:<[A2]>, test_1(java_testcases.junit.TO_BASE_Test): expected:<10[10]01> but was:<10[01]01>, test_0(java_testcases.junit.TO_BASE_Test): expected:<[1F]> but was:<[F1]>]
07:36:15.311 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.TO_BASE:18.
07:36:15.311 fr.inria.lille.repair.nopol.NoPol - statement #18
07:36:15.311 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.TO_BASE:16 which is executed by 7 tests
07:36:15.376 fr.inria.lille.repair.nopol.NoPol - statement #19
07:36:15.376 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.TO_BASE:15 which is executed by 7 tests
07:36:15.439 fr.inria.lille.repair.nopol.NoPol - statement #20
07:36:15.439 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:55 which is executed by 4 tests
07:36:15.439 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:55
07:36:15.439 fr.inria.lille.repair.nopol.NoPol - statement #21
07:36:15.440 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:53 which is executed by 4 tests
07:36:15.440 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:53
07:36:15.440 fr.inria.lille.repair.nopol.NoPol - statement #22
07:36:15.440 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:41 which is executed by 4 tests
07:36:15.440 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:41
07:36:15.440 fr.inria.lille.repair.nopol.NoPol - statement #23
07:36:15.440 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:39 which is executed by 3 tests
07:36:15.440 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:39
07:36:15.440 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
07:36:15.442 fr.inria.lille.repair.nopol.NoPol - Nb classes : 3
07:36:15.442 fr.inria.lille.repair.nopol.NoPol - Nb methods : 9
07:36:15.442 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 4
07:36:15.442 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
07:36:15.442 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
07:36:15.444 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
07:36:15.444 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
07:36:15.444 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 28499ms
07:36:15.444 fr.inria.lille.repair.nopol.NoPol - 
