07:53:10.869 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
07:53:10.872 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_HANOI/Nopol_QuixBugs_HANOI_/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_HANOI/Nopol_QuixBugs_HANOI_/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
07:53:10.872 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
07:53:10.872 fr.inria.lille.repair.nopol.NoPol - Args: [java_testcases.junit.HANOI_Test]
07:53:10.874 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[java_testcases.junit.HANOI_Test], complianceLevel=8, outputFolder=., json=true}
07:53:10.875 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
07:53:10.878 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
07:53:10.878 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
07:53:10.878 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
07:53:10.878 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_282
07:53:10.881 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /users2/cpca56132020/moliveira/deps/jdk-8/bin
07:53:10.882 fr.inria.lille.repair.nopol.NoPol - PATH: /users2/cpca56132020/moliveira/deps/jdk-8/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
07:53:28.487 fr.inria.lille.repair.nopol.NoPol - statement #1
07:53:28.489 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:31 which is executed by 7 tests
07:53:28.685 fr.inria.lille.repair.nopol.NoPol - statement #2
07:53:28.685 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:28 which is executed by 7 tests
07:53:28.795 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:30.023 tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[1,3],[1,2]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2]]]>]
07:53:30.024 tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
07:53:30.024 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:28.
07:53:30.024 fr.inria.lille.repair.nopol.NoPol - statement #3
07:53:30.024 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:27 which is executed by 7 tests
07:53:30.116 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:30.408 tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[[1,3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[[1,3]]]> but was:<[[]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,3],[2,3]]]> but was:<[[]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[[3,2],[3,1],[2,1]]]> but was:<[[]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[[1,3],[1,2],[3,2]]]> but was:<[[]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,1],[2,1]]]> but was:<[[]]>]
07:53:30.408 tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
07:53:30.408 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:27.
07:53:30.409 fr.inria.lille.repair.nopol.NoPol - statement #4
07:53:30.410 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:26 which is executed by 7 tests
07:53:30.491 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:30.975 tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,2],[[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,2],[[2,1],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,2],[[1,3],[2,3]]]> but was:<[[1,2],[[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,2],[[3,1],[2,1]]]> but was:<[[3,2],[[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,3],[[1,2],[3,2]]]> but was:<[[1,3],[[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,2],[[1,1],[2,1]]]> but was:<[[1,2],[[2,3]]]>]
07:53:30.975 tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
07:53:30.976 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:26.
07:53:30.977 fr.inria.lille.repair.nopol.NoPol - statement #5
07:53:30.977 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:25 which is executed by 7 tests
07:53:31.059 fr.inria.lille.repair.nopol.NoPol - statement #6
07:53:31.060 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:24 which is executed by 7 tests
07:53:31.128 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:31.501 tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,2],[2,1],[1,2],[2,1],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,2],[1,[3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,2],[1,[2],[2,1],[1,2],[2,1],[2,1],[1,2],[1,2],[2,1],[2,1],[1,2],[2,1],[1,2],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,2],[1,[3],[2,3]]]> but was:<[[1,2],[1,[2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,1],[1,2]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,2],[2,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,2],[1,[1]],[2,1]]> but was:<[[1,2],[1,[2]],[2,1]]>]
07:53:31.502 tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
07:53:31.502 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:24.
07:53:31.502 fr.inria.lille.repair.nopol.NoPol - statement #7
07:53:31.502 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:23 which is executed by 7 tests
07:53:31.582 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:31.911 tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[1],[1,2],[2,2],[1,1],[1,2],[1,1],[1,1]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,2],[1,[3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,2],[1,[1],[1,1],[1,2],[2,1],[2,2],[2,2],[1,1],[1,1],[1,2],[2,2],[1,1],[1,2],[1,1],[1,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[1]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,2],[1,[3],[2,3]]]> but was:<[[1,2],[1,[1],[1,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,2]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,1],[1,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[1],[1,2],[2,2]]]>]
07:53:31.911 tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
07:53:31.911 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:23.
07:53:31.911 fr.inria.lille.repair.nopol.NoPol - statement #8
07:53:31.911 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:22 which is executed by 7 tests
07:53:31.990 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:32.428 tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): null, test_3(java_testcases.junit.HANOI_Test): null, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): null, test_6(java_testcases.junit.HANOI_Test): null, test_4(java_testcases.junit.HANOI_Test): null, test_5(java_testcases.junit.HANOI_Test): null]
07:53:32.428 tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
07:53:32.428 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:22.
07:53:32.429 fr.inria.lille.repair.nopol.NoPol - statement #9
07:53:32.429 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:21 which is executed by 7 tests
07:53:32.510 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:32.795 tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): null, test_3(java_testcases.junit.HANOI_Test): null, test_0(java_testcases.junit.HANOI_Test): null, test_1(java_testcases.junit.HANOI_Test): null, test_6(java_testcases.junit.HANOI_Test): null, test_4(java_testcases.junit.HANOI_Test): null, test_5(java_testcases.junit.HANOI_Test): null]
07:53:32.796 tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
07:53:32.796 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:21.
07:53:32.796 fr.inria.lille.repair.nopol.NoPol - statement #10
07:53:32.796 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:20 which is executed by 7 tests
07:53:32.868 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:33.122 tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): null, test_3(java_testcases.junit.HANOI_Test): null, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): null, test_6(java_testcases.junit.HANOI_Test): null, test_4(java_testcases.junit.HANOI_Test): null, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
07:53:33.122 tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
07:53:33.122 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:20.
07:53:33.123 fr.inria.lille.repair.nopol.NoPol - statement #11
07:53:33.123 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:19 which is executed by 7 tests
07:53:33.172 fr.inria.lille.repair.nopol.NoPol - statement #12
07:53:33.173 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:18 which is executed by 7 tests
07:53:33.257 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:33.604 tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[[1,3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[[1,3]]]> but was:<[[]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,3],[2,3]]]> but was:<[[]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[[3,2],[3,1],[2,1]]]> but was:<[[]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[[1,3],[1,2],[3,2]]]> but was:<[[]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,1],[2,1]]]> but was:<[[]]>]
07:53:33.604 tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
07:53:33.604 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:18.
07:53:33.604 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
07:53:52.135 tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[[1,3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[[1,3]]]> but was:<[[]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,3],[2,3]]]> but was:<[[]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[[3,2],[3,1],[2,1]]]> but was:<[[]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[[1,3],[1,2],[3,2]]]> but was:<[[]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,1],[2,1]]]> but was:<[[]]>]
07:53:52.135 tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): null, test_3(java_testcases.junit.HANOI_Test): test timed out after 3000 milliseconds, test_0(java_testcases.junit.HANOI_Test): test timed out after 3000 milliseconds, test_1(java_testcases.junit.HANOI_Test): test timed out after 3000 milliseconds, test_6(java_testcases.junit.HANOI_Test): test timed out after 3000 milliseconds, test_4(java_testcases.junit.HANOI_Test): test timed out after 3000 milliseconds, test_5(java_testcases.junit.HANOI_Test): test timed out after 3000 milliseconds]
07:53:52.135 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:18.
07:53:52.136 fr.inria.lille.repair.nopol.NoPol - statement #13
07:53:52.136 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:16 which is executed by 7 tests
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - statement #14
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:44 which is executed by 7 tests
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:44
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - statement #15
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:41 which is executed by 7 tests
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:41
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - statement #16
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:38 which is executed by 7 tests
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:38
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - statement #17
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:37 which is executed by 7 tests
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:37
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - statement #18
07:53:52.313 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:35 which is executed by 7 tests
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:35
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - statement #19
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:32 which is executed by 7 tests
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:32
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - statement #20
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:31 which is executed by 7 tests
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:31
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - statement #21
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:30 which is executed by 7 tests
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:30
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - statement #22
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:29 which is executed by 7 tests
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:29
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - statement #23
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:28 which is executed by 7 tests
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:28
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - statement #24
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:27 which is executed by 7 tests
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:27
07:53:52.314 fr.inria.lille.repair.nopol.NoPol - statement #25
07:53:52.315 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:26 which is executed by 7 tests
07:53:52.315 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:26
07:53:52.315 fr.inria.lille.repair.nopol.NoPol - statement #26
07:53:52.315 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:22 which is executed by 7 tests
07:53:52.315 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:22
07:53:52.315 fr.inria.lille.repair.nopol.NoPol - statement #27
07:53:52.315 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:21 which is executed by 7 tests
07:53:52.315 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:21
07:53:52.315 fr.inria.lille.repair.nopol.NoPol - statement #28
07:53:52.316 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:16 which is executed by 7 tests
07:53:52.316 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:16
07:53:52.316 fr.inria.lille.repair.nopol.NoPol - statement #29
07:53:52.316 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:15 which is executed by 7 tests
07:53:52.316 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:15
07:53:52.316 fr.inria.lille.repair.nopol.NoPol - statement #30
07:53:52.316 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:14 which is executed by 7 tests
07:53:52.319 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:14
07:53:52.350 fr.inria.lille.repair.nopol.NoPol - statement #31
07:53:52.350 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI$Pair:62 which is executed by 7 tests
07:53:52.594 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
07:53:52.624 fr.inria.lille.repair.nopol.NoPol - Nb classes : 3
07:53:52.624 fr.inria.lille.repair.nopol.NoPol - Nb methods : 9
07:53:52.624 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 10
07:53:52.624 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
07:53:52.624 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
07:53:52.664 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
07:53:52.664 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
07:53:52.664 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 41726ms
07:53:52.664 fr.inria.lille.repair.nopol.NoPol - 
