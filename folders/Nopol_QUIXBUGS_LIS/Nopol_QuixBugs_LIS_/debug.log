07:35:41.669 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
07:35:41.671 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_LIS/Nopol_QuixBugs_LIS_/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_LIS/Nopol_QuixBugs_LIS_/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
07:35:41.671 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
07:35:41.672 fr.inria.lille.repair.nopol.NoPol - Args: [java_testcases.junit.LIS_Test]
07:35:41.674 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[java_testcases.junit.LIS_Test], complianceLevel=8, outputFolder=., json=true}
07:35:41.674 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
07:35:41.677 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
07:35:41.677 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
07:35:41.677 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
07:35:41.677 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_282
07:35:41.680 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /users2/cpca56132020/moliveira/deps/jdk-8/bin
07:35:41.681 fr.inria.lille.repair.nopol.NoPol - PATH: /users2/cpca56132020/moliveira/deps/jdk-8/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
07:35:50.962 fr.inria.lille.repair.nopol.NoPol - statement #1
07:35:50.965 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:36 which is executed by 4 tests
07:35:51.158 fr.inria.lille.repair.nopol.NoPol - statement #2
07:35:51.158 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:34 which is executed by 4 tests
07:35:51.236 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:35:52.741 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<7>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<2>]
07:35:52.741 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
07:35:52.741 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:34.
07:35:52.741 fr.inria.lille.repair.nopol.NoPol - statement #3
07:35:52.741 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:31 which is executed by 4 tests
07:35:52.809 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:35:53.796 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<0>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<0>]
07:35:53.796 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
07:35:53.796 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:31.
07:35:53.797 fr.inria.lille.repair.nopol.NoPol - statement #4
07:35:53.797 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:30 which is executed by 4 tests
07:35:53.905 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:35:54.928 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): null, test_2(java_testcases.junit.LIS_Test): null, test_1(java_testcases.junit.LIS_Test): null, test_3(java_testcases.junit.LIS_Test): null]
07:35:54.928 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
07:35:54.928 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:30.
07:35:54.930 fr.inria.lille.repair.nopol.NoPol - statement #5
07:35:54.930 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:29 which is executed by 4 tests
07:35:55.022 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:35:55.998 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<0>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<0>]
07:35:55.999 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
07:35:55.999 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:29.
07:35:55.999 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
07:35:56.799 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<0>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<0>]
07:35:56.799 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
07:35:56.800 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:29.
07:35:56.800 fr.inria.lille.repair.nopol.NoPol - statement #6
07:35:56.800 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:27 which is executed by 4 tests
07:35:56.877 fr.inria.lille.repair.nopol.NoPol - statement #7
07:35:56.877 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:23 which is executed by 4 tests
07:35:56.972 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:35:57.691 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<1>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<1>]
07:35:57.692 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
07:35:57.692 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:23.
07:35:57.692 fr.inria.lille.repair.nopol.NoPol - statement #8
07:35:57.692 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:22 which is executed by 4 tests
07:35:57.772 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:35:58.355 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<1>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<1>]
07:35:58.355 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
07:35:58.355 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:22.
07:35:58.356 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
07:35:58.953 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<1>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<1>]
07:35:58.953 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<7>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<7>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<9>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<6>]
07:35:58.954 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:22.
07:35:58.954 fr.inria.lille.repair.nopol.NoPol - statement #9
07:35:58.954 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:21 which is executed by 4 tests
07:35:59.024 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:35:59.758 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<1>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<1>]
07:35:59.758 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
07:35:59.758 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:21.
07:35:59.758 fr.inria.lille.repair.nopol.NoPol - statement #10
07:35:59.758 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:20 which is executed by 4 tests
07:35:59.819 fr.inria.lille.repair.nopol.NoPol - statement #11
07:35:59.819 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:18 which is executed by 4 tests
07:35:59.902 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:36:00.652 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<0>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<0>]
07:36:00.653 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
07:36:00.653 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:18.
07:36:00.653 fr.inria.lille.repair.nopol.NoPol - statement #12
07:36:00.653 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:17 which is executed by 4 tests
07:36:00.718 fr.inria.lille.repair.nopol.NoPol - statement #13
07:36:00.719 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:15 which is executed by 4 tests
07:36:00.789 fr.inria.lille.repair.nopol.NoPol - statement #14
07:36:00.789 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:14 which is executed by 4 tests
07:36:00.858 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
07:36:00.861 fr.inria.lille.repair.nopol.NoPol - Nb classes : 3
07:36:00.861 fr.inria.lille.repair.nopol.NoPol - Nb methods : 9
07:36:00.861 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 10
07:36:00.861 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
07:36:00.861 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
07:36:00.872 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
07:36:00.872 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
07:36:00.872 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 19191ms
07:36:00.872 fr.inria.lille.repair.nopol.NoPol - 
