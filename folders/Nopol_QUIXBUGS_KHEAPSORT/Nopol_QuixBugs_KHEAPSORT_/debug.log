07:53:08.352 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
07:53:08.354 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_KHEAPSORT/Nopol_QuixBugs_KHEAPSORT_/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_KHEAPSORT/Nopol_QuixBugs_KHEAPSORT_/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
07:53:08.355 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
07:53:08.356 fr.inria.lille.repair.nopol.NoPol - Args: [java_testcases.junit.KHEAPSORT_Test]
07:53:08.357 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[java_testcases.junit.KHEAPSORT_Test], complianceLevel=8, outputFolder=., json=true}
07:53:08.358 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
07:53:08.365 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
07:53:08.365 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
07:53:08.365 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
07:53:08.365 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_282
07:53:08.369 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /users2/cpca56132020/moliveira/deps/jdk-8/bin
07:53:08.369 fr.inria.lille.repair.nopol.NoPol - PATH: /users2/cpca56132020/moliveira/deps/jdk-8/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
07:53:22.517 fr.inria.lille.repair.nopol.NoPol - statement #1
07:53:22.519 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.KHEAPSORT:34 which is executed by 3 tests
07:53:22.683 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:34.889 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.KHEAPSORT_Test): test timed out after 3000 milliseconds, test_3(java_testcases.junit.KHEAPSORT_Test): test timed out after 3000 milliseconds, test_2(java_testcases.junit.KHEAPSORT_Test): test timed out after 3000 milliseconds]
07:53:34.890 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2],3,4,5]> but was:<[[2,2,1,3],3,4,5]>, test_3(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,3,5,6],12]> but was:<[[3,3,5,1,5,6,12],12]>, test_2(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4],5]> but was:<[[2,3,3,2,1,4,4,5],5]>]
07:53:34.890 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.KHEAPSORT:34.
07:53:34.890 fr.inria.lille.repair.nopol.NoPol - statement #2
07:53:34.890 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.KHEAPSORT:24 which is executed by 3 tests
07:53:34.958 fr.inria.lille.repair.nopol.NoPol - statement #3
07:53:34.958 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.KHEAPSORT:23 which is executed by 3 tests
07:53:35.035 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:35.499 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4,5]]> but was:<[[3,2,1,5,4]]>, test_3(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,3,5,6,12]]> but was:<[[3,12,5,1,6]]>, test_2(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4,5]]> but was:<[[5,4,3,2,1]]>]
07:53:35.499 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2],3,4,5]> but was:<[[2,2,1,3],3,4,5]>, test_3(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,3,5,6],12]> but was:<[[3,3,5,1,5,6,12],12]>, test_2(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4],5]> but was:<[[2,3,3,2,1,4,4,5],5]>]
07:53:35.499 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.KHEAPSORT:23.
07:53:35.499 fr.inria.lille.repair.nopol.NoPol - statement #4
07:53:35.499 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:44 which is executed by 4 tests
07:53:35.499 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:44
07:53:35.499 fr.inria.lille.repair.nopol.NoPol - statement #5
07:53:35.499 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:41 which is executed by 4 tests
07:53:35.499 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:41
07:53:35.499 fr.inria.lille.repair.nopol.NoPol - statement #6
07:53:35.499 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:38 which is executed by 4 tests
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:38
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - statement #7
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:37 which is executed by 4 tests
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:37
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - statement #8
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:35 which is executed by 4 tests
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:35
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - statement #9
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:32 which is executed by 4 tests
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:32
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - statement #10
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:31 which is executed by 4 tests
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:31
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - statement #11
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:30 which is executed by 4 tests
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:30
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - statement #12
07:53:35.500 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:29 which is executed by 4 tests
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:29
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - statement #13
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:28 which is executed by 4 tests
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:28
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - statement #14
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:27 which is executed by 4 tests
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:27
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - statement #15
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:26 which is executed by 4 tests
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:26
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - statement #16
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:22 which is executed by 4 tests
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:22
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - statement #17
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:21 which is executed by 4 tests
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:21
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - statement #18
07:53:35.501 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:16 which is executed by 4 tests
07:53:35.502 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:16
07:53:35.502 fr.inria.lille.repair.nopol.NoPol - statement #19
07:53:35.502 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:15 which is executed by 4 tests
07:53:35.502 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:15
07:53:35.502 fr.inria.lille.repair.nopol.NoPol - statement #20
07:53:35.502 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:14 which is executed by 4 tests
07:53:35.502 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:14
07:53:35.502 fr.inria.lille.repair.nopol.NoPol - statement #21
07:53:35.502 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.KHEAPSORT:37 which is executed by 4 tests
07:53:35.574 fr.inria.lille.repair.nopol.NoPol - statement #22
07:53:35.586 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.KHEAPSORT:33 which is executed by 4 tests
07:53:35.652 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:35.935 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4,5]]> but was:<[[2,2,1,3,3]]>, test_3(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,3,5,6,12]]> but was:<[[3,3,5,1,5]]>, test_2(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4,5]]> but was:<[[2,3,3,2,1]]>]
07:53:35.935 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2],3,4,5]> but was:<[[2,2,1,3],3,4,5]>, test_3(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,3,5,6],12]> but was:<[[3,3,5,1,5,6,12],12]>, test_2(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4],5]> but was:<[[2,3,3,2,1,4,4,5],5]>]
07:53:35.935 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.KHEAPSORT:33.
07:53:35.935 fr.inria.lille.repair.nopol.NoPol - statement #23
07:53:35.935 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.KHEAPSORT:31 which is executed by 4 tests
07:53:36.000 fr.inria.lille.repair.nopol.NoPol - statement #24
07:53:36.000 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.KHEAPSORT:30 which is executed by 4 tests
07:53:36.052 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:36.322 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,]4,5]> but was:<[[]4,5]>, test_3(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,3,5,6],12]> but was:<[[6,12],12]>, test_2(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4],5]> but was:<[[4,4,5],5]>]
07:53:36.322 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2],3,4,5]> but was:<[[2,2,1,3],3,4,5]>, test_3(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,3,5,6],12]> but was:<[[3,3,5,1,5,6,12],12]>, test_2(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4],5]> but was:<[[2,3,3,2,1,4,4,5],5]>]
07:53:36.322 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.KHEAPSORT:30.
07:53:36.323 fr.inria.lille.repair.nopol.NoPol - statement #25
07:53:36.323 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.KHEAPSORT:29 which is executed by 4 tests
07:53:36.401 fr.inria.lille.repair.nopol.NoPol - statement #26
07:53:36.401 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.KHEAPSORT:28 which is executed by 4 tests
07:53:36.463 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:36.784 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.KHEAPSORT_Test): null, test_3(java_testcases.junit.KHEAPSORT_Test): null, test_2(java_testcases.junit.KHEAPSORT_Test): null]
07:53:36.784 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2],3,4,5]> but was:<[[2,2,1,3],3,4,5]>, test_3(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,3,5,6],12]> but was:<[[3,3,5,1,5,6,12],12]>, test_2(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4],5]> but was:<[[2,3,3,2,1,4,4,5],5]>]
07:53:36.784 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.KHEAPSORT:28.
07:53:36.784 fr.inria.lille.repair.nopol.NoPol - statement #27
07:53:36.784 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.KHEAPSORT:27 which is executed by 4 tests
07:53:36.853 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:37.102 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4,5]]> but was:<[[2,3]]>, test_3(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,3,5,6],12]> but was:<[[3,5],12]>, test_2(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,]2,3,4,5]> but was:<[[]2,3,4,5]>]
07:53:37.102 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2],3,4,5]> but was:<[[2,2,1,3],3,4,5]>, test_3(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,3,5,6],12]> but was:<[[3,3,5,1,5,6,12],12]>, test_2(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4],5]> but was:<[[2,3,3,2,1,4,4,5],5]>]
07:53:37.102 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.KHEAPSORT:27.
07:53:37.107 fr.inria.lille.repair.nopol.NoPol - statement #28
07:53:37.107 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.KHEAPSORT:26 which is executed by 4 tests
07:53:37.166 fr.inria.lille.repair.nopol.NoPol - statement #29
07:53:37.167 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.KHEAPSORT:22 which is executed by 4 tests
07:53:37.225 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
07:53:37.521 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4,5]]> but was:<[[3,2,1,5,4]]>, test_3(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,3,5,6,12]]> but was:<[[3,12,5,1,6]]>, test_2(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4,5]]> but was:<[[5,4,3,2,1]]>]
07:53:37.522 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2],3,4,5]> but was:<[[2,2,1,3],3,4,5]>, test_3(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,3,5,6],12]> but was:<[[3,3,5,1,5,6,12],12]>, test_2(java_testcases.junit.KHEAPSORT_Test): expected:<[[1,2,3,4],5]> but was:<[[2,3,3,2,1,4,4,5],5]>]
07:53:37.522 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.KHEAPSORT:22.
07:53:37.522 fr.inria.lille.repair.nopol.NoPol - statement #30
07:53:37.522 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.KHEAPSORT:21 which is executed by 4 tests
07:53:37.587 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
07:53:37.596 fr.inria.lille.repair.nopol.NoPol - Nb classes : 3
07:53:37.596 fr.inria.lille.repair.nopol.NoPol - Nb methods : 9
07:53:37.596 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 7
07:53:37.596 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
07:53:37.596 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
07:53:37.597 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
07:53:37.597 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
07:53:37.597 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 29237ms
07:53:37.597 fr.inria.lille.repair.nopol.NoPol - 
