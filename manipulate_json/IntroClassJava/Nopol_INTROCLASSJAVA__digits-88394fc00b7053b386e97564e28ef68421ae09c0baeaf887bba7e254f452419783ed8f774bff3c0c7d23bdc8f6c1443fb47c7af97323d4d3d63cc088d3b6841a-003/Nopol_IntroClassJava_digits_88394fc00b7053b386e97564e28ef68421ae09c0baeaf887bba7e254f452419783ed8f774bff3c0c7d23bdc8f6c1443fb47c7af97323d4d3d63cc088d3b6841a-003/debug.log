16:00:01.065 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
16:00:01.068 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a-003/Nopol_IntroClassJava_digits_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a-003/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a-003/Nopol_IntroClassJava_digits_88394fc00b7053b386e97564e28ef68421ae09c0baeaf887bba7e254f452419783ed8f774bff3c0c7d23bdc8f6c1443fb47c7af97323d4d3d63cc088d3b6841a-003/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
16:00:01.068 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
16:00:01.068 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_88394fc0_003BlackboxTest, introclassJava.digits_88394fc0_003WhiteboxTest]
16:00:01.070 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_88394fc0_003BlackboxTest, introclassJava.digits_88394fc0_003WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
16:00:01.070 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
16:00:01.073 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
16:00:01.073 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
16:00:01.073 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
16:00:01.073 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
16:00:01.077 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
16:00:01.077 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:24.919 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:24.922 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_88394fc0_003:74 which is executed by 16 tests
16:00:25.207 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:26.293 tests.output - Failing tests with false: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:26.293 tests.output - Failing tests with true: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:26.297 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_88394fc0_003:74.
16:00:26.298 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:26.298 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_88394fc0_003:72 which is executed by 16 tests
16:00:26.409 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:26.682 tests.output - Failing tests with false: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-9That'sall,haveaniceday!]> but was:<Enteraninteger>678[9]>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
16:00:26.682 tests.output - Failing tests with true: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:26.682 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_88394fc0_003:72.
16:00:26.682 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:26.682 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_88394fc0_003:67 which is executed by 16 tests
16:00:26.784 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:27.102 tests.output - Failing tests with false: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:27.103 tests.output - Failing tests with true: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:27.103 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_88394fc0_003:67.
16:00:27.103 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:27.103 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_88394fc0_003:66 which is executed by 16 tests
16:00:27.194 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:27.496 tests.output - Failing tests with false: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:27.497 tests.output - Failing tests with true: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:27.497 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_88394fc0_003:66.
16:00:27.497 fr.inria.lille.repair.nopol.NoPol - statement #5
16:00:27.497 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_88394fc0_003:65 which is executed by 16 tests
16:00:27.565 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:27.888 tests.output - Failing tests with false: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:27.888 tests.output - Failing tests with true: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:27.888 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_88394fc0_003:65.
16:00:27.888 fr.inria.lille.repair.nopol.NoPol - statement #6
16:00:27.888 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_88394fc0_003:64 which is executed by 16 tests
16:00:27.980 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:28.277 tests.output - Failing tests with false: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:28.277 tests.output - Failing tests with true: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:28.277 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_88394fc0_003:64.
16:00:28.277 fr.inria.lille.repair.nopol.NoPol - statement #7
16:00:28.277 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_88394fc0_003:63 which is executed by 16 tests
16:00:28.355 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:28.672 tests.output - Failing tests with false: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:28.673 tests.output - Failing tests with true: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:28.673 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_88394fc0_003:63.
16:00:28.673 fr.inria.lille.repair.nopol.NoPol - statement #8
16:00:28.673 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_88394fc0_003:62 which is executed by 16 tests
16:00:28.742 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:29.016 tests.output - Failing tests with false: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<[Enteraninteger>678-]9That'sall,haveanice...> but was:<[678]9That'sall,haveanice...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<[Enteraninteger>0]That'sall,haveaniced...> but was:<[]That'sall,haveaniced...>]
16:00:29.016 tests.output - Failing tests with true: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>, test1(introclassJava.digits_88394fc0_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:29.017 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_88394fc0_003:62.
16:00:29.017 fr.inria.lille.repair.nopol.NoPol - statement #9
16:00:29.017 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_88394fc0_003:61 which is executed by 16 tests
16:00:29.093 fr.inria.lille.repair.nopol.NoPol - statement #10
16:00:29.093 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_88394fc0_003:60 which is executed by 16 tests
16:00:29.155 fr.inria.lille.repair.nopol.NoPol - statement #11
16:00:29.155 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_88394fc0_003:70 which is executed by 15 tests
16:00:29.249 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:30.456 tests.output - Failing tests with false: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): test timed out after 1000 milliseconds]
16:00:30.456 tests.output - Failing tests with true: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>]
16:00:30.456 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_88394fc0_003:70.
16:00:30.457 fr.inria.lille.repair.nopol.NoPol - statement #12
16:00:30.457 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_88394fc0_003:69 which is executed by 15 tests
16:00:30.528 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:30.757 tests.output - Failing tests with false: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:30.757 tests.output - Failing tests with true: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>]
16:00:30.757 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_88394fc0_003:69.
16:00:30.757 fr.inria.lille.repair.nopol.NoPol - statement #13
16:00:30.757 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_88394fc0_003:68 which is executed by 15 tests
16:00:30.819 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:30.968 tests.output - Failing tests with false: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[1111]That'sall,haveaniced...>]
16:00:30.968 tests.output - Failing tests with true: 
[test2(introclassJava.digits_88394fc0_003BlackboxTest): expected:<Enteraninteger>678[-]9That'sall,haveanice...> but was:<Enteraninteger>678[]9That'sall,haveanice...>]
16:00:30.969 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_88394fc0_003:68.
16:00:30.969 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:30.974 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:30.974 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:30.974 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 11
16:00:30.974 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
16:00:30.974 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
16:00:30.976 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
16:00:30.978 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
16:00:30.978 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 29905ms
16:00:30.978 fr.inria.lille.repair.nopol.NoPol - 
