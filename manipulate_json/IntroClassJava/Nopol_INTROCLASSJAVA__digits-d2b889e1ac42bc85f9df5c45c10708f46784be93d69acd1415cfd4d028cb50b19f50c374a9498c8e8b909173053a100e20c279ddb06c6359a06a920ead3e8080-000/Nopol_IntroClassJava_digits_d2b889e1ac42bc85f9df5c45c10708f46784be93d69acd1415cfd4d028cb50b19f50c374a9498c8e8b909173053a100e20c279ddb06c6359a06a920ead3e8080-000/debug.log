16:00:05.400 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
16:00:05.402 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-d2b889e1ac42bc85f9df5c45c10708f46784be93d69acd1415cfd4d028cb50b19f50c374a9498c8e8b909173053a100e20c279ddb06c6359a06a920ead3e8080-000/Nopol_IntroClassJava_digits_d2b889e1ac42bc85f9df5c45c10708f46784be93d69acd1415cfd4d028cb50b19f50c374a9498c8e8b909173053a100e20c279ddb06c6359a06a920ead3e8080-000/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-d2b889e1ac42bc85f9df5c45c10708f46784be93d69acd1415cfd4d028cb50b19f50c374a9498c8e8b909173053a100e20c279ddb06c6359a06a920ead3e8080-000/Nopol_IntroClassJava_digits_d2b889e1ac42bc85f9df5c45c10708f46784be93d69acd1415cfd4d028cb50b19f50c374a9498c8e8b909173053a100e20c279ddb06c6359a06a920ead3e8080-000/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
16:00:05.402 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
16:00:05.402 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_d2b889e1_000BlackboxTest, introclassJava.digits_d2b889e1_000WhiteboxTest]
16:00:05.404 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_d2b889e1_000BlackboxTest, introclassJava.digits_d2b889e1_000WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
16:00:05.405 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
16:00:05.407 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
16:00:05.407 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
16:00:05.408 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
16:00:05.408 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
16:00:05.411 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
16:00:05.411 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:09.676 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:09.679 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:68 which is executed by 6 tests
16:00:10.003 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:11.164 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[78-9THat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:11.165 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:11.165 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:68.
16:00:11.165 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:11.627 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[78-9THat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:11.627 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>0[That'sall,haveaniceday!]> but was:<Enteraninteger>0[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>]
16:00:11.628 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:68.
16:00:11.628 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:11.628 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:72 which is executed by 16 tests
16:00:11.748 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:12.144 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[096That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>9[1That'sall,haveaniceday!]> but was:<Enteraninteger>9[]>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[000215That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>6[78-9That'sall,haveaniceday!]> but was:<Enteraninteger>6[]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0253That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[025976041That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
16:00:12.144 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:12.144 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:72.
16:00:12.144 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:12.430 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[096That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>9[1That'sall,haveaniceday!]> but was:<Enteraninteger>9[]>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[000215That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0253That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[025976041That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
16:00:12.431 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>6[78-9That'sall,haveaniceday!]> but was:<Enteraninteger>6[]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:12.431 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:72.
16:00:12.431 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:12.431 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:66 which is executed by 16 tests
16:00:12.510 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:12.836 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[91]That'sall,haveaniced...> but was:<Enteraninteger>[10]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>[8That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[78-9THat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:12.836 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:12.837 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:66.
16:00:12.837 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:13.322 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[91]That'sall,haveaniced...> but was:<Enteraninteger>[10]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>[8That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:13.323 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>0[That'sall,haveaniceday!]> but was:<Enteraninteger>0[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[-678-9THat'sall,haveaniceday~]>]
16:00:13.323 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:66.
16:00:13.323 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:13.323 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:65 which is executed by 16 tests
16:00:13.396 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:13.710 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[91]That'sall,haveaniced...> but was:<Enteraninteger>[10]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>[8That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[78-9THat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:13.710 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:13.711 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:65.
16:00:13.711 fr.inria.lille.repair.nopol.NoPol - statement #5
16:00:13.711 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:64 which is executed by 16 tests
16:00:13.790 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:14.314 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[096That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>9[1That'sall,haveaniceday!]> but was:<Enteraninteger>9[]>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[000215That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>6[78-9That'sall,haveaniceday!]> but was:<Enteraninteger>6[]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0253That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[025976041That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
16:00:14.314 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:14.314 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:64.
16:00:14.315 fr.inria.lille.repair.nopol.NoPol - statement #6
16:00:14.315 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:63 which is executed by 16 tests
16:00:14.400 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:14.721 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[096That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[91That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>[8That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[000215That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0253That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[025976041That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
16:00:14.721 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:14.722 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:63.
16:00:14.722 fr.inria.lille.repair.nopol.NoPol - statement #7
16:00:14.722 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:62 which is executed by 16 tests
16:00:14.807 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:15.120 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<[Enteraninteger>0]96That'sall,haveanic...> but was:<[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<[Enteraninteger>91]That'sall,haveaniced...> but was:<[910]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<[Enteraninteger>0That'sall,haveaniceday!]> but was:<[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<[Enteraninteger>8That'sall,haveaniceday!]> but was:<[8]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<[Enteraninteger>0]00215That'sall,havea...> but was:<[]00215That'sall,havea...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<[Enteraninteger>678-9That'sall,haveaniceday!]> but was:<[678-9THat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<[Enteraninteger>0]253That'sall,haveani...> but was:<[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<[Enteraninteger>0]25976041That'sall,ha...> but was:<[]25976041That'sall,ha...>]
16:00:15.121 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:15.121 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:62.
16:00:15.122 fr.inria.lille.repair.nopol.NoPol - statement #8
16:00:15.122 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:61 which is executed by 16 tests
16:00:15.211 fr.inria.lille.repair.nopol.NoPol - statement #9
16:00:15.212 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:60 which is executed by 16 tests
16:00:15.299 fr.inria.lille.repair.nopol.NoPol - statement #10
16:00:15.299 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:98 which is executed by 3 tests
16:00:15.363 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:15.646 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:15.647 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:15.647 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:98.
16:00:15.647 fr.inria.lille.repair.nopol.NoPol - statement #11
16:00:15.647 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:84 which is executed by 3 tests
16:00:15.705 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:15.972 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>6[78-9That'sall,haveaniceday!]> but was:<Enteraninteger>6[]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:15.972 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:15.973 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:84.
16:00:15.973 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:16.254 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>6[78-9That'sall,haveaniceday!]> but was:<Enteraninteger>6[]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:16.254 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:16.255 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:84.
16:00:16.255 fr.inria.lille.repair.nopol.NoPol - statement #12
16:00:16.255 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:81 which is executed by 13 tests
16:00:16.314 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:16.482 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[096]That'sall,haveaniced...> but was:<Enteraninteger>[96That'sall,haveaniceday!60]That'sall,haveaniced...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[025976041]That'sall,haveaniced...> but was:<Enteraninteger>[25976041That'sall,haveaniceday!10]That'sall,haveaniced...>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0215]That'sall,haveaniced...> but was:<Enteraninteger>00[215That'sall,haveaniceday!50]That'sall,haveaniced...>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0253]That'sall,haveaniced...> but was:<Enteraninteger>[253That'sall,haveaniceday!30]That'sall,haveaniced...>]
16:00:16.482 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>]
16:00:16.482 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:81.
16:00:16.482 fr.inria.lille.repair.nopol.NoPol - statement #13
16:00:16.482 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:79 which is executed by 13 tests
16:00:16.525 fr.inria.lille.repair.nopol.NoPol - statement #14
16:00:16.525 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:78 which is executed by 13 tests
16:00:16.589 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:16.922 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[096That'sall,haveaniceday!]> but was:<Enteraninteger>[9]>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[That'sall,haveaniceday!]> but was:<Enteraninteger>91[]>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[025976041That'sall,haveaniceday!]> but was:<Enteraninteger>[2597604]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0215That'sall,haveaniceday!]> but was:<Enteraninteger>00[21]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0253That'sall,haveaniceday!]> but was:<Enteraninteger>[25]>]
16:00:16.923 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>]
16:00:16.923 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:78.
16:00:16.923 fr.inria.lille.repair.nopol.NoPol - statement #15
16:00:16.923 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:77 which is executed by 13 tests
16:00:16.986 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:17.190 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[096That'sall,haveaniceday!]> but was:<Enteraninteger>[96]>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[That'sall,haveaniceday!]> but was:<Enteraninteger>91[]>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[025976041That'sall,haveaniceday!]> but was:<Enteraninteger>[25976041]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0215That'sall,haveaniceday!]> but was:<Enteraninteger>00[215]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0253That'sall,haveaniceday!]> but was:<Enteraninteger>[253]>]
16:00:17.190 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>]
16:00:17.190 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:77.
16:00:17.191 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:17.359 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[096That'sall,haveaniceday!]> but was:<Enteraninteger>[96]>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[That'sall,haveaniceday!]> but was:<Enteraninteger>91[]>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[025976041That'sall,haveaniceday!]> but was:<Enteraninteger>[25976041]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0215That'sall,haveaniceday!]> but was:<Enteraninteger>00[215]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0253That'sall,haveaniceday!]> but was:<Enteraninteger>[253]>]
16:00:17.359 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[025976041]That'sall,haveaniced...> but was:<Enteraninteger>[21406795]That'sall,haveaniced...>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>0[00215]That'sall,haveaniced...> but was:<Enteraninteger>0[5120]That'sall,haveaniced...>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0253]That'sall,haveaniced...> but was:<Enteraninteger>[235]That'sall,haveaniced...>]
16:00:17.359 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:77.
16:00:17.359 fr.inria.lille.repair.nopol.NoPol - statement #16
16:00:17.359 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:76 which is executed by 13 tests
16:00:17.413 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:17.578 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[09]6That'sall,haveanice...> but was:<Enteraninteger>[]6That'sall,haveanice...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>9[1]That'sall,haveaniced...> but was:<Enteraninteger>9[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[02597604]1That'sall,haveanice...> but was:<Enteraninteger>[]1That'sall,haveanice...>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[00021]5That'sall,haveanice...> but was:<Enteraninteger>[]5That'sall,haveanice...>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[025]3That'sall,haveanice...> but was:<Enteraninteger>[]3That'sall,haveanice...>]
16:00:17.578 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>]
16:00:17.578 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:76.
16:00:17.579 fr.inria.lille.repair.nopol.NoPol - statement #17
16:00:17.579 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:75 which is executed by 13 tests
16:00:17.627 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:22.141 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): test timed out after 1000 milliseconds, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[1]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): test timed out after 1000 milliseconds, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): test timed out after 1000 milliseconds, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): test timed out after 1000 milliseconds]
16:00:22.145 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>]
16:00:22.145 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:75.
16:00:22.145 fr.inria.lille.repair.nopol.NoPol - statement #18
16:00:22.145 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:74 which is executed by 13 tests
16:00:22.222 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:22.572 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>0[9]6That'sall,haveanice...> but was:<Enteraninteger>0[]6That'sall,haveanice...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>9[1]That'sall,haveaniced...> but was:<Enteraninteger>9[00]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>0[2597604]1That'sall,haveanice...> but was:<Enteraninteger>0[000000]1That'sall,haveanice...>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>000[21]5That'sall,haveanice...> but was:<Enteraninteger>000[0]5That'sall,haveanice...>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>0[25]3That'sall,haveanice...> but was:<Enteraninteger>0[0]3That'sall,haveanice...>]
16:00:22.572 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>]
16:00:22.572 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:74.
16:00:22.573 fr.inria.lille.repair.nopol.NoPol - statement #19
16:00:22.573 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:73 which is executed by 13 tests
16:00:22.617 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:22.792 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[096That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>9[1That'sall,haveaniceday!]> but was:<Enteraninteger>9[]>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[025976041That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[000215That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0253That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
16:00:22.793 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>]
16:00:22.793 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:73.
16:00:22.794 fr.inria.lille.repair.nopol.NoPol - statement #20
16:00:22.794 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:93 which is executed by 1 tests
16:00:22.860 fr.inria.lille.repair.nopol.NoPol - statement #21
16:00:22.860 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:92 which is executed by 1 tests
16:00:22.956 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:23.269 tests.output - Failing tests with false: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>678[-9That'sall,haveaniceday!]> but was:<Enteraninteger>678[]>]
16:00:23.269 tests.output - Failing tests with true: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>]
16:00:23.269 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:92.
16:00:23.269 fr.inria.lille.repair.nopol.NoPol - statement #22
16:00:23.269 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:91 which is executed by 1 tests
16:00:23.345 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:23.631 tests.output - Failing tests with false: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>678[-9That'sall,haveaniceday!]> but was:<Enteraninteger>678[9THat'sall,haveaniceday~90THat'sall,haveaniceday~]>]
16:00:23.632 tests.output - Failing tests with true: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>]
16:00:23.632 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:91.
16:00:23.632 fr.inria.lille.repair.nopol.NoPol - statement #23
16:00:23.632 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:90 which is executed by 1 tests
16:00:23.692 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:23.878 tests.output - Failing tests with false: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>678[-9That'sall,haveaniceday!]> but was:<Enteraninteger>678[9]>]
16:00:23.878 tests.output - Failing tests with true: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>]
16:00:23.878 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:90.
16:00:23.878 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:24.002 tests.output - Failing tests with false: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>678[-9That'sall,haveaniceday!]> but was:<Enteraninteger>678[9]>]
16:00:24.002 tests.output - Failing tests with true: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>67[8-9That'sall,haveaniceday!]> but was:<Enteraninteger>67[-98THat'sall,haveaniceday~]>]
16:00:24.002 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:90.
16:00:24.002 fr.inria.lille.repair.nopol.NoPol - statement #24
16:00:24.002 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:89 which is executed by 1 tests
16:00:24.061 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:24.296 tests.output - Failing tests with false: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>6[78-9That'sall,haveaniceday!]> but was:<Enteraninteger>6[-9THat'sall,haveaniceday~]>]
16:00:24.296 tests.output - Failing tests with true: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>]
16:00:24.296 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:89.
16:00:24.296 fr.inria.lille.repair.nopol.NoPol - statement #25
16:00:24.297 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:88 which is executed by 1 tests
16:00:24.384 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:25.551 tests.output - Failing tests with false: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): test timed out after 1000 milliseconds]
16:00:25.551 tests.output - Failing tests with true: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>]
16:00:25.551 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:88.
16:00:25.552 fr.inria.lille.repair.nopol.NoPol - statement #26
16:00:25.552 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:87 which is executed by 1 tests
16:00:25.615 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:25.829 tests.output - Failing tests with false: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>6[78-9That'sall,haveaniceday!]> but was:<Enteraninteger>6[00-9THat'sall,haveaniceday~]>]
16:00:25.829 tests.output - Failing tests with true: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>]
16:00:25.829 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:87.
16:00:25.829 fr.inria.lille.repair.nopol.NoPol - statement #27
16:00:25.830 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:86 which is executed by 1 tests
16:00:25.882 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:26.059 tests.output - Failing tests with false: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>6[78-9That'sall,haveaniceday!]> but was:<Enteraninteger>6[]>]
16:00:26.059 tests.output - Failing tests with true: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>]
16:00:26.059 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:86.
16:00:26.060 fr.inria.lille.repair.nopol.NoPol - statement #28
16:00:26.060 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:85 which is executed by 1 tests
16:00:26.097 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:26.253 tests.output - Failing tests with false: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>6[78-9That'sall,haveaniceday!]> but was:<Enteraninteger>6[]>]
16:00:26.253 tests.output - Failing tests with true: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>]
16:00:26.253 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:85.
16:00:26.254 fr.inria.lille.repair.nopol.NoPol - statement #29
16:00:26.254 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:70 which is executed by 1 tests
16:00:26.310 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:26.459 tests.output - Failing tests with false: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[78-9THat'sall,haveaniceday~]>]
16:00:26.459 tests.output - Failing tests with true: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>]
16:00:26.459 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:70.
16:00:26.462 fr.inria.lille.repair.nopol.NoPol - statement #30
16:00:26.462 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:69 which is executed by 1 tests
16:00:26.521 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:26.644 tests.output - Failing tests with false: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[078-9THat'sall,haveaniceday~]>]
16:00:26.645 tests.output - Failing tests with true: 
[test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>]
16:00:26.645 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:69.
16:00:26.645 fr.inria.lille.repair.nopol.NoPol - statement #31
16:00:26.645 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d2b889e1_000:67 which is executed by 10 tests
16:00:26.705 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:27.004 tests.output - Failing tests with false: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[91]That'sall,haveaniced...> but was:<Enteraninteger>[10]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>[8That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:27.004 tests.output - Failing tests with true: 
[test3(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]96That'sall,haveanic...> but was:<Enteraninteger>[]96That'sall,haveanic...>, test2(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>91[]That'sall,haveaniced...> but was:<Enteraninteger>91[0]That'sall,haveaniced...>, test1(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test4(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<Enteraninteger>8[That'sall,haveaniceday!]> but was:<Enteraninteger>8[]>, test6(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>00[0]215That'sall,haveani...> but was:<Enteraninteger>00[]215That'sall,haveani...>, test2(introclassJava.digits_d2b889e1_000BlackboxTest): expected:<...nteraninteger>678-9T[hat'sall,haveaniceday!]> but was:<...nteraninteger>678-9T[Hat'sall,haveaniceday~]>, test4(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]253That'sall,haveani...> but was:<Enteraninteger>[]253That'sall,haveani...>, test9(introclassJava.digits_d2b889e1_000WhiteboxTest): expected:<Enteraninteger>[0]25976041That'sall,ha...> but was:<Enteraninteger>[]25976041That'sall,ha...>]
16:00:27.004 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d2b889e1_000:67.
16:00:27.005 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:27.007 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:27.008 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:27.008 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 33
16:00:27.008 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
16:00:27.008 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
16:00:27.014 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
16:00:27.014 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
16:00:27.014 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 21607ms
16:00:27.014 fr.inria.lille.repair.nopol.NoPol - 
