15:59:53.799 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
15:59:53.801 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__median-9083480332b4a5e4274f3bf5ef8bd5d1bd75048c0c066e574c27a2de6d919d658efc519e8b6a230a074eb5f2957d5768f4dc981a8e926c3a72993bc448a017f7-010/Nopol_IntroClassJava_median_9083480332b4a5e4274f3bf5ef8bd5d1bd75048c0c066e574c27a2de6d919d658efc519e8b6a230a074eb5f2957d5768f4dc981a8e926c3a72993bc448a017f7-010/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__median-9083480332b4a5e4274f3bf5ef8bd5d1bd75048c0c066e574c27a2de6d919d658efc519e8b6a230a074eb5f2957d5768f4dc981a8e926c3a72993bc448a017f7-010/Nopol_IntroClassJava_median_9083480332b4a5e4274f3bf5ef8bd5d1bd75048c0c066e574c27a2de6d919d658efc519e8b6a230a074eb5f2957d5768f4dc981a8e926c3a72993bc448a017f7-010/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
15:59:53.801 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
15:59:53.801 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.median_90834803_010BlackboxTest, introclassJava.median_90834803_010WhiteboxTest]
15:59:53.803 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.median_90834803_010BlackboxTest, introclassJava.median_90834803_010WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
15:59:53.804 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
15:59:53.807 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
15:59:53.807 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
15:59:53.807 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
15:59:53.807 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
15:59:53.811 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
15:59:53.811 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:02.657 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:02.660 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.median_90834803_010:78 which is executed by 1 tests
16:00:02.959 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:03.965 tests.output - Failing tests with false: 
[test3(introclassJava.median_90834803_010BlackboxTest): expected:<...rsseparatedbyspaces>[6isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:03.965 tests.output - Failing tests with true: 
[test3(introclassJava.median_90834803_010BlackboxTest): expected:<...rsseparatedbyspaces>[6isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:03.966 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.median_90834803_010:78.
16:00:03.967 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:03.967 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.median_90834803_010:73 which is executed by 5 tests
16:00:04.060 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:04.396 tests.output - Failing tests with false: 
[test3(introclassJava.median_90834803_010BlackboxTest): expected:<...rsseparatedbyspaces>[6isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:04.396 tests.output - Failing tests with true: 
[test3(introclassJava.median_90834803_010BlackboxTest): expected:<...rsseparatedbyspaces>[6isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:04.396 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.median_90834803_010:73.
16:00:04.396 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:04.746 tests.output - Failing tests with false: 
[test3(introclassJava.median_90834803_010BlackboxTest): expected:<...rsseparatedbyspaces>[6isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:04.746 tests.output - Failing tests with true: 
[test3(introclassJava.median_90834803_010BlackboxTest): expected:<...rsseparatedbyspaces>[6]isthemedian> but was:<...rsseparatedbyspaces>[8]isthemedian>]
16:00:04.746 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.median_90834803_010:73.
16:00:04.746 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:04.746 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.median_90834803_010:70 which is executed by 9 tests
16:00:04.842 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:05.139 tests.output - Failing tests with false: 
[test3(introclassJava.median_90834803_010BlackboxTest): expected:<...rsseparatedbyspaces>[6isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:05.139 tests.output - Failing tests with true: 
[test3(introclassJava.median_90834803_010BlackboxTest): expected:<...rsseparatedbyspaces>[6isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:05.139 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.median_90834803_010:70.
16:00:05.139 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:05.404 tests.output - Failing tests with false: 
[test3(introclassJava.median_90834803_010BlackboxTest): expected:<...rsseparatedbyspaces>[6isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:05.404 tests.output - Failing tests with true: 
[test3(introclassJava.median_90834803_010BlackboxTest): expected:<...rsseparatedbyspaces>[6]isthemedian> but was:<...rsseparatedbyspaces>[2]isthemedian>]
16:00:05.404 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.median_90834803_010:70.
16:00:05.404 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:05.404 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.median_90834803_010:67 which is executed by 13 tests
16:00:05.512 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:05.768 tests.output - Failing tests with false: 
[test3(introclassJava.median_90834803_010BlackboxTest): expected:<...rsseparatedbyspaces>[6isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:05.768 tests.output - Failing tests with true: 
[test3(introclassJava.median_90834803_010BlackboxTest): expected:<...rsseparatedbyspaces>[6isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:05.769 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.median_90834803_010:67.
16:00:05.769 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:06.456 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
16:00:06.524 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:06.596 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:06.776 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:07.082 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:07.652 f.i.l.c.s.ConstraintBasedSynthesis - Successful code synthesis: !((!(((c.value <= a.value) && (a.value <= b.value)))) && ((b!=null) && (((b.value >= a.value)) || ((c.value <= a.value)))))
16:00:07.653 f.i.l.repair.nopol.patch.TestPatch - Applying patch: introclassJava.median_90834803_010:67: CONDITIONAL !((!(((c.value <= a.value) && (a.value <= b.value)))) && ((b!=null) && (((b.value >= a.value)) || ((c.value <= a.value)))))
16:00:07.810 f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "!((!(((c.value <= a.value) && (a.value <= b.value)))) && ((b!=null) && (((b.value >= a.value)) || ((c.value <= a.value)))))" is working
16:00:07.930 fr.inria.lille.repair.nopol.NoPol - Skipped -9 patches for sake of performance
16:00:07.930 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 7
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 4
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 5
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [14] [== of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2, == of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2]
16:00:07.933 fr.inria.lille.repair.nopol.NoPol -                   class java.lang.Boolean: 14
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 20
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 14133ms
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - 
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - ----PATCH FOUND----
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - !((!(((c.value <= a.value) && (a.value <= b.value)))) && ((b!=null) && (((b.value >= a.value)) || ((c.value <= a.value)))))
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - Nb test that executes the patch: 13
16:00:07.933 fr.inria.lille.repair.nopol.NoPol - introclassJava.median_90834803_010:67: CONDITIONAL
16:00:07.947 fr.inria.lille.repair.nopol.NoPol - --- a/src/main/java/introclassJava/median_90834803_010.java
+++ b/src/main/java/introclassJava/median_90834803_010.java
@@ -66,10 +66,9 @@
         c.value = scanner.nextInt ();
-        if ((b.value >= a.value && a.value >= c.value)
-                || (c.value <= a.value && a.value <= b.value)) {
+        if (!((!(((c.value <= a.value) && (a.value <= b.value)))) && ((b!=null) && (((b.value >= a.value)) || ((c.value <= a.value)))))) {
             output += (String.format ("%d is the median\n", a.value));
         } else if ((a.value >= b.value && b.value >= c.value)
-                   || (a.value <= b.value && b.value <= c.value)) {
+        || (a.value <= b.value && b.value <= c.value)) {
             output += (String.format ("%d is the median\n", b.value));
         } else if ((a.value >= c.value && c.value >= b.value)
-                   || (a.value <= c.value && c.value <= b.value)) {
+        || (a.value <= c.value && c.value <= b.value)) {
             output += (String.format ("%d is the median\n", c.value));
@@ -77,3 +76,3 @@
             if (true)
-                return;;
+            return;;
         }

