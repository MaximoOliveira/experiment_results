15:59:51.267 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
15:59:51.269 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-d8b262849e28496f80a8acf7de9758cf3f3a4edf023343521e2e0ac50ec485212a473405570d6c58de6756ae098600d9c7138390faa1aaf6bf3609a8d4016448-000/Nopol_IntroClassJava_digits_d8b262849e28496f80a8acf7de9758cf3f3a4edf023343521e2e0ac50ec485212a473405570d6c58de6756ae098600d9c7138390faa1aaf6bf3609a8d4016448-000/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-d8b262849e28496f80a8acf7de9758cf3f3a4edf023343521e2e0ac50ec485212a473405570d6c58de6756ae098600d9c7138390faa1aaf6bf3609a8d4016448-000/Nopol_IntroClassJava_digits_d8b262849e28496f80a8acf7de9758cf3f3a4edf023343521e2e0ac50ec485212a473405570d6c58de6756ae098600d9c7138390faa1aaf6bf3609a8d4016448-000/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
15:59:51.269 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
15:59:51.269 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_d8b26284_000BlackboxTest, introclassJava.digits_d8b26284_000WhiteboxTest]
15:59:51.271 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_d8b26284_000BlackboxTest, introclassJava.digits_d8b26284_000WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
15:59:51.272 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
15:59:51.275 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
15:59:51.275 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
15:59:51.275 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
15:59:51.275 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
15:59:51.279 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
15:59:51.279 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
15:59:54.700 fr.inria.lille.repair.nopol.NoPol - statement #1
15:59:54.703 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d8b26284_000:69 which is executed by 16 tests
15:59:54.990 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
15:59:55.975 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d8b26284_000BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
15:59:55.975 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d8b26284_000BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
15:59:55.975 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d8b26284_000:69.
15:59:55.975 fr.inria.lille.repair.nopol.NoPol - statement #2
15:59:55.976 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d8b26284_000:67 which is executed by 16 tests
15:59:56.054 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
15:59:56.342 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d8b26284_000BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[-6]>]
15:59:56.342 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d8b26284_000BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
15:59:56.342 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d8b26284_000:67.
15:59:56.342 fr.inria.lille.repair.nopol.NoPol - statement #3
15:59:56.342 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d8b26284_000:66 which is executed by 16 tests
15:59:56.422 fr.inria.lille.repair.nopol.NoPol - statement #4
15:59:56.422 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d8b26284_000:65 which is executed by 16 tests
15:59:56.492 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
15:59:56.802 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d8b26284_000BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
15:59:56.802 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d8b26284_000BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
15:59:56.803 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d8b26284_000:65.
15:59:56.803 fr.inria.lille.repair.nopol.NoPol - statement #5
15:59:56.803 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d8b26284_000:64 which is executed by 16 tests
15:59:56.883 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
15:59:57.180 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d8b26284_000BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
15:59:57.180 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d8b26284_000BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
15:59:57.180 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d8b26284_000:64.
15:59:57.180 fr.inria.lille.repair.nopol.NoPol - statement #6
15:59:57.180 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d8b26284_000:62 which is executed by 16 tests
15:59:57.250 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
15:59:57.450 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d8b26284_000BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[0]That'sall,haveaniced...>]
15:59:57.450 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d8b26284_000BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
15:59:57.450 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d8b26284_000:62.
15:59:57.450 fr.inria.lille.repair.nopol.NoPol - statement #7
15:59:57.450 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d8b26284_000:61 which is executed by 16 tests
15:59:57.525 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
15:59:57.855 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d8b26284_000BlackboxTest): expected:<[Enteraninteger>678-9]That'sall,haveaniced...> but was:<[-6]That'sall,haveaniced...>]
15:59:57.855 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d8b26284_000BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
15:59:57.855 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d8b26284_000:61.
15:59:57.855 fr.inria.lille.repair.nopol.NoPol - statement #8
15:59:57.855 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d8b26284_000:60 which is executed by 16 tests
15:59:57.930 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
15:59:57.947 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
15:59:57.947 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
15:59:57.947 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 6
15:59:57.947 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
15:59:57.947 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
15:59:57.948 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
15:59:57.949 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
15:59:57.949 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 6665ms
15:59:57.949 fr.inria.lille.repair.nopol.NoPol - 
