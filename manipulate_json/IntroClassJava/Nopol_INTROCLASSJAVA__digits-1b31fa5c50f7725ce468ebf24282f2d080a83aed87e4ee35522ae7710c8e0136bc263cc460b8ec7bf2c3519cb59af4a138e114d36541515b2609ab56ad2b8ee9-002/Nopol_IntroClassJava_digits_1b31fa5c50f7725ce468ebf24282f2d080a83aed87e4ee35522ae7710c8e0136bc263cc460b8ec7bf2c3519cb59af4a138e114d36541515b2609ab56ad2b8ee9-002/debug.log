15:59:56.828 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
15:59:56.831 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-1b31fa5c50f7725ce468ebf24282f2d080a83aed87e4ee35522ae7710c8e0136bc263cc460b8ec7bf2c3519cb59af4a138e114d36541515b2609ab56ad2b8ee9-002/Nopol_IntroClassJava_digits_1b31fa5c50f7725ce468ebf24282f2d080a83aed87e4ee35522ae7710c8e0136bc263cc460b8ec7bf2c3519cb59af4a138e114d36541515b2609ab56ad2b8ee9-002/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-1b31fa5c50f7725ce468ebf24282f2d080a83aed87e4ee35522ae7710c8e0136bc263cc460b8ec7bf2c3519cb59af4a138e114d36541515b2609ab56ad2b8ee9-002/Nopol_IntroClassJava_digits_1b31fa5c50f7725ce468ebf24282f2d080a83aed87e4ee35522ae7710c8e0136bc263cc460b8ec7bf2c3519cb59af4a138e114d36541515b2609ab56ad2b8ee9-002/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
15:59:56.831 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
15:59:56.831 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_1b31fa5c_002BlackboxTest, introclassJava.digits_1b31fa5c_002WhiteboxTest]
15:59:56.833 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_1b31fa5c_002BlackboxTest, introclassJava.digits_1b31fa5c_002WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
15:59:56.834 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
15:59:56.837 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
15:59:56.837 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
15:59:56.837 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
15:59:56.837 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
15:59:56.842 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
15:59:56.842 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:00.432 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:00.434 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1b31fa5c_002:81 which is executed by 16 tests
16:00:00.745 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:01.796 tests.output - Failing tests with false: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:01.796 tests.output - Failing tests with true: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:01.797 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1b31fa5c_002:81.
16:00:01.797 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:01.797 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1b31fa5c_002:79 which is executed by 16 tests
16:00:01.884 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:02.165 tests.output - Failing tests with false: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
16:00:02.165 tests.output - Failing tests with true: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:02.165 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1b31fa5c_002:79.
16:00:02.166 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:02.166 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1b31fa5c_002:70 which is executed by 16 tests
16:00:02.264 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:02.566 tests.output - Failing tests with false: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:02.566 tests.output - Failing tests with true: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:02.566 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1b31fa5c_002:70.
16:00:02.568 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:02.568 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1b31fa5c_002:67 which is executed by 16 tests
16:00:02.661 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:02.893 tests.output - Failing tests with false: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:02.893 tests.output - Failing tests with true: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:02.893 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1b31fa5c_002:67.
16:00:02.893 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:03.170 tests.output - Failing tests with false: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:03.170 tests.output - Failing tests with true: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:03.171 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1b31fa5c_002:67.
16:00:03.171 fr.inria.lille.repair.nopol.NoPol - statement #5
16:00:03.171 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1b31fa5c_002:66 which is executed by 16 tests
16:00:03.244 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:03.475 tests.output - Failing tests with false: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:03.476 tests.output - Failing tests with true: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:03.476 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1b31fa5c_002:66.
16:00:03.476 fr.inria.lille.repair.nopol.NoPol - statement #6
16:00:03.476 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1b31fa5c_002:65 which is executed by 16 tests
16:00:03.565 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:03.913 tests.output - Failing tests with false: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:03.914 tests.output - Failing tests with true: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:03.914 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1b31fa5c_002:65.
16:00:03.914 fr.inria.lille.repair.nopol.NoPol - statement #7
16:00:03.914 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1b31fa5c_002:64 which is executed by 16 tests
16:00:03.992 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:04.319 tests.output - Failing tests with false: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:04.319 tests.output - Failing tests with true: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:04.319 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1b31fa5c_002:64.
16:00:04.320 fr.inria.lille.repair.nopol.NoPol - statement #8
16:00:04.320 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1b31fa5c_002:63 which is executed by 16 tests
16:00:04.383 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:04.642 tests.output - Failing tests with false: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:04.643 tests.output - Failing tests with true: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:04.643 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1b31fa5c_002:63.
16:00:04.643 fr.inria.lille.repair.nopol.NoPol - statement #9
16:00:04.643 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1b31fa5c_002:62 which is executed by 16 tests
16:00:04.722 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:04.977 tests.output - Failing tests with false: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<[Enteraninteger>0]That'sall,haveaniced...> but was:<[]That'sall,haveaniced...>]
16:00:04.977 tests.output - Failing tests with true: 
[test1(introclassJava.digits_1b31fa5c_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:04.978 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1b31fa5c_002:62.
16:00:04.978 fr.inria.lille.repair.nopol.NoPol - statement #10
16:00:04.978 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1b31fa5c_002:61 which is executed by 16 tests
16:00:05.056 fr.inria.lille.repair.nopol.NoPol - statement #11
16:00:05.056 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1b31fa5c_002:60 which is executed by 16 tests
16:00:05.143 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:05.150 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:05.150 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:05.150 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 10
16:00:05.150 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
16:00:05.150 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
16:00:05.156 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
16:00:05.156 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
16:00:05.156 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 8316ms
16:00:05.156 fr.inria.lille.repair.nopol.NoPol - 
