15:59:54.726 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
15:59:54.729 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-1c2bb3a40a82cba97b2937bc6825903a28ecfe91f993fc177a0f2ae003bcc7b1073eb49e35d3f0f69d6b612e8347e9c1b93306bf25a7e5390098c1a06845baac-003/Nopol_IntroClassJava_digits_1c2bb3a40a82cba97b2937bc6825903a28ecfe91f993fc177a0f2ae003bcc7b1073eb49e35d3f0f69d6b612e8347e9c1b93306bf25a7e5390098c1a06845baac-003/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-1c2bb3a40a82cba97b2937bc6825903a28ecfe91f993fc177a0f2ae003bcc7b1073eb49e35d3f0f69d6b612e8347e9c1b93306bf25a7e5390098c1a06845baac-003/Nopol_IntroClassJava_digits_1c2bb3a40a82cba97b2937bc6825903a28ecfe91f993fc177a0f2ae003bcc7b1073eb49e35d3f0f69d6b612e8347e9c1b93306bf25a7e5390098c1a06845baac-003/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
15:59:54.729 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
15:59:54.729 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_1c2bb3a4_003BlackboxTest, introclassJava.digits_1c2bb3a4_003WhiteboxTest]
15:59:54.731 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_1c2bb3a4_003BlackboxTest, introclassJava.digits_1c2bb3a4_003WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
15:59:54.732 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
15:59:54.734 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
15:59:54.735 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
15:59:54.735 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
15:59:54.735 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
15:59:54.739 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
15:59:54.739 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:17.333 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:17.336 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:76 which is executed by 1 tests
16:00:17.633 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:18.669 tests.output - Failing tests with false: 
[test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:18.670 tests.output - Failing tests with true: 
[test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:18.670 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:76.
16:00:18.671 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:18.671 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:75 which is executed by 1 tests
16:00:18.755 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:19.084 tests.output - Failing tests with false: 
[test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:19.085 tests.output - Failing tests with true: 
[test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:19.085 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:75.
16:00:19.085 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:19.085 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:72 which is executed by 1 tests
16:00:19.175 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:19.458 tests.output - Failing tests with false: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:19.459 tests.output - Failing tests with true: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[7463847412]That'sall,haveaniced...>]
16:00:19.459 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:72.
16:00:19.459 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:19.459 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:90 which is executed by 16 tests
16:00:19.537 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:19.864 tests.output - Failing tests with false: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[7463847412]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:19.864 tests.output - Failing tests with true: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[7463847412]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:19.864 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:90.
16:00:19.864 fr.inria.lille.repair.nopol.NoPol - statement #5
16:00:19.864 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:88 which is executed by 16 tests
16:00:19.961 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:20.386 tests.output - Failing tests with false: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001That'sall,haveaniceday!]> but was:<Enteraninteger>[7463847412]>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[-6]>]
16:00:20.387 tests.output - Failing tests with true: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[7463847412]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:20.388 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:88.
16:00:20.388 fr.inria.lille.repair.nopol.NoPol - statement #6
16:00:20.388 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:71 which is executed by 16 tests
16:00:20.514 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:20.938 tests.output - Failing tests with false: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:20.938 tests.output - Failing tests with true: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[7463847412]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:20.939 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:71.
16:00:20.939 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:21.280 tests.output - Failing tests with false: 
[test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:21.280 tests.output - Failing tests with true: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[7463847412]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[7463847412]That'sall,haveaniced...>]
16:00:21.280 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:71.
16:00:21.280 fr.inria.lille.repair.nopol.NoPol - statement #7
16:00:21.280 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:67 which is executed by 16 tests
16:00:21.357 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:21.600 tests.output - Failing tests with false: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>2[668655001]That'sall,haveaniced...> but was:<Enteraninteger>2[]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:21.600 tests.output - Failing tests with true: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[7463847412]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:21.600 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:67.
16:00:21.600 fr.inria.lille.repair.nopol.NoPol - statement #8
16:00:21.601 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:66 which is executed by 16 tests
16:00:21.672 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:21.926 tests.output - Failing tests with false: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>2[668655001]That'sall,haveaniced...> but was:<Enteraninteger>2[]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:21.927 tests.output - Failing tests with true: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[7463847412]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:21.927 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:66.
16:00:21.928 fr.inria.lille.repair.nopol.NoPol - statement #9
16:00:21.928 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:65 which is executed by 16 tests
16:00:22.007 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:22.289 tests.output - Failing tests with false: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[0]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[0]That'sall,haveaniced...>]
16:00:22.289 tests.output - Failing tests with true: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[7463847412]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:22.289 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:65.
16:00:22.289 fr.inria.lille.repair.nopol.NoPol - statement #10
16:00:22.289 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:64 which is executed by 16 tests
16:00:22.356 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:22.608 tests.output - Failing tests with false: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<[Enteraninteger>2668655001]That'sall,haveaniced...> but was:<[7463847412]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<[Enteraninteger>678-9]That'sall,haveaniced...> but was:<[-6]That'sall,haveaniced...>]
16:00:22.608 tests.output - Failing tests with true: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[7463847412]That'sall,haveaniced...>, test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:22.608 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:64.
16:00:22.609 fr.inria.lille.repair.nopol.NoPol - statement #11
16:00:22.609 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:63 which is executed by 16 tests
16:00:22.657 fr.inria.lille.repair.nopol.NoPol - statement #12
16:00:22.658 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:62 which is executed by 16 tests
16:00:22.719 fr.inria.lille.repair.nopol.NoPol - statement #13
16:00:22.719 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:61 which is executed by 16 tests
16:00:22.794 fr.inria.lille.repair.nopol.NoPol - statement #14
16:00:22.794 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:60 which is executed by 16 tests
16:00:22.874 fr.inria.lille.repair.nopol.NoPol - statement #15
16:00:22.875 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:69 which is executed by 13 tests
16:00:22.959 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:23.216 tests.output - Failing tests with false: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>2[668655001]That'sall,haveaniced...> but was:<Enteraninteger>2[]That'sall,haveaniced...>]
16:00:23.217 tests.output - Failing tests with true: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[7463847412]That'sall,haveaniced...>]
16:00:23.217 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:69.
16:00:23.217 fr.inria.lille.repair.nopol.NoPol - statement #16
16:00:23.217 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:68 which is executed by 13 tests
16:00:23.312 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:24.581 tests.output - Failing tests with false: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): test timed out after 1000 milliseconds]
16:00:24.581 tests.output - Failing tests with true: 
[test10(introclassJava.digits_1c2bb3a4_003WhiteboxTest): expected:<Enteraninteger>[2668655001]That'sall,haveaniced...> but was:<Enteraninteger>[7463847412]That'sall,haveaniced...>]
16:00:24.582 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:68.
16:00:24.583 fr.inria.lille.repair.nopol.NoPol - statement #17
16:00:24.583 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:80 which is executed by 15 tests
16:00:24.663 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:24.874 tests.output - Failing tests with false: 
[test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:24.875 tests.output - Failing tests with true: 
[test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:24.875 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:80.
16:00:24.875 fr.inria.lille.repair.nopol.NoPol - statement #18
16:00:24.875 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_1c2bb3a4_003:74 which is executed by 15 tests
16:00:24.965 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:25.164 tests.output - Failing tests with false: 
[test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:25.164 tests.output - Failing tests with true: 
[test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:25.164 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:74.
16:00:25.165 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:25.437 tests.output - Failing tests with false: 
[test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:25.437 tests.output - Failing tests with true: 
[test2(introclassJava.digits_1c2bb3a4_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-6]That'sall,haveaniced...>]
16:00:25.437 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_1c2bb3a4_003:74.
16:00:25.437 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:25.444 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:25.444 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:25.444 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 16
16:00:25.444 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
16:00:25.444 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
16:00:25.447 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
16:00:25.447 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
16:00:25.447 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 30712ms
16:00:25.447 fr.inria.lille.repair.nopol.NoPol - 
