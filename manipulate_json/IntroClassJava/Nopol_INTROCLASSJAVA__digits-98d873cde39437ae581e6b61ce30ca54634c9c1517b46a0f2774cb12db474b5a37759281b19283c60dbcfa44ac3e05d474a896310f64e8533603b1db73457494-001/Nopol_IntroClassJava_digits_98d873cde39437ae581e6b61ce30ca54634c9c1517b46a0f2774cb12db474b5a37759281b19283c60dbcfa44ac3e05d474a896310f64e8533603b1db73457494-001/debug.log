16:00:08.356 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
16:00:08.359 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-98d873cde39437ae581e6b61ce30ca54634c9c1517b46a0f2774cb12db474b5a37759281b19283c60dbcfa44ac3e05d474a896310f64e8533603b1db73457494-001/Nopol_IntroClassJava_digits_98d873cde39437ae581e6b61ce30ca54634c9c1517b46a0f2774cb12db474b5a37759281b19283c60dbcfa44ac3e05d474a896310f64e8533603b1db73457494-001/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-98d873cde39437ae581e6b61ce30ca54634c9c1517b46a0f2774cb12db474b5a37759281b19283c60dbcfa44ac3e05d474a896310f64e8533603b1db73457494-001/Nopol_IntroClassJava_digits_98d873cde39437ae581e6b61ce30ca54634c9c1517b46a0f2774cb12db474b5a37759281b19283c60dbcfa44ac3e05d474a896310f64e8533603b1db73457494-001/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
16:00:08.359 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
16:00:08.359 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_98d873cd_001BlackboxTest, introclassJava.digits_98d873cd_001WhiteboxTest]
16:00:08.361 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_98d873cd_001BlackboxTest, introclassJava.digits_98d873cd_001WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
16:00:08.362 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
16:00:08.366 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
16:00:08.366 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
16:00:08.366 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
16:00:08.366 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
16:00:08.370 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
16:00:08.370 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:12.041 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:12.043 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_98d873cd_001:70 which is executed by 16 tests
16:00:12.346 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:13.531 tests.output - Failing tests with false: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>, test1(introclassJava.digits_98d873cd_001WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:13.531 tests.output - Failing tests with true: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>, test1(introclassJava.digits_98d873cd_001WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:13.531 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_98d873cd_001:70.
16:00:13.535 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:13.535 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_98d873cd_001:68 which is executed by 16 tests
16:00:13.654 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:14.030 tests.output - Failing tests with false: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[-6-7-8-9]>, test1(introclassJava.digits_98d873cd_001WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
16:00:14.030 tests.output - Failing tests with true: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>, test1(introclassJava.digits_98d873cd_001WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:14.030 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_98d873cd_001:68.
16:00:14.030 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:14.030 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_98d873cd_001:63 which is executed by 16 tests
16:00:14.125 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:14.375 tests.output - Failing tests with false: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test1(introclassJava.digits_98d873cd_001WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:14.375 tests.output - Failing tests with true: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>, test1(introclassJava.digits_98d873cd_001WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:14.375 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_98d873cd_001:63.
16:00:14.375 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:14.375 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_98d873cd_001:62 which is executed by 16 tests
16:00:14.445 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:14.718 tests.output - Failing tests with false: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test1(introclassJava.digits_98d873cd_001WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:14.719 tests.output - Failing tests with true: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>, test1(introclassJava.digits_98d873cd_001WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:14.719 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_98d873cd_001:62.
16:00:14.719 fr.inria.lille.repair.nopol.NoPol - statement #5
16:00:14.719 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_98d873cd_001:61 which is executed by 16 tests
16:00:14.819 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:15.243 tests.output - Failing tests with false: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<[Enteraninteger>67]8-9That'sall,haveani...> but was:<[-6-7-]8-9That'sall,haveani...>, test1(introclassJava.digits_98d873cd_001WhiteboxTest): expected:<[Enteraninteger>0]That'sall,haveaniced...> but was:<[]That'sall,haveaniced...>]
16:00:15.243 tests.output - Failing tests with true: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>, test1(introclassJava.digits_98d873cd_001WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:15.243 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_98d873cd_001:61.
16:00:15.243 fr.inria.lille.repair.nopol.NoPol - statement #6
16:00:15.243 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_98d873cd_001:60 which is executed by 16 tests
16:00:15.307 fr.inria.lille.repair.nopol.NoPol - statement #7
16:00:15.307 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_98d873cd_001:66 which is executed by 15 tests
16:00:15.394 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:15.709 tests.output - Failing tests with false: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:15.710 tests.output - Failing tests with true: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:15.710 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_98d873cd_001:66.
16:00:15.710 fr.inria.lille.repair.nopol.NoPol - statement #8
16:00:15.710 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_98d873cd_001:65 which is executed by 15 tests
16:00:15.771 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:17.011 tests.output - Failing tests with false: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): test timed out after 1000 milliseconds]
16:00:17.011 tests.output - Failing tests with true: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:17.011 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_98d873cd_001:65.
16:00:17.012 fr.inria.lille.repair.nopol.NoPol - statement #9
16:00:17.012 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_98d873cd_001:64 which is executed by 15 tests
16:00:17.087 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:17.357 tests.output - Failing tests with false: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[0000]That'sall,haveaniced...>]
16:00:17.357 tests.output - Failing tests with true: 
[test2(introclassJava.digits_98d873cd_001BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:17.358 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_98d873cd_001:64.
16:00:17.358 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:17.364 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:17.364 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:17.364 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 8
16:00:17.364 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
16:00:17.364 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
16:00:17.369 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
16:00:17.369 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
16:00:17.369 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 9003ms
16:00:17.369 fr.inria.lille.repair.nopol.NoPol - 
