16:00:00.788 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
16:00:00.791 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-5b504b3547416bfd54f138b3caa529ad72d157744b787e0e6f4745a2ff0fc5cc33bc87904b2d7cda9c7858087b2e04ece46d53fe9edd208f68d30a0ae70f363f-000/Nopol_IntroClassJava_digits_5b504b3547416bfd54f138b3caa529ad72d157744b787e0e6f4745a2ff0fc5cc33bc87904b2d7cda9c7858087b2e04ece46d53fe9edd208f68d30a0ae70f363f-000/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-5b504b3547416bfd54f138b3caa529ad72d157744b787e0e6f4745a2ff0fc5cc33bc87904b2d7cda9c7858087b2e04ece46d53fe9edd208f68d30a0ae70f363f-000/Nopol_IntroClassJava_digits_5b504b3547416bfd54f138b3caa529ad72d157744b787e0e6f4745a2ff0fc5cc33bc87904b2d7cda9c7858087b2e04ece46d53fe9edd208f68d30a0ae70f363f-000/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
16:00:00.791 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
16:00:00.791 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_5b504b35_000BlackboxTest, introclassJava.digits_5b504b35_000WhiteboxTest]
16:00:00.793 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_5b504b35_000BlackboxTest, introclassJava.digits_5b504b35_000WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
16:00:00.794 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
16:00:00.797 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
16:00:00.797 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
16:00:00.797 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
16:00:00.797 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
16:00:00.801 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
16:00:00.802 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:04.362 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:04.366 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:85 which is executed by 16 tests
16:00:04.687 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:05.772 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:05.772 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:05.772 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:85.
16:00:05.774 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:05.774 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:83 which is executed by 16 tests
16:00:05.864 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:06.223 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
16:00:06.223 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:06.223 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:83.
16:00:06.224 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:06.224 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:79 which is executed by 16 tests
16:00:06.331 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:06.664 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): / by zero]
16:00:06.664 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:06.664 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:79.
16:00:06.665 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:06.665 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:78 which is executed by 16 tests
16:00:06.752 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:07.077 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): / by zero]
16:00:07.077 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:07.077 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:78.
16:00:07.077 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:07.349 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): / by zero]
16:00:07.350 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:07.350 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:78.
16:00:07.351 fr.inria.lille.repair.nopol.NoPol - statement #5
16:00:07.351 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:75 which is executed by 16 tests
16:00:07.467 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:07.805 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:07.805 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:07.806 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:75.
16:00:07.806 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:08.451 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
16:00:08.528 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:08.633 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:09.184 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:09.605 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:18.203 f.i.l.c.s.ConstraintBasedSynthesis - Failed code synthesis, returning NullCodeGenesis
16:00:18.205 fr.inria.lille.repair.nopol.NoPol - statement #6
16:00:18.205 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:72 which is executed by 16 tests
16:00:18.295 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:18.562 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:18.562 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:18.562 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:72.
16:00:18.562 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:19.054 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
16:00:19.077 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:19.144 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:19.499 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:20.495 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:34.110 f.i.l.c.s.ConstraintBasedSynthesis - Failed code synthesis, returning NullCodeGenesis
16:00:34.111 fr.inria.lille.repair.nopol.NoPol - statement #7
16:00:34.111 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:69 which is executed by 16 tests
16:00:34.199 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:34.439 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:34.439 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:34.439 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:69.
16:00:34.439 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:35.105 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
16:00:35.125 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:35.199 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:35.585 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:36.749 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:47.166 f.i.l.c.s.ConstraintBasedSynthesis - Failed code synthesis, returning NullCodeGenesis
16:00:47.166 fr.inria.lille.repair.nopol.NoPol - statement #8
16:00:47.166 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:68 which is executed by 16 tests
16:00:47.220 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:47.528 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:47.528 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:47.528 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:68.
16:00:47.529 fr.inria.lille.repair.nopol.NoPol - statement #9
16:00:47.529 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:67 which is executed by 16 tests
16:00:47.590 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:47.826 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:47.827 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:47.827 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:67.
16:00:47.827 fr.inria.lille.repair.nopol.NoPol - statement #10
16:00:47.827 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:66 which is executed by 16 tests
16:00:47.888 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:48.096 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:48.096 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:48.096 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:66.
16:00:48.096 fr.inria.lille.repair.nopol.NoPol - statement #11
16:00:48.097 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:65 which is executed by 16 tests
16:00:48.196 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:48.446 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:48.446 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:48.446 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:65.
16:00:48.446 fr.inria.lille.repair.nopol.NoPol - statement #12
16:00:48.446 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:64 which is executed by 16 tests
16:00:48.504 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:48.738 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:48.738 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:48.738 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:64.
16:00:48.738 fr.inria.lille.repair.nopol.NoPol - statement #13
16:00:48.738 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:63 which is executed by 16 tests
16:00:48.795 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:48.989 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:48.989 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:48.989 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:63.
16:00:48.989 fr.inria.lille.repair.nopol.NoPol - statement #14
16:00:48.989 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:62 which is executed by 16 tests
16:00:49.059 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:49.258 tests.output - Failing tests with false: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<[Enteraninteger>0]That'sall,haveaniced...> but was:<[]That'sall,haveaniced...>]
16:00:49.258 tests.output - Failing tests with true: 
[test1(introclassJava.digits_5b504b35_000WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:49.258 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_5b504b35_000:62.
16:00:49.258 fr.inria.lille.repair.nopol.NoPol - statement #15
16:00:49.258 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:61 which is executed by 16 tests
16:00:49.339 fr.inria.lille.repair.nopol.NoPol - statement #16
16:00:49.340 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_5b504b35_000:60 which is executed by 16 tests
16:00:49.405 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:49.415 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:49.415 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:49.415 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 18
16:00:49.415 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 3
16:00:49.415 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
16:00:49.415 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 5
16:00:49.415 fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [14] [== of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2, == of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2]
16:00:49.415 fr.inria.lille.repair.nopol.NoPol -                   class java.lang.Boolean: 14
16:00:49.415 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
16:00:49.415 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 48618ms
16:00:49.415 fr.inria.lille.repair.nopol.NoPol - 
