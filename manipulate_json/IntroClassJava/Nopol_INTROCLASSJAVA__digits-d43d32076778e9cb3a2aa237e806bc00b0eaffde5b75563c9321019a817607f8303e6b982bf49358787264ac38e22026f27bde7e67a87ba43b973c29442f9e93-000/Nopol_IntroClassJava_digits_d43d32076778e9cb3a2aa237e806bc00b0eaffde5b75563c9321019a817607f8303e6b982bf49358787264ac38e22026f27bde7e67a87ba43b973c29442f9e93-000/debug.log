15:59:58.579 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
15:59:58.582 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-d43d32076778e9cb3a2aa237e806bc00b0eaffde5b75563c9321019a817607f8303e6b982bf49358787264ac38e22026f27bde7e67a87ba43b973c29442f9e93-000/Nopol_IntroClassJava_digits_d43d32076778e9cb3a2aa237e806bc00b0eaffde5b75563c9321019a817607f8303e6b982bf49358787264ac38e22026f27bde7e67a87ba43b973c29442f9e93-000/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-d43d32076778e9cb3a2aa237e806bc00b0eaffde5b75563c9321019a817607f8303e6b982bf49358787264ac38e22026f27bde7e67a87ba43b973c29442f9e93-000/Nopol_IntroClassJava_digits_d43d32076778e9cb3a2aa237e806bc00b0eaffde5b75563c9321019a817607f8303e6b982bf49358787264ac38e22026f27bde7e67a87ba43b973c29442f9e93-000/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
15:59:58.582 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
15:59:58.582 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_d43d3207_000BlackboxTest, introclassJava.digits_d43d3207_000WhiteboxTest]
15:59:58.584 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_d43d3207_000BlackboxTest, introclassJava.digits_d43d3207_000WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
15:59:58.585 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
15:59:58.588 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
15:59:58.588 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
15:59:58.588 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
15:59:58.588 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
15:59:58.592 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
15:59:58.592 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:21.797 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:21.799 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d43d3207_000:66 which is executed by 14 tests
16:00:22.093 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:24.063 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): test timed out after 1000 milliseconds]
16:00:24.064 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:24.064 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d43d3207_000:66.
16:00:24.064 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:24.064 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d43d3207_000:65 which is executed by 14 tests
16:00:24.169 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:24.502 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[678]-9That'sall,haveanic...> but was:<Enteraninteger>[]-9That'sall,haveanic...>]
16:00:24.502 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:24.502 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d43d3207_000:65.
16:00:24.503 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:24.503 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d43d3207_000:64 which is executed by 14 tests
16:00:24.593 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:24.861 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[678]-9That'sall,haveanic...> but was:<Enteraninteger>[000]-9That'sall,haveanic...>]
16:00:24.861 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:24.861 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d43d3207_000:64.
16:00:24.897 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:24.897 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d43d3207_000:71 which is executed by 16 tests
16:00:24.989 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:25.186 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:25.186 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:25.186 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d43d3207_000:71.
16:00:25.186 fr.inria.lille.repair.nopol.NoPol - statement #5
16:00:25.186 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d43d3207_000:69 which is executed by 16 tests
16:00:25.275 fr.inria.lille.repair.nopol.NoPol - statement #6
16:00:25.275 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d43d3207_000:68 which is executed by 16 tests
16:00:25.348 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:25.639 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[-6-7-8]>]
16:00:25.639 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:25.639 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d43d3207_000:68.
16:00:25.640 fr.inria.lille.repair.nopol.NoPol - statement #7
16:00:25.640 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d43d3207_000:63 which is executed by 16 tests
16:00:25.725 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:26.069 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[-9876]That'sall,haveaniced...>]
16:00:26.069 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:26.069 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d43d3207_000:63.
16:00:26.070 fr.inria.lille.repair.nopol.NoPol - statement #8
16:00:26.070 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d43d3207_000:62 which is executed by 16 tests
16:00:26.147 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:26.409 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[0]That'sall,haveaniced...>]
16:00:26.409 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:26.409 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d43d3207_000:62.
16:00:26.409 fr.inria.lille.repair.nopol.NoPol - statement #9
16:00:26.409 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d43d3207_000:61 which is executed by 16 tests
16:00:26.507 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:26.703 tests.output - Failing tests with false: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<[Enteraninteger>67]8-9That'sall,haveani...> but was:<[-6-7-]8-9That'sall,haveani...>]
16:00:26.704 tests.output - Failing tests with true: 
[test2(introclassJava.digits_d43d3207_000BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:26.704 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_d43d3207_000:61.
16:00:26.704 fr.inria.lille.repair.nopol.NoPol - statement #10
16:00:26.704 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_d43d3207_000:60 which is executed by 16 tests
16:00:26.781 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:26.794 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:26.794 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:26.794 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 8
16:00:26.794 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
16:00:26.794 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
16:00:26.795 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
16:00:26.795 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
16:00:26.795 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 28203ms
16:00:26.795 fr.inria.lille.repair.nopol.NoPol - 
