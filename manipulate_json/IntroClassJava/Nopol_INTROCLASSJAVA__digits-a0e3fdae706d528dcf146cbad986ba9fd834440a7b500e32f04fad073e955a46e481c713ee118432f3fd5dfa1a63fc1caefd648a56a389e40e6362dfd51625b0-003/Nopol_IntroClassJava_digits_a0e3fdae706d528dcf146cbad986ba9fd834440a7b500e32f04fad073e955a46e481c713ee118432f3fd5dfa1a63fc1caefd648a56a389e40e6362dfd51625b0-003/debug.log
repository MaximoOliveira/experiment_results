15:59:54.873 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
15:59:54.876 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-a0e3fdae706d528dcf146cbad986ba9fd834440a7b500e32f04fad073e955a46e481c713ee118432f3fd5dfa1a63fc1caefd648a56a389e40e6362dfd51625b0-003/Nopol_IntroClassJava_digits_a0e3fdae706d528dcf146cbad986ba9fd834440a7b500e32f04fad073e955a46e481c713ee118432f3fd5dfa1a63fc1caefd648a56a389e40e6362dfd51625b0-003/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-a0e3fdae706d528dcf146cbad986ba9fd834440a7b500e32f04fad073e955a46e481c713ee118432f3fd5dfa1a63fc1caefd648a56a389e40e6362dfd51625b0-003/Nopol_IntroClassJava_digits_a0e3fdae706d528dcf146cbad986ba9fd834440a7b500e32f04fad073e955a46e481c713ee118432f3fd5dfa1a63fc1caefd648a56a389e40e6362dfd51625b0-003/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
15:59:54.876 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
15:59:54.876 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_a0e3fdae_003BlackboxTest, introclassJava.digits_a0e3fdae_003WhiteboxTest]
15:59:54.878 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_a0e3fdae_003BlackboxTest, introclassJava.digits_a0e3fdae_003WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
15:59:54.879 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
15:59:54.881 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
15:59:54.882 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
15:59:54.882 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
15:59:54.882 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
15:59:54.886 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
15:59:54.886 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:14.996 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:14.999 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_a0e3fdae_003:73 which is executed by 16 tests
16:00:15.274 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:16.296 tests.output - Failing tests with false: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:16.296 tests.output - Failing tests with true: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:16.300 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_a0e3fdae_003:73.
16:00:16.301 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:16.301 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_a0e3fdae_003:71 which is executed by 16 tests
16:00:16.391 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:16.719 tests.output - Failing tests with false: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[678-9That'sall,haveaniceday!]> but was:<Enteraninteger>[-6-7-8-9]>]
16:00:16.720 tests.output - Failing tests with true: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:16.720 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_a0e3fdae_003:71.
16:00:16.720 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:16.720 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_a0e3fdae_003:66 which is executed by 16 tests
16:00:16.797 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:17.047 tests.output - Failing tests with false: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:17.047 tests.output - Failing tests with true: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:17.047 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_a0e3fdae_003:66.
16:00:17.047 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:17.047 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_a0e3fdae_003:65 which is executed by 16 tests
16:00:17.135 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:17.453 tests.output - Failing tests with false: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:17.453 tests.output - Failing tests with true: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:17.453 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_a0e3fdae_003:65.
16:00:17.454 fr.inria.lille.repair.nopol.NoPol - statement #5
16:00:17.454 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_a0e3fdae_003:64 which is executed by 16 tests
16:00:17.537 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:17.805 tests.output - Failing tests with false: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:17.805 tests.output - Failing tests with true: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:17.806 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_a0e3fdae_003:64.
16:00:17.806 fr.inria.lille.repair.nopol.NoPol - statement #6
16:00:17.806 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_a0e3fdae_003:63 which is executed by 16 tests
16:00:17.918 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:18.302 tests.output - Failing tests with false: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<[Enteraninteger>0]That'sall,haveaniced...> but was:<[]That'sall,haveaniced...>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<[Enteraninteger>67]8-9That'sall,haveani...> but was:<[-6-7-]8-9That'sall,haveani...>]
16:00:18.302 tests.output - Failing tests with true: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:18.302 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_a0e3fdae_003:63.
16:00:18.302 fr.inria.lille.repair.nopol.NoPol - statement #7
16:00:18.303 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_a0e3fdae_003:62 which is executed by 16 tests
16:00:18.412 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:18.776 tests.output - Failing tests with false: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:18.777 tests.output - Failing tests with true: 
[test1(introclassJava.digits_a0e3fdae_003WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>, test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:18.778 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_a0e3fdae_003:62.
16:00:18.778 fr.inria.lille.repair.nopol.NoPol - statement #8
16:00:18.778 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_a0e3fdae_003:61 which is executed by 16 tests
16:00:18.880 fr.inria.lille.repair.nopol.NoPol - statement #9
16:00:18.885 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_a0e3fdae_003:60 which is executed by 16 tests
16:00:18.970 fr.inria.lille.repair.nopol.NoPol - statement #10
16:00:18.970 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_a0e3fdae_003:69 which is executed by 15 tests
16:00:19.062 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:20.346 tests.output - Failing tests with false: 
[test2(introclassJava.digits_a0e3fdae_003BlackboxTest): test timed out after 1000 milliseconds]
16:00:20.346 tests.output - Failing tests with true: 
[test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:20.347 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_a0e3fdae_003:69.
16:00:20.348 fr.inria.lille.repair.nopol.NoPol - statement #11
16:00:20.348 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_a0e3fdae_003:68 which is executed by 15 tests
16:00:20.432 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:20.737 tests.output - Failing tests with false: 
[test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:20.737 tests.output - Failing tests with true: 
[test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:20.737 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_a0e3fdae_003:68.
16:00:20.737 fr.inria.lille.repair.nopol.NoPol - statement #12
16:00:20.737 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_a0e3fdae_003:67 which is executed by 15 tests
16:00:20.809 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:21.102 tests.output - Failing tests with false: 
[test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[678-9]That'sall,haveaniced...> but was:<Enteraninteger>[0000]That'sall,haveaniced...>]
16:00:21.102 tests.output - Failing tests with true: 
[test2(introclassJava.digits_a0e3fdae_003BlackboxTest): expected:<Enteraninteger>[67]8-9That'sall,haveani...> but was:<Enteraninteger>[-6-7-]8-9That'sall,haveani...>]
16:00:21.102 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_a0e3fdae_003:67.
16:00:21.103 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:21.108 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:21.108 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:21.108 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 10
16:00:21.108 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
16:00:21.108 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
16:00:21.109 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
16:00:21.109 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
16:00:21.109 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 26230ms
16:00:21.109 fr.inria.lille.repair.nopol.NoPol - 
