15:59:59.682 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
15:59:59.684 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__median-317aa7055d3b7337ab43b73863692d1288ca246c473f9fd176bc737a7c3e1e08c37a15603cfb7bfc86f7bc2dcc239967b79b605aec11f86ae3ab90dc140b540f-003/Nopol_IntroClassJava_median_317aa7055d3b7337ab43b73863692d1288ca246c473f9fd176bc737a7c3e1e08c37a15603cfb7bfc86f7bc2dcc239967b79b605aec11f86ae3ab90dc140b540f-003/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__median-317aa7055d3b7337ab43b73863692d1288ca246c473f9fd176bc737a7c3e1e08c37a15603cfb7bfc86f7bc2dcc239967b79b605aec11f86ae3ab90dc140b540f-003/Nopol_IntroClassJava_median_317aa7055d3b7337ab43b73863692d1288ca246c473f9fd176bc737a7c3e1e08c37a15603cfb7bfc86f7bc2dcc239967b79b605aec11f86ae3ab90dc140b540f-003/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
15:59:59.684 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
15:59:59.685 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.median_317aa705_003BlackboxTest, introclassJava.median_317aa705_003WhiteboxTest]
15:59:59.687 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.median_317aa705_003BlackboxTest, introclassJava.median_317aa705_003WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
15:59:59.687 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
15:59:59.690 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
15:59:59.690 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
15:59:59.690 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
15:59:59.690 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
15:59:59.694 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
15:59:59.694 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:05.592 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:05.595 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.median_317aa705_003:79 which is executed by 13 tests
16:00:05.882 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:07.060 tests.output - Failing tests with false: 
[test1(introclassJava.median_317aa705_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0isthemedian]> but was:<...rsseparatedbyspaces>[]>, test3(introclassJava.median_317aa705_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0isthemedian]> but was:<...rsseparatedbyspaces>[]>, test4(introclassJava.median_317aa705_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0isthemedian]> but was:<...rsseparatedbyspaces>[]>, test7(introclassJava.median_317aa705_003BlackboxTest): expected:<...rsseparatedbyspaces>[9isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:07.060 tests.output - Failing tests with true: 
[test1(introclassJava.median_317aa705_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0isthemedian]> but was:<...rsseparatedbyspaces>[]>, test3(introclassJava.median_317aa705_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0isthemedian]> but was:<...rsseparatedbyspaces>[]>, test4(introclassJava.median_317aa705_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0isthemedian]> but was:<...rsseparatedbyspaces>[]>, test7(introclassJava.median_317aa705_003BlackboxTest): expected:<...rsseparatedbyspaces>[9isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:07.060 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.median_317aa705_003:79.
16:00:07.061 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:07.061 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.median_317aa705_003:74 which is executed by 13 tests
16:00:07.175 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:07.580 tests.output - Failing tests with false: 
[test1(introclassJava.median_317aa705_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0isthemedian]> but was:<...rsseparatedbyspaces>[]>, test3(introclassJava.median_317aa705_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0isthemedian]> but was:<...rsseparatedbyspaces>[]>, test4(introclassJava.median_317aa705_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0isthemedian]> but was:<...rsseparatedbyspaces>[]>, test7(introclassJava.median_317aa705_003BlackboxTest): expected:<...rsseparatedbyspaces>[9isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:07.580 tests.output - Failing tests with true: 
[test1(introclassJava.median_317aa705_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0isthemedian]> but was:<...rsseparatedbyspaces>[]>, test3(introclassJava.median_317aa705_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0isthemedian]> but was:<...rsseparatedbyspaces>[]>, test4(introclassJava.median_317aa705_003WhiteboxTest): expected:<...rsseparatedbyspaces>[0isthemedian]> but was:<...rsseparatedbyspaces>[]>, test7(introclassJava.median_317aa705_003BlackboxTest): expected:<...rsseparatedbyspaces>[9isthemedian]> but was:<...rsseparatedbyspaces>[]>]
16:00:07.581 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.median_317aa705_003:74.
16:00:07.581 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:08.279 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
16:00:08.393 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:08.510 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:08.845 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:09.656 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:10.650 f.i.l.c.s.ConstraintBasedSynthesis - Successful code synthesis: !((((a.value < b.value)) && ((a.value < c.value))) || (((a.value > b.value)) && ((a.value > c.value))))
16:00:10.651 f.i.l.repair.nopol.patch.TestPatch - Applying patch: introclassJava.median_317aa705_003:74: CONDITIONAL !((((a.value < b.value)) && ((a.value < c.value))) || (((a.value > b.value)) && ((a.value > c.value))))
16:00:10.834 f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "!((((a.value < b.value)) && ((a.value < c.value))) || (((a.value > b.value)) && ((a.value > c.value))))" is working
16:00:10.885 fr.inria.lille.repair.nopol.NoPol - Skipped -9 patches for sake of performance
16:00:10.886 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:10.888 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:10.888 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:10.888 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 3
16:00:10.888 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
16:00:10.888 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 7
16:00:10.888 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 5
16:00:10.888 fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [14] [== of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2, == of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2]
16:00:10.889 fr.inria.lille.repair.nopol.NoPol -                   class java.lang.Boolean: 14
16:00:10.889 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 19
16:00:10.889 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 11205ms
16:00:10.889 fr.inria.lille.repair.nopol.NoPol - 
16:00:10.889 fr.inria.lille.repair.nopol.NoPol - ----PATCH FOUND----
16:00:10.889 fr.inria.lille.repair.nopol.NoPol - !((((a.value < b.value)) && ((a.value < c.value))) || (((a.value > b.value)) && ((a.value > c.value))))
16:00:10.890 fr.inria.lille.repair.nopol.NoPol - Nb test that executes the patch: 13
16:00:10.890 fr.inria.lille.repair.nopol.NoPol - introclassJava.median_317aa705_003:74: CONDITIONAL
16:00:10.903 fr.inria.lille.repair.nopol.NoPol - --- a/src/main/java/introclassJava/median_317aa705_003.java
+++ b/src/main/java/introclassJava/median_317aa705_003.java
@@ -73,4 +73,3 @@
         }
-        if ((a.value > b.value && a.value < c.value)
-                || (a.value < b.value && a.value > c.value)) {
+        if (!((((a.value < b.value)) && ((a.value < c.value))) || (((a.value > b.value)) && ((a.value > c.value))))) {
             output += (String.format ("%d is the median", a.value));

