16:00:02.748 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
16:00:02.750 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__median-36d8008b13f6475ca8fa4553fea10042b0a6c623665065672051445c3464d61b29b47cb66321844a0264505a0f5ccf5aa6de072aa266b5a8b0cf13198380a389-000/Nopol_IntroClassJava_median_36d8008b13f6475ca8fa4553fea10042b0a6c623665065672051445c3464d61b29b47cb66321844a0264505a0f5ccf5aa6de072aa266b5a8b0cf13198380a389-000/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__median-36d8008b13f6475ca8fa4553fea10042b0a6c623665065672051445c3464d61b29b47cb66321844a0264505a0f5ccf5aa6de072aa266b5a8b0cf13198380a389-000/Nopol_IntroClassJava_median_36d8008b13f6475ca8fa4553fea10042b0a6c623665065672051445c3464d61b29b47cb66321844a0264505a0f5ccf5aa6de072aa266b5a8b0cf13198380a389-000/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
16:00:02.750 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
16:00:02.750 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.median_36d8008b_000BlackboxTest, introclassJava.median_36d8008b_000WhiteboxTest]
16:00:02.752 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.median_36d8008b_000BlackboxTest, introclassJava.median_36d8008b_000WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
16:00:02.753 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
16:00:02.756 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
16:00:02.756 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
16:00:02.756 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
16:00:02.756 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
16:00:02.760 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
16:00:02.760 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:24.556 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:24.560 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.median_36d8008b_000:74 which is executed by 8 tests
16:00:24.915 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:26.532 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
16:00:26.584 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:26.654 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:26.787 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:27.128 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:35.342 f.i.l.c.s.ConstraintBasedSynthesis - Failed code synthesis, returning NullCodeGenesis
16:00:35.343 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:35.343 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.median_36d8008b_000:70 which is executed by 11 tests
16:00:35.469 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:36.103 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
16:00:36.130 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:36.218 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:36.593 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:36.908 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:37.157 f.i.l.c.s.ConstraintBasedSynthesis - Successful code synthesis: (((b.value < a.value)) || ((b.value > a.value))) || (!((a!=null) && ((b.value < c.value))))
16:00:37.158 f.i.l.repair.nopol.patch.TestPatch - Applying patch: introclassJava.median_36d8008b_000:70: PRECONDITION (((b.value < a.value)) || ((b.value > a.value))) || (!((a!=null) && ((b.value < c.value))))
16:00:37.343 f.i.l.repair.nopol.patch.TestPatch - Running test suite to check the patch "(((b.value < a.value)) || ((b.value > a.value))) || (!((a!=null) && ((b.value < c.value))))" is working
16:00:37.474 fr.inria.lille.repair.nopol.NoPol - Skipped -9 patches for sake of performance
16:00:37.475 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:37.481 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:37.481 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:37.481 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 2
16:00:37.481 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 2
16:00:37.481 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 6
16:00:37.481 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 5
16:00:37.481 fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [14] [== of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2, == of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2]
16:00:37.481 fr.inria.lille.repair.nopol.NoPol -                   class java.lang.Boolean: 14
16:00:37.481 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 20
16:00:37.481 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 34729ms
16:00:37.481 fr.inria.lille.repair.nopol.NoPol - 
16:00:37.481 fr.inria.lille.repair.nopol.NoPol - ----PATCH FOUND----
16:00:37.481 fr.inria.lille.repair.nopol.NoPol - (((b.value < a.value)) || ((b.value > a.value))) || (!((a!=null) && ((b.value < c.value))))
16:00:37.482 fr.inria.lille.repair.nopol.NoPol - Nb test that executes the patch: 11
16:00:37.482 fr.inria.lille.repair.nopol.NoPol - introclassJava.median_36d8008b_000:70: PRECONDITION
16:00:37.496 fr.inria.lille.repair.nopol.NoPol - --- a/src/main/java/introclassJava/median_36d8008b_000.java
+++ b/src/main/java/introclassJava/median_36d8008b_000.java
@@ -69,7 +69,11 @@
             d.value = a.value;
-        } else if (b.value > a.value && b.value < c.value || b.value < a.value
-                   && b.value > c.value) {
-            d.value = b.value;
         } else {
-            d.value = c.value;
+            if ((((b.value < a.value)) || ((b.value > a.value))) || (!((a!=null) && ((b.value < c.value))))) {
+                if (b.value > a.value && b.value < c.value || b.value < a.value
+                && b.value > c.value) {
+                    d.value = b.value;
+                } else {
+                    d.value = c.value;
+                }
+            }
         }

