15:59:59.772 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
15:59:59.774 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-e79f832ff314d3658c07e164d7866db707eafc8c97f209cf1d5cdb3b0cfc6738e7bd533c426a4887122d853ffa152b8861f30c41642a180152ba50c983de66dc-002/Nopol_IntroClassJava_digits_e79f832ff314d3658c07e164d7866db707eafc8c97f209cf1d5cdb3b0cfc6738e7bd533c426a4887122d853ffa152b8861f30c41642a180152ba50c983de66dc-002/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_INTROCLASSJAVA__digits-e79f832ff314d3658c07e164d7866db707eafc8c97f209cf1d5cdb3b0cfc6738e7bd533c426a4887122d853ffa152b8861f30c41642a180152ba50c983de66dc-002/Nopol_IntroClassJava_digits_e79f832ff314d3658c07e164d7866db707eafc8c97f209cf1d5cdb3b0cfc6738e7bd533c426a4887122d853ffa152b8861f30c41642a180152ba50c983de66dc-002/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
15:59:59.774 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
15:59:59.774 fr.inria.lille.repair.nopol.NoPol - Args: [introclassJava.digits_e79f832f_002BlackboxTest, introclassJava.digits_e79f832f_002WhiteboxTest]
15:59:59.776 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[introclassJava.digits_e79f832f_002BlackboxTest, introclassJava.digits_e79f832f_002WhiteboxTest], complianceLevel=7, outputFolder=., json=true}
15:59:59.777 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
15:59:59.779 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
15:59:59.780 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
15:59:59.780 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
15:59:59.780 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
15:59:59.783 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
15:59:59.784 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
16:00:21.773 fr.inria.lille.repair.nopol.NoPol - statement #1
16:00:21.778 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_e79f832f_002:80 which is executed by 15 tests
16:00:22.096 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:23.064 tests.output - Failing tests with false: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
16:00:23.065 tests.output - Failing tests with true: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:23.065 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_e79f832f_002:80.
16:00:23.074 fr.inria.lille.repair.nopol.NoPol - statement #2
16:00:23.074 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_e79f832f_002:75 which is executed by 15 tests
16:00:23.181 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:23.500 tests.output - Failing tests with false: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:23.500 tests.output - Failing tests with true: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:23.501 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_e79f832f_002:75.
16:00:23.501 fr.inria.lille.repair.nopol.NoPol - statement #3
16:00:23.501 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_e79f832f_002:83 which is executed by 16 tests
16:00:23.600 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:23.911 tests.output - Failing tests with false: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:23.911 tests.output - Failing tests with true: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:23.912 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_e79f832f_002:83.
16:00:23.912 fr.inria.lille.repair.nopol.NoPol - statement #4
16:00:23.912 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_e79f832f_002:64 which is executed by 16 tests
16:00:24.012 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:24.268 tests.output - Failing tests with false: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<Enteraninteger>[0That'sall,haveaniceday!]> but was:<Enteraninteger>[]>]
16:00:24.269 tests.output - Failing tests with true: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:24.269 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_e79f832f_002:64.
16:00:24.269 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
16:00:24.969 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
16:00:25.018 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:25.073 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:25.246 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
16:00:25.707 f.i.l.c.s.ConstraintBasedSynthesis - Operators:
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
== of arity: 2
!= of arity: 2
< of arity: 2
<= of arity: 2
! of arity: 1
|| of arity: 2
&& of arity: 2
16:00:34.864 f.i.l.c.s.ConstraintBasedSynthesis - Failed code synthesis, returning NullCodeGenesis
16:00:34.865 fr.inria.lille.repair.nopol.NoPol - statement #5
16:00:34.865 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_e79f832f_002:63 which is executed by 16 tests
16:00:34.974 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:35.247 tests.output - Failing tests with false: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:35.247 tests.output - Failing tests with true: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:35.247 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_e79f832f_002:63.
16:00:35.247 fr.inria.lille.repair.nopol.NoPol - statement #6
16:00:35.247 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_e79f832f_002:62 which is executed by 16 tests
16:00:35.332 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:35.604 tests.output - Failing tests with false: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:35.605 tests.output - Failing tests with true: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:35.605 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_e79f832f_002:62.
16:00:35.605 fr.inria.lille.repair.nopol.NoPol - statement #7
16:00:35.605 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_e79f832f_002:61 which is executed by 16 tests
16:00:35.680 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
16:00:35.932 tests.output - Failing tests with false: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<[Enteraninteger>0]That'sall,haveaniced...> but was:<[]That'sall,haveaniced...>]
16:00:35.933 tests.output - Failing tests with true: 
[test1(introclassJava.digits_e79f832f_002WhiteboxTest): expected:<Enteraninteger>[0]That'sall,haveaniced...> but was:<Enteraninteger>[]That'sall,haveaniced...>]
16:00:35.933 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation introclassJava.digits_e79f832f_002:61.
16:00:35.933 fr.inria.lille.repair.nopol.NoPol - statement #8
16:00:35.933 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation introclassJava.digits_e79f832f_002:60 which is executed by 16 tests
16:00:36.004 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
16:00:36.010 fr.inria.lille.repair.nopol.NoPol - Nb classes : 6
16:00:36.010 fr.inria.lille.repair.nopol.NoPol - Nb methods : 2
16:00:36.010 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 8
16:00:36.010 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 1
16:00:36.010 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
16:00:36.010 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 5
16:00:36.010 fr.inria.lille.repair.nopol.NoPol - Nb SMT components: [14] [== of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2, == of arity: 2, != of arity: 2, < of arity: 2, <= of arity: 2, ! of arity: 1, || of arity: 2, && of arity: 2]
16:00:36.010 fr.inria.lille.repair.nopol.NoPol -                   class java.lang.Boolean: 14
16:00:36.010 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
16:00:36.010 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 36234ms
16:00:36.010 fr.inria.lille.repair.nopol.NoPol - 
