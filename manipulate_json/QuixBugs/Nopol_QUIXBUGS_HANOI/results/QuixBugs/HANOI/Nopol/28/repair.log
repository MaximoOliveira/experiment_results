cd /users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_HANOI/Nopol_QuixBugs_HANOI_;
export JAVA_TOOL_OPTIONS="-Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en";
TZ="America/New_York"; export TZ;
export PATH="/usr/lib/jvm/java-1.8.0-openjdk/bin:$PATH";
export JAVA_HOME="/usr/lib/jvm/java-1.8.0-openjdk/bin";
time java -Xmx4g -Xms1g -cp /users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar:/usr/lib/jvm/java-1.8.0-openjdk/bin/../lib/tools.jar fr.inria.lille.repair.Main \
	--mode repair \
	--type pre_then_cond \
	--oracle angelic \
	--synthesis smt \
	--flocal gzoltar \
	--json \
	--solver z3 \
	--solver-path /users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3 \
	--complianceLevel 8 \
	--source src/main/java \
	--classpath "target/classes:target/test-classes:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar";
	echo "\n\nNode: `hostname`\n";
	echo "\n\nDate: `date`\n";
Picked up JAVA_TOOL_OPTIONS: -Dfile.encoding=UTF8 -Duser.language=en-US -Duser.country=US -Duser.language=en
10:00:42.873 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
10:00:42.877 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_HANOI/Nopol_QuixBugs_HANOI_/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_HANOI/Nopol_QuixBugs_HANOI_/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
10:00:42.877 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
10:00:42.877 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Args: [java_testcases.junit.HANOI_Test]
10:00:42.879 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[java_testcases.junit.HANOI_Test], complianceLevel=8, outputFolder=., json=true}
10:00:42.880 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
10:00:42.887 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
10:00:42.887 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
10:00:42.887 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
10:00:42.887 [main] INFO  fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
10:00:42.894 [main] INFO  fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
10:00:42.894 [main] INFO  fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
10:00:50.017 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #1
10:00:50.019 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:31 which is executed by 7 tests
68507408
10:00:50.249 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #2
10:00:50.249 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:28 which is executed by 7 tests
68507408
10:00:50.364 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:00:51.720 [pool-3-thread-1] DEBUG tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[1,3],[1,2]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2]]]>]
10:00:51.720 [pool-3-thread-1] DEBUG tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
10:00:51.721 [pool-3-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:28.
10:00:51.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #3
10:00:51.721 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:27 which is executed by 7 tests
68507408
10:00:51.808 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:00:52.089 [pool-19-thread-1] DEBUG tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[[1,3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[[1,3]]]> but was:<[[]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,3],[2,3]]]> but was:<[[]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[[3,2],[3,1],[2,1]]]> but was:<[[]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[[1,3],[1,2],[3,2]]]> but was:<[[]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,1],[2,1]]]> but was:<[[]]>]
10:00:52.090 [pool-19-thread-1] DEBUG tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
10:00:52.090 [pool-19-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:27.
10:00:52.091 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #4
10:00:52.092 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:26 which is executed by 7 tests
68507408
10:00:52.186 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:00:52.643 [pool-35-thread-1] DEBUG tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,2],[[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,2],[[2,1],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,2],[[1,3],[2,3]]]> but was:<[[1,2],[[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,2],[[3,1],[2,1]]]> but was:<[[3,2],[[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,3],[[1,2],[3,2]]]> but was:<[[1,3],[[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,2],[[1,1],[2,1]]]> but was:<[[1,2],[[2,3]]]>]
10:00:52.643 [pool-35-thread-1] DEBUG tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
10:00:52.643 [pool-35-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:26.
10:00:52.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #5
10:00:52.644 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:25 which is executed by 7 tests
68507408
10:00:52.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #6
10:00:52.719 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:24 which is executed by 7 tests
68507408
10:00:52.806 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:00:53.222 [pool-51-thread-1] DEBUG tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,2],[2,1],[1,2],[2,1],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,2],[1,[3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,2],[1,[2],[2,1],[1,2],[2,1],[2,1],[1,2],[1,2],[2,1],[2,1],[1,2],[2,1],[1,2],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,2],[1,[3],[2,3]]]> but was:<[[1,2],[1,[2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,1],[1,2]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,2],[2,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,2],[1,[1]],[2,1]]> but was:<[[1,2],[1,[2]],[2,1]]>]
10:00:53.223 [pool-51-thread-1] DEBUG tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
10:00:53.223 [pool-51-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:24.
10:00:53.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #7
10:00:53.223 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:23 which is executed by 7 tests
68507408
10:00:53.313 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:00:53.619 [pool-67-thread-1] DEBUG tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[1],[1,2],[2,2],[1,1],[1,2],[1,1],[1,1]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,2],[1,[3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,2],[1,[1],[1,1],[1,2],[2,1],[2,2],[2,2],[1,1],[1,1],[1,2],[2,2],[1,1],[1,2],[1,1],[1,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[1]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,2],[1,[3],[2,3]]]> but was:<[[1,2],[1,[1],[1,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,2]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,1],[1,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[1],[1,2],[2,2]]]>]
10:00:53.620 [pool-67-thread-1] DEBUG tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
10:00:53.620 [pool-67-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:23.
10:00:53.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #8
10:00:53.620 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:22 which is executed by 7 tests
68507408
10:00:53.681 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:00:54.196 [pool-83-thread-1] DEBUG tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): null, test_3(java_testcases.junit.HANOI_Test): null, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): null, test_6(java_testcases.junit.HANOI_Test): null, test_4(java_testcases.junit.HANOI_Test): null, test_5(java_testcases.junit.HANOI_Test): null]
10:00:54.196 [pool-83-thread-1] DEBUG tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
10:00:54.197 [pool-83-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:22.
10:00:54.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #9
10:00:54.197 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:21 which is executed by 7 tests
68507408
10:00:54.276 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:00:54.559 [pool-99-thread-1] DEBUG tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): null, test_3(java_testcases.junit.HANOI_Test): null, test_0(java_testcases.junit.HANOI_Test): null, test_1(java_testcases.junit.HANOI_Test): null, test_6(java_testcases.junit.HANOI_Test): null, test_4(java_testcases.junit.HANOI_Test): null, test_5(java_testcases.junit.HANOI_Test): null]
10:00:54.559 [pool-99-thread-1] DEBUG tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
10:00:54.559 [pool-99-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:21.
10:00:54.564 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #10
10:00:54.564 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:20 which is executed by 7 tests
68507408
10:00:54.640 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:00:55.095 [pool-115-thread-1] DEBUG tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): null, test_3(java_testcases.junit.HANOI_Test): null, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): null, test_6(java_testcases.junit.HANOI_Test): null, test_4(java_testcases.junit.HANOI_Test): null, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
10:00:55.095 [pool-115-thread-1] DEBUG tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
10:00:55.095 [pool-115-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:20.
10:00:55.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #11
10:00:55.096 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:19 which is executed by 7 tests
68507408
10:00:55.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #12
10:00:55.163 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:18 which is executed by 7 tests
68507408
10:00:55.230 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:00:55.640 [pool-131-thread-1] DEBUG tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[[1,3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[[1,3]]]> but was:<[[]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,3],[2,3]]]> but was:<[[]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[[3,2],[3,1],[2,1]]]> but was:<[[]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[[1,3],[1,2],[3,2]]]> but was:<[[]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,1],[2,1]]]> but was:<[[]]>]
10:00:55.641 [pool-131-thread-1] DEBUG tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[1,[2],[1,3],[3,1],[1,2],[2,3],[2,1],[1,2]]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1],[1,3],[3,2],[3,1],[1,3],[1,2],[2,1],[2,3],[3,2],[2,1],[1,3],[1,2],[2,1]]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[1,[3]]]> but was:<[[1,[2]]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,3],[2,3]]]> but was:<[[1,[3],[1,2],[2,1]]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[3,[2],[3,1],[2,1]]]> but was:<[[3,[1],[3,2],[2,3]]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[1,[3],[1,2],[3,2]]]> but was:<[[1,[2],[1,3],[3,1]]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[1,[2],[1,1],[2,1]]]> but was:<[[1,[3],[1,2],[2,3]]]>]
10:00:55.641 [pool-131-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:18.
10:00:55.641 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
10:01:14.205 [pool-147-thread-1] DEBUG tests.output - Failing tests with false: 
[test_2(java_testcases.junit.HANOI_Test): expected:<[[[1,3],[1,2],[3,2],[1,3],[2,1],[2,3],[1,3]]]> but was:<[[]]>, test_3(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,3],[2,3],[1,2],[3,1],[3,2],[1,2],[1,3],[2,3],[2,1],[3,1],[2,3],[1,2],[1,3],[2,3]]]> but was:<[[]]>, test_0(java_testcases.junit.HANOI_Test): expected:<[[[1,3]]]> but was:<[[]]>, test_1(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,3],[2,3]]]> but was:<[[]]>, test_6(java_testcases.junit.HANOI_Test): expected:<[[[3,2],[3,1],[2,1]]]> but was:<[[]]>, test_4(java_testcases.junit.HANOI_Test): expected:<[[[1,3],[1,2],[3,2]]]> but was:<[[]]>, test_5(java_testcases.junit.HANOI_Test): expected:<[[[1,2],[1,1],[2,1]]]> but was:<[[]]>]
10:01:14.205 [pool-147-thread-1] DEBUG tests.output - Failing tests with true: 
[test_2(java_testcases.junit.HANOI_Test): null, test_3(java_testcases.junit.HANOI_Test): test timed out after 3000 milliseconds, test_0(java_testcases.junit.HANOI_Test): test timed out after 3000 milliseconds, test_1(java_testcases.junit.HANOI_Test): test timed out after 3000 milliseconds, test_6(java_testcases.junit.HANOI_Test): test timed out after 3000 milliseconds, test_4(java_testcases.junit.HANOI_Test): test timed out after 3000 milliseconds, test_5(java_testcases.junit.HANOI_Test): test timed out after 3000 milliseconds]
10:01:14.205 [pool-147-thread-1] INFO  f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.HANOI:18.
10:01:14.205 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #13
10:01:14.206 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI:16 which is executed by 7 tests
68507408
10:01:14.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #14
10:01:14.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:44 which is executed by 7 tests
10:01:14.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:44
10:01:14.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #15
10:01:14.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:41 which is executed by 7 tests
10:01:14.623 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:41
10:01:14.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #16
10:01:14.635 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:38 which is executed by 7 tests
10:01:14.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:38
10:01:14.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #17
10:01:14.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:37 which is executed by 7 tests
10:01:14.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:37
10:01:14.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #18
10:01:14.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:35 which is executed by 7 tests
10:01:14.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:35
10:01:14.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #19
10:01:14.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:32 which is executed by 7 tests
10:01:14.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:32
10:01:14.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #20
10:01:14.636 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:31 which is executed by 7 tests
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:31
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #21
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:30 which is executed by 7 tests
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:30
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #22
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:29 which is executed by 7 tests
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:29
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #23
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:28 which is executed by 7 tests
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:28
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #24
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:27 which is executed by 7 tests
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:27
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #25
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:26 which is executed by 7 tests
10:01:14.637 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:26
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #26
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:22 which is executed by 7 tests
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:22
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #27
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:21 which is executed by 7 tests
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:21
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #28
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:16 which is executed by 7 tests
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:16
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #29
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:15 which is executed by 7 tests
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:15
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #30
10:01:14.638 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:14 which is executed by 7 tests
10:01:14.642 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:14
10:01:14.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - statement #31
10:01:14.643 [pool-2-thread-1] DEBUG fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.HANOI$Pair:62 which is executed by 7 tests
68507408
10:01:15.058 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
10:01:15.090 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb classes : 3
10:01:15.090 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb methods : 9
10:01:15.090 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 10
10:01:15.090 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
10:01:15.090 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
10:01:15.091 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
10:01:15.101 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
10:01:15.102 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 32187ms
10:01:15.102 [pool-2-thread-1] INFO  fr.inria.lille.repair.nopol.NoPol - 
NO_ANGELIC_VALUE

real	0m33.381s
user	0m28.034s
sys	0m4.414s
\n\nNode: hpc060.ncg.ingrid.pt\n
\n\nDate: Sat Apr  3 10:01:15 EDT 2021\n
