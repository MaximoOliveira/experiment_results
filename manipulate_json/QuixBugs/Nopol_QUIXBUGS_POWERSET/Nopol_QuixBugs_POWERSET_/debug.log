10:00:50.786 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
10:00:50.793 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_POWERSET/Nopol_QuixBugs_POWERSET_/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_POWERSET/Nopol_QuixBugs_POWERSET_/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
10:00:50.793 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
10:00:50.794 fr.inria.lille.repair.nopol.NoPol - Args: [java_testcases.junit.POWERSET_Test]
10:00:50.796 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[java_testcases.junit.POWERSET_Test], complianceLevel=8, outputFolder=., json=true}
10:00:50.797 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
10:00:50.799 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
10:00:50.800 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
10:00:50.800 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
10:00:50.800 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
10:00:50.806 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
10:00:50.806 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
10:01:03.854 fr.inria.lille.repair.nopol.NoPol - statement #1
10:01:03.857 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:57 which is executed by 4 tests
10:01:03.858 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:57
10:01:03.858 fr.inria.lille.repair.nopol.NoPol - statement #2
10:01:03.858 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:52 which is executed by 4 tests
10:01:03.858 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:52
10:01:03.858 fr.inria.lille.repair.nopol.NoPol - statement #3
10:01:03.858 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:50 which is executed by 4 tests
10:01:03.858 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:50
10:01:03.858 fr.inria.lille.repair.nopol.NoPol - statement #4
10:01:03.859 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:44 which is executed by 4 tests
10:01:03.859 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:44
10:01:03.859 fr.inria.lille.repair.nopol.NoPol - statement #5
10:01:03.859 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:39 which is executed by 4 tests
10:01:03.859 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:39
10:01:03.859 fr.inria.lille.repair.nopol.NoPol - statement #6
10:01:03.859 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:38 which is executed by 4 tests
10:01:03.859 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:38
10:01:03.859 fr.inria.lille.repair.nopol.NoPol - statement #7
10:01:03.859 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:37 which is executed by 4 tests
10:01:03.859 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:37
10:01:03.859 fr.inria.lille.repair.nopol.NoPol - statement #8
10:01:03.860 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:29 which is executed by 4 tests
10:01:04.019 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:04.792 x.java.compiler.DynamicClassCompiler - [Compilation errors]
POWERSET.java:41: error: missing return statement
    }
    ^
Note: POWERSET.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
10:01:04.800 f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class POWERSET {
    public static java.util.ArrayList<java.util.ArrayList> powerset(java.util.ArrayList arr) {
        if (!arr.isEmpty()) {
            java.lang.Object first = arr.get(0);
            arr.remove(0);
            java.util.ArrayList rest = arr;
            java.util.ArrayList<java.util.ArrayList> rest_subsets = java_programs.POWERSET.powerset(rest);
            java.util.ArrayList<java.util.ArrayList> output = new java.util.ArrayList<java.util.ArrayList>(100);
            java.util.ArrayList to_add = new java.util.ArrayList(100);
            to_add.add(first);
            for (java.util.ArrayList subset : rest_subsets) {
                to_add.addAll(subset);
            }
            output.add(to_add);
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("output",output);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("arr",arr);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rest",rest);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("rest_subsets",rest_subsets);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("to_add",to_add);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("first",first);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
            }
            if (runtimeAngelicValue)
                return output;

        } else {
            java.util.ArrayList empty_set = new java.util.ArrayList<java.util.ArrayList>();
            empty_set.add(new java.util.ArrayList());
            return empty_set;
        }
    }
}
10:01:04.800 fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:01:04.800 fr.inria.lille.repair.nopol.NoPol - statement #9
10:01:04.800 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:27 which is executed by 4 tests
10:01:04.880 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:05.236 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[x,df,z,m]]]> but was:<[[]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[a]]]> but was:<[[]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[a,b,c]]]> but was:<[[]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[a,b]]]> but was:<[[]]>]
10:01:05.236 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[]x,df,z,m]]> but was:<[[[]x,df,z,m]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[]a,b,c]]> but was:<[[[]a,b,c]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[]a,b]]> but was:<[[[]a,b]]>]
10:01:05.236 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:27.
10:01:05.236 fr.inria.lille.repair.nopol.NoPol - statement #10
10:01:05.236 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:26 which is executed by 4 tests
10:01:05.299 fr.inria.lille.repair.nopol.NoPol - statement #11
10:01:05.299 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:25 which is executed by 4 tests
10:01:05.370 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:05.646 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[x,df,z,m]]]> but was:<[[[x]]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[a,b,c]]]> but was:<[[[a]]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[a,b]]]> but was:<[[[a]]]>]
10:01:05.646 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[]x,df,z,m]]> but was:<[[[]x,df,z,m]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[]a,b,c]]> but was:<[[[]a,b,c]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[]a,b]]> but was:<[[[]a,b]]>]
10:01:05.646 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:25.
10:01:05.646 fr.inria.lille.repair.nopol.NoPol - statement #12
10:01:05.647 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:24 which is executed by 4 tests
10:01:05.716 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:06.069 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[x,df,z,m]]]> but was:<[[[x]]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[a,b,c]]]> but was:<[[[a]]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[a,b]]]> but was:<[[[a]]]>]
10:01:06.070 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[]x,df,z,m]]> but was:<[[[]x,df,z,m]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[]a,b,c]]> but was:<[[[]a,b,c]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[]a,b]]> but was:<[[[]a,b]]>]
10:01:06.070 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:24.
10:01:06.070 fr.inria.lille.repair.nopol.NoPol - statement #13
10:01:06.070 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:23 which is executed by 4 tests
10:01:06.133 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:06.599 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[][,[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[x,df,z,m]]]> but was:<[[][]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[][,[a]]]> but was:<[[][]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[][,[c],[b],[b,c],[a],[a,c],[a,b],[a,b,c]]]> but was:<[[][]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[][,[b],[a],[a,b]]]> but was:<[[][]]>]
10:01:06.599 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[]x,df,z,m]]> but was:<[[[]x,df,z,m]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[]a,b,c]]> but was:<[[[]a,b,c]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[]a,b]]> but was:<[[[]a,b]]>]
10:01:06.600 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:23.
10:01:06.600 fr.inria.lille.repair.nopol.NoPol - statement #14
10:01:06.600 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:22 which is executed by 4 tests
10:01:06.657 fr.inria.lille.repair.nopol.NoPol - statement #15
10:01:06.657 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:21 which is executed by 4 tests
10:01:06.755 fr.inria.lille.repair.nopol.NoPol - statement #16
10:01:06.756 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:19 which is executed by 4 tests
10:01:06.829 fr.inria.lille.repair.nopol.NoPol - statement #17
10:01:06.834 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:18 which is executed by 4 tests
10:01:06.926 fr.inria.lille.repair.nopol.NoPol - statement #18
10:01:06.927 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:17 which is executed by 4 tests
10:01:06.983 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:28.651 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): null, test_2(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds, test_0(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds, test_1(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds]
10:01:28.655 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds, test_2(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds, test_0(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds, test_1(java_testcases.junit.POWERSET_Test): test timed out after 3000 milliseconds]
10:01:28.656 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:17.
10:01:28.656 fr.inria.lille.repair.nopol.NoPol - statement #19
10:01:28.656 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:16 which is executed by 4 tests
10:01:29.022 fr.inria.lille.repair.nopol.NoPol - statement #20
10:01:29.022 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:35 which is executed by 5 tests
10:01:29.022 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:35
10:01:29.022 fr.inria.lille.repair.nopol.NoPol - statement #21
10:01:29.022 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:32 which is executed by 5 tests
10:01:29.022 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:32
10:01:29.022 fr.inria.lille.repair.nopol.NoPol - statement #22
10:01:29.022 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:31 which is executed by 5 tests
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:31
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - statement #23
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:30 which is executed by 5 tests
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:30
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - statement #24
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:29 which is executed by 5 tests
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:29
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - statement #25
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:28 which is executed by 5 tests
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:28
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - statement #26
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:27 which is executed by 5 tests
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:27
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - statement #27
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:26 which is executed by 5 tests
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:26
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - statement #28
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:22 which is executed by 5 tests
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:22
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - statement #29
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:21 which is executed by 5 tests
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:21
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - statement #30
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:16 which is executed by 5 tests
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:16
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - statement #31
10:01:29.023 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:15 which is executed by 5 tests
10:01:29.024 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:15
10:01:29.024 fr.inria.lille.repair.nopol.NoPol - statement #32
10:01:29.024 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_testcases.junit.QuixFixOracleHelper:14 which is executed by 5 tests
10:01:29.024 fr.inria.lille.repair.nopol.NoPol - cannot spoon SourceLocation java_testcases.junit.QuixFixOracleHelper:14
10:01:29.024 fr.inria.lille.repair.nopol.NoPol - statement #33
10:01:29.024 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:33 which is executed by 5 tests
10:01:29.417 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:30.832 x.java.compiler.DynamicClassCompiler - [Compilation errors]
POWERSET.java:37: error: missing return statement
    }
    ^
Note: POWERSET.java uses unchecked or unsafe operations.
Note: Recompile with -Xlint:unchecked for details.
10:01:30.853 f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class POWERSET {
    public static java.util.ArrayList<java.util.ArrayList> powerset(java.util.ArrayList arr) {
        if (!arr.isEmpty()) {
            java.lang.Object first = arr.get(0);
            arr.remove(0);
            java.util.ArrayList rest = arr;
            java.util.ArrayList<java.util.ArrayList> rest_subsets = java_programs.POWERSET.powerset(rest);
            java.util.ArrayList<java.util.ArrayList> output = new java.util.ArrayList<java.util.ArrayList>(100);
            java.util.ArrayList to_add = new java.util.ArrayList(100);
            to_add.add(first);
            for (java.util.ArrayList subset : rest_subsets) {
                to_add.addAll(subset);
            }
            output.add(to_add);
            return output;
        } else {
            java.util.ArrayList empty_set = new java.util.ArrayList<java.util.ArrayList>();
            empty_set.add(new java.util.ArrayList());
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(6).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("arr",arr);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectInput("empty_set",empty_set);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(6).collectionEnds();
            }
            if (runtimeAngelicValue)
                return empty_set;

        }
    }
}
10:01:30.854 fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:01:30.854 fr.inria.lille.repair.nopol.NoPol - statement #34
10:01:30.854 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:32 which is executed by 5 tests
10:01:31.035 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:33.068 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[]x,df,z,m]]> but was:<[[[]x,df,z,m]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[]a,b,c]]> but was:<[[[]a,b,c]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[]a,b]]> but was:<[[[]a,b]]>]
10:01:33.069 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[[],[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[]x,df,z,m]]> but was:<[[[]x,df,z,m]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[[],[]a]]> but was:<[[[]a]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[[],[c],[b],[b,c],[a],[a,c],[a,b],[]a,b,c]]> but was:<[[[]a,b,c]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[[],[b],[a],[]a,b]]> but was:<[[[]a,b]]>]
10:01:33.069 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:32.
10:01:33.072 fr.inria.lille.repair.nopol.NoPol - statement #35
10:01:33.072 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:31 which is executed by 5 tests
10:01:33.298 fr.inria.lille.repair.nopol.NoPol - statement #36
10:01:33.298 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.POWERSET:15 which is executed by 5 tests
10:01:33.580 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
10:01:35.619 tests.output - Failing tests with false: 
[test_4(java_testcases.junit.POWERSET_Test): expected:<[[][,[m],[z],[z,m],[df],[df,m],[df,z],[df,z,m],[x],[x,m],[x,z],[x,z,m],[x,df],[x,df,m],[x,df,z],[x,df,z,m]]]> but was:<[[][]]>, test_2(java_testcases.junit.POWERSET_Test): expected:<[[][,[a]]]> but was:<[[][]]>, test_0(java_testcases.junit.POWERSET_Test): expected:<[[][,[c],[b],[b,c],[a],[a,c],[a,b],[a,b,c]]]> but was:<[[][]]>, test_1(java_testcases.junit.POWERSET_Test): expected:<[[][,[b],[a],[a,b]]]> but was:<[[][]]>]
10:01:35.620 tests.output - Failing tests with true: 
[test_4(java_testcases.junit.POWERSET_Test): Index: 0, Size: 0, test_2(java_testcases.junit.POWERSET_Test): Index: 0, Size: 0, test_0(java_testcases.junit.POWERSET_Test): Index: 0, Size: 0, test_1(java_testcases.junit.POWERSET_Test): Index: 0, Size: 0]
10:01:35.620 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.POWERSET:15.
10:01:35.621 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
10:01:35.645 fr.inria.lille.repair.nopol.NoPol - Nb classes : 3
10:01:35.645 fr.inria.lille.repair.nopol.NoPol - Nb methods : 9
10:01:35.645 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 9
10:01:35.645 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
10:01:35.645 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
10:01:35.646 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
10:01:35.650 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
10:01:35.650 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 44836ms
10:01:35.650 fr.inria.lille.repair.nopol.NoPol - 
