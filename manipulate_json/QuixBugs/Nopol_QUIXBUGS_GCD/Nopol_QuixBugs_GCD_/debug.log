10:00:46.514 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
10:00:46.516 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_GCD/Nopol_QuixBugs_GCD_/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_GCD/Nopol_QuixBugs_GCD_/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
10:00:46.517 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
10:00:46.517 fr.inria.lille.repair.nopol.NoPol - Args: [java_testcases.junit.GCD_Test]
10:00:46.519 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[java_testcases.junit.GCD_Test], complianceLevel=8, outputFolder=., json=true}
10:00:46.520 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
10:00:46.522 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
10:00:46.523 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
10:00:46.523 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
10:00:46.523 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
10:00:46.529 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
10:00:46.529 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
10:01:02.675 fr.inria.lille.repair.nopol.NoPol - statement #1
10:01:02.677 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.GCD:19 which is executed by 5 tests
10:01:02.826 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:03.517 x.java.compiler.DynamicClassCompiler - [Compilation errors]
GCD.java:24: error: missing return statement
    }
    ^
10:01:03.520 f.i.l.r.n.s.ConstraintModelBuilder - Unable to compile the change: 
public class GCD {
    public static int gcd(int a, int b) {
        if (b == 0) {
            return a;
        } else {
            boolean spoonDefaultValue = false;
            try {
                spoonDefaultValue = true;
            } catch (java.lang.Exception __NopolProcessorException) {
            }
            boolean runtimeAngelicValue = fr.inria.lille.repair.nopol.synth.AngelicExecution.angelicValue(spoonDefaultValue);
            if (fr.inria.lille.commons.trace.RuntimeValues.instance(0).isEnabled()) {
                fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionStarts();
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("a",a);} catch (Exception ex1) {ex1.printStackTrace();};
                try{fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectInput("b",b);} catch (Exception ex1) {ex1.printStackTrace();};
                fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectOutput(runtimeAngelicValue);
                fr.inria.lille.commons.trace.RuntimeValues.instance(0).collectionEnds();
            }
            if (runtimeAngelicValue)
                return java_programs.GCD.gcd(a % b, b);

        }
    }
}
10:01:03.520 fr.inria.lille.repair.nopol.NoPol - Error ExecutionException java.util.concurrent.ExecutionException: xxl.java.compiler.DynamicCompilationException: Aborting: dynamic compilation failed
10:01:03.520 fr.inria.lille.repair.nopol.NoPol - statement #2
10:01:03.520 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.GCD:16 which is executed by 5 tests
10:01:03.585 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
10:01:04.101 tests.output - Failing tests with false: 
[test_1(java_testcases.junit.GCD_Test): null, test_2(java_testcases.junit.GCD_Test): null, test_0(java_testcases.junit.GCD_Test): null, test_3(java_testcases.junit.GCD_Test): null, test_4(java_testcases.junit.GCD_Test): null]
10:01:04.101 tests.output - Failing tests with true: 
[test_1(java_testcases.junit.GCD_Test): expected:<1> but was:<37>, test_3(java_testcases.junit.GCD_Test): expected:<18913> but was:<624129>]
10:01:04.102 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.GCD:16.
10:01:04.102 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
10:01:04.111 fr.inria.lille.repair.nopol.NoPol - Nb classes : 3
10:01:04.111 fr.inria.lille.repair.nopol.NoPol - Nb methods : 9
10:01:04.112 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 2
10:01:04.112 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
10:01:04.112 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
10:01:04.113 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
10:01:04.113 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
10:01:04.113 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 17590ms
10:01:04.113 fr.inria.lille.repair.nopol.NoPol - 
