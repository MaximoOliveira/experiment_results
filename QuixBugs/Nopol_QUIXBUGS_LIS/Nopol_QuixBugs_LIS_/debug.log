10:00:43.653 fr.inria.lille.repair.nopol.NoPol - Source files: [src/main/java]
10:00:43.656 fr.inria.lille.repair.nopol.NoPol - Classpath: [file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_LIS/Nopol_QuixBugs_LIS_/target/classes/, file:/users2/cpca56132020/moliveira/folders/Nopol_QUIXBUGS_LIS/Nopol_QuixBugs_LIS_/target/test-classes/, file:/users2/cpca56132020/moliveira/.m2/repository/junit/junit/4.11/junit-4.11.jar, file:/users2/cpca56132020/moliveira/.m2/repository/org/hamcrest/hamcrest-core/1.3/hamcrest-core-1.3.jar, file:/users2/cpca56132020/moliveira/RepairThemAll/script/../repair_tools/nopol.jar]
10:00:43.657 fr.inria.lille.repair.nopol.NoPol - Statement type: PRE_THEN_COND
10:00:43.658 fr.inria.lille.repair.nopol.NoPol - Args: [java_testcases.junit.LIS_Test]
10:00:43.660 fr.inria.lille.repair.nopol.NoPol - Config: Config{synthesisDepth=3, collectStaticMethods=true, collectStaticFields=false, collectLiterals=false, onlyOneSynthesisResult=true, sortExpressions=true, maxLineInvocationPerTest=250, timeoutMethodInvocation=2000, dataCollectionTimeoutInSecondForSynthesis=900, addWeight=0.19478, subWeight=0.04554, mulWeight=0.0102, divWeight=0.00613, andWeight=0.10597, orWeight=0.05708, eqWeight=0.22798, nEqWeight=0.0, lessEqWeight=0.0255, lessWeight=0.0947, methodCallWeight=0.1, fieldAccessWeight=0.08099, constantWeight=0.14232, variableWeight=0.05195, mode=REPAIR, type=PRE_THEN_COND, synthesis=SMT, oracle=ANGELIC, solver=Z3, solverPath='/users2/cpca56132020/moliveira/RepairThemAll/script/../libs/z3/build/z3', projectSources=[src/main/java], projectClasspath='[Ljava.net.URL;@16c0663d', projectTests=[java_testcases.junit.LIS_Test], complianceLevel=8, outputFolder=., json=true}
10:00:43.660 fr.inria.lille.repair.nopol.NoPol - Available processors (cores): 1
10:00:43.663 fr.inria.lille.repair.nopol.NoPol - Free memory: 968 MB
10:00:43.663 fr.inria.lille.repair.nopol.NoPol - Maximum memory: 3 GB
10:00:43.663 fr.inria.lille.repair.nopol.NoPol - Total memory available to JVM: 989 MB
10:00:43.663 fr.inria.lille.repair.nopol.NoPol - Java version: 1.8.0_272
10:00:43.669 fr.inria.lille.repair.nopol.NoPol - JAVA_HOME: /usr/lib/jvm/java-1.8.0-openjdk/bin
10:00:43.669 fr.inria.lille.repair.nopol.NoPol - PATH: /usr/lib/jvm/java-1.8.0-openjdk/bin:/users2/cpca56132020/moliveira/deps/Maven/apache-maven/bin:/users2/cpca56132020/moliveira/deps/Gradle/gradle-6.8.3/bin:/usr/condabin:/usr/local/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/users2/cpca56132020/moliveira/.local/bin:/users2/cpca56132020/moliveira/bin
10:00:59.245 fr.inria.lille.repair.nopol.NoPol - statement #1
10:00:59.253 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:36 which is executed by 4 tests
10:00:59.450 fr.inria.lille.repair.nopol.NoPol - statement #2
10:00:59.451 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:34 which is executed by 4 tests
10:00:59.532 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:01.036 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<7>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<2>]
10:01:01.036 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
10:01:01.036 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:34.
10:01:01.036 fr.inria.lille.repair.nopol.NoPol - statement #3
10:01:01.037 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:31 which is executed by 4 tests
10:01:01.123 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:01.871 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<0>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<0>]
10:01:01.871 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
10:01:01.871 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:31.
10:01:01.871 fr.inria.lille.repair.nopol.NoPol - statement #4
10:01:01.871 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:30 which is executed by 4 tests
10:01:01.952 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:02.752 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): null, test_2(java_testcases.junit.LIS_Test): null, test_1(java_testcases.junit.LIS_Test): null, test_3(java_testcases.junit.LIS_Test): null]
10:01:02.752 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
10:01:02.752 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:30.
10:01:02.752 fr.inria.lille.repair.nopol.NoPol - statement #5
10:01:02.752 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:29 which is executed by 4 tests
10:01:02.824 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:03.366 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<0>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<0>]
10:01:03.366 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
10:01:03.366 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:29.
10:01:03.367 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
10:01:03.905 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<0>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<0>]
10:01:03.905 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
10:01:03.905 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:29.
10:01:03.906 fr.inria.lille.repair.nopol.NoPol - statement #6
10:01:03.906 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:27 which is executed by 4 tests
10:01:03.975 fr.inria.lille.repair.nopol.NoPol - statement #7
10:01:03.975 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:23 which is executed by 4 tests
10:01:04.050 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:04.627 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<1>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<1>]
10:01:04.627 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
10:01:04.627 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:23.
10:01:04.628 fr.inria.lille.repair.nopol.NoPol - statement #8
10:01:04.628 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:22 which is executed by 4 tests
10:01:04.695 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:05.231 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<1>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<1>]
10:01:05.231 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
10:01:05.231 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:22.
10:01:05.231 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalReplacer
10:01:05.776 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<1>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<1>]
10:01:05.777 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<7>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<7>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<9>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<6>]
10:01:05.777 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:22.
10:01:05.777 fr.inria.lille.repair.nopol.NoPol - statement #9
10:01:05.777 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:21 which is executed by 4 tests
10:01:05.851 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:06.526 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<1>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<1>]
10:01:06.527 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
10:01:06.527 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:21.
10:01:06.531 fr.inria.lille.repair.nopol.NoPol - statement #10
10:01:06.532 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:20 which is executed by 4 tests
10:01:06.621 fr.inria.lille.repair.nopol.NoPol - statement #11
10:01:06.621 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:18 which is executed by 4 tests
10:01:06.727 fr.inria.lille.repair.nopol.NoPol - looking with class fr.inria.lille.repair.nopol.spoon.smt.ConditionalAdder
10:01:07.447 tests.output - Failing tests with false: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<0>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<0>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<0>]
10:01:07.447 tests.output - Failing tests with true: 
[test_0(java_testcases.junit.LIS_Test): expected:<3> but was:<2>, test_2(java_testcases.junit.LIS_Test): expected:<3> but was:<1>, test_1(java_testcases.junit.LIS_Test): expected:<6> but was:<5>, test_3(java_testcases.junit.LIS_Test): expected:<4> but was:<3>]
10:01:07.447 f.i.l.r.n.synth.SMTNopolSynthesizer - Not enough specifications: 0. A trivial patch is "true" or "false", please write new tests specifying SourceLocation java_programs.LIS:18.
10:01:07.448 fr.inria.lille.repair.nopol.NoPol - statement #12
10:01:07.448 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:17 which is executed by 4 tests
10:01:07.505 fr.inria.lille.repair.nopol.NoPol - statement #13
10:01:07.506 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:15 which is executed by 4 tests
10:01:07.589 fr.inria.lille.repair.nopol.NoPol - statement #14
10:01:07.589 fr.inria.lille.repair.nopol.NoPol - Analysing SourceLocation java_programs.LIS:14 which is executed by 4 tests
10:01:07.658 fr.inria.lille.repair.nopol.NoPol - ----INFORMATION----
10:01:07.661 fr.inria.lille.repair.nopol.NoPol - Nb classes : 3
10:01:07.661 fr.inria.lille.repair.nopol.NoPol - Nb methods : 9
10:01:07.661 fr.inria.lille.repair.nopol.NoPol - Nb Statements Analyzed : 10
10:01:07.661 fr.inria.lille.repair.nopol.NoPol - Nb Statements with Angelic Value Found : 0
10:01:07.661 fr.inria.lille.repair.nopol.NoPol - Nb inputs in SMT : 0
10:01:07.675 fr.inria.lille.repair.nopol.NoPol - Nb SMT level: 0
10:01:07.676 fr.inria.lille.repair.nopol.NoPol - Nb variables in SMT : 0
10:01:07.676 fr.inria.lille.repair.nopol.NoPol - NoPol Execution time : 24006ms
10:01:07.676 fr.inria.lille.repair.nopol.NoPol - 
